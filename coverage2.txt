ElaboratedConfiguredPackage
{elabUnitId
=
UnitId
"colour-2.3.6-555181482708844ff63ca12e01988cc74d9d7bd572786ef9451ec8c68468dee6",
elabComponentId
=
ComponentId
"colour-2.3.6-555181482708844ff63ca12e01988cc74d9d7bd572786ef9451ec8c68468dee6",
elabInstantiatedWith
=
fromList
[],
elabLinkedInstantiatedWith
=
fromList
[],
elabIsCanonical
=
True,
elabPkgSourceId
=
PackageIdentifier
{pkgName
=
PackageName
"colour",
pkgVersion
=
mkVersion
[2,3,6]},
elabModuleShape
=
ModuleShape
{modShapeProvides
=
fromList
[(ModuleName
"Data.Colour",OpenModule
(IndefFullUnitId
(ComponentId
"colour-2.3.6-005b1108275085df34d8b16d95e24ace05b61a584a4d34362ec4222572b7933f")
(fromList
[]))
(ModuleName
"Data.Colour")),(ModuleName
"Data.Colour.CIE",OpenModule
(IndefFullUnitId
(ComponentId
"colour-2.3.6-005b1108275085df34d8b16d95e24ace05b61a584a4d34362ec4222572b7933f")
(fromList
[]))
(ModuleName
"Data.Colour.CIE")),(ModuleName
"Data.Colour.CIE.Illuminant",OpenModule
(IndefFullUnitId
(ComponentId
"colour-2.3.6-005b1108275085df34d8b16d95e24ace05b61a584a4d34362ec4222572b7933f")
(fromList
[]))
(ModuleName
"Data.Colour.CIE.Illuminant")),(ModuleName
"Data.Colour.Names",OpenModule
(IndefFullUnitId
(ComponentId
"colour-2.3.6-005b1108275085df34d8b16d95e24ace05b61a584a4d34362ec4222572b7933f")
(fromList
[]))
(ModuleName
"Data.Colour.Names")),(ModuleName
"Data.Colour.RGBSpace",OpenModule
(IndefFullUnitId
(ComponentId
"colour-2.3.6-005b1108275085df34d8b16d95e24ace05b61a584a4d34362ec4222572b7933f")
(fromList
[]))
(ModuleName
"Data.Colour.RGBSpace")),(ModuleName
"Data.Colour.RGBSpace.HSL",OpenModule
(IndefFullUnitId
(ComponentId
"colour-2.3.6-005b1108275085df34d8b16d95e24ace05b61a584a4d34362ec4222572b7933f")
(fromList
[]))
(ModuleName
"Data.Colour.RGBSpace.HSL")),(ModuleName
"Data.Colour.RGBSpace.HSV",OpenModule
(IndefFullUnitId
(ComponentId
"colour-2.3.6-005b1108275085df34d8b16d95e24ace05b61a584a4d34362ec4222572b7933f")
(fromList
[]))
(ModuleName
"Data.Colour.RGBSpace.HSV")),(ModuleName
"Data.Colour.SRGB",OpenModule
(IndefFullUnitId
(ComponentId
"colour-2.3.6-005b1108275085df34d8b16d95e24ace05b61a584a4d34362ec4222572b7933f")
(fromList
[]))
(ModuleName
"Data.Colour.SRGB")),(ModuleName
"Data.Colour.SRGB.Linear",OpenModule
(IndefFullUnitId
(ComponentId
"colour-2.3.6-005b1108275085df34d8b16d95e24ace05b61a584a4d34362ec4222572b7933f")
(fromList
[]))
(ModuleName
"Data.Colour.SRGB.Linear"))],
modShapeRequires
=
fromList
[]},
elabFlagAssignment
=
fromList
[],
elabFlagDefaults
=
fromList
[],
elabPkgDescription
=
PackageDescription
{specVersion
=
CabalSpecV1_10,
package
=
PackageIdentifier
{pkgName
=
PackageName
"colour",
pkgVersion
=
mkVersion
[2,3,6]},
licenseRaw
=
Right
MIT,
licenseFiles
=
[SymbolicPath
"LICENSE"],
copyright
=
"",
maintainer
=
"Russell
O'Connor
<roconnor@theorem.ca>",
author
=
"Russell
O'Connor",
stability
=
"",
testedWith
=
[(GHC,ThisVersion
(mkVersion
[8,8,4]))],
homepage
=
"http://www.haskell.org/haskellwiki/Colour",
pkgUrl
=
"",
bugReports
=
"",
sourceRepos
=
[],
synopsis
=
"A
model
for
human
colour/color
perception",
description
=
"This
package
provides
a
data
type
for
colours
and
transparency.\nColours
can
be
blended
and
composed.\nVarious
colour
spaces
are
supported.\nA
module
of
colour
names
(\"Data.Colour.Names\")
is
provided.",
category
=
"data,
graphics",
customFieldsPD
=
[],
buildTypeRaw
=
Just
Simple,
setupBuildInfo
=
Nothing,
library
=
Just
(Library
{libName
=
LMainLibName,
exposedModules
=
[ModuleName
"Data.Colour",ModuleName
"Data.Colour.SRGB",ModuleName
"Data.Colour.SRGB.Linear",ModuleName
"Data.Colour.CIE",ModuleName
"Data.Colour.CIE.Illuminant",ModuleName
"Data.Colour.RGBSpace",ModuleName
"Data.Colour.RGBSpace.HSL",ModuleName
"Data.Colour.RGBSpace.HSV",ModuleName
"Data.Colour.Names"],
reexportedModules
=
[],
signatures
=
[],
libExposed
=
True,
libVisibility
=
LibraryVisibilityPublic,
libBuildInfo
=
BuildInfo
{buildable
=
True,
buildTools
=
[],
buildToolDepends
=
[],
cppOptions
=
[],
asmOptions
=
[],
cmmOptions
=
[],
ccOptions
=
[],
cxxOptions
=
[],
ldOptions
=
[],
hsc2hsOptions
=
[],
pkgconfigDepends
=
[],
frameworks
=
[],
extraFrameworkDirs
=
[],
asmSources
=
[],
cmmSources
=
[],
cSources
=
[],
cxxSources
=
[],
jsSources
=
[],
hsSourceDirs
=
[SymbolicPath
"."],
otherModules
=
[ModuleName
"Data.Colour.Internal",ModuleName
"Data.Colour.Chan",ModuleName
"Data.Colour.RGB",ModuleName
"Data.Colour.Matrix",ModuleName
"Data.Colour.CIE.Chromaticity"],
virtualModules
=
[],
autogenModules
=
[],
defaultLanguage
=
Just
Haskell98,
otherLanguages
=
[],
defaultExtensions
=
[],
otherExtensions
=
[],
oldExtensions
=
[],
extraLibs
=
[],
extraLibsStatic
=
[],
extraGHCiLibs
=
[],
extraBundledLibs
=
[],
extraLibFlavours
=
[],
extraDynLibFlavours
=
[],
extraLibDirs
=
[],
extraLibDirsStatic
=
[],
includeDirs
=
[],
includes
=
[],
autogenIncludes
=
[],
installIncludes
=
[],
options
=
PerCompilerFlavor
[]
[],
profOptions
=
PerCompilerFlavor
[]
[],
sharedOptions
=
PerCompilerFlavor
[]
[],
staticOptions
=
PerCompilerFlavor
[]
[],
customFieldsBI
=
[],
targetBuildDepends
=
[Dependency
(PackageName
"base")
(IntersectVersionRanges
(OrLaterVersion
(mkVersion
[4,13]))
(EarlierVersion
(mkVersion
[5])))
(fromNonEmpty
(LMainLibName
:|
[]))],
mixins
=
[]}}),
subLibraries
=
[],
executables
=
[],
foreignLibs
=
[],
testSuites
=
[TestSuite
{testName
=
UnqualComponentName
"test-colour",
testInterface
=
TestSuiteExeV10
(mkVersion
[1,0])
"Tests.hs",
testBuildInfo
=
BuildInfo
{buildable
=
True,
buildTools
=
[],
buildToolDepends
=
[],
cppOptions
=
[],
asmOptions
=
[],
cmmOptions
=
[],
ccOptions
=
[],
cxxOptions
=
[],
ldOptions
=
[],
hsc2hsOptions
=
[],
pkgconfigDepends
=
[],
frameworks
=
[],
extraFrameworkDirs
=
[],
asmSources
=
[],
cmmSources
=
[],
cSources
=
[],
cxxSources
=
[],
jsSources
=
[],
hsSourceDirs
=
[SymbolicPath
"."],
otherModules
=
[ModuleName
"Data.Colour",ModuleName
"Data.Colour.SRGB",ModuleName
"Data.Colour.SRGB.Linear",ModuleName
"Data.Colour.CIE",ModuleName
"Data.Colour.CIE.Illuminant",ModuleName
"Data.Colour.RGBSpace",ModuleName
"Data.Colour.RGBSpace.HSL",ModuleName
"Data.Colour.RGBSpace.HSV",ModuleName
"Data.Colour.Names",ModuleName
"Data.Colour.Internal",ModuleName
"Data.Colour.Chan",ModuleName
"Data.Colour.RGB",ModuleName
"Data.Colour.Matrix",ModuleName
"Data.Colour.CIE.Chromaticity"],
virtualModules
=
[],
autogenModules
=
[],
defaultLanguage
=
Just
Haskell98,
otherLanguages
=
[],
defaultExtensions
=
[],
otherExtensions
=
[],
oldExtensions
=
[],
extraLibs
=
[],
extraLibsStatic
=
[],
extraGHCiLibs
=
[],
extraBundledLibs
=
[],
extraLibFlavours
=
[],
extraDynLibFlavours
=
[],
extraLibDirs
=
[],
extraLibDirsStatic
=
[],
includeDirs
=
[],
includes
=
[],
autogenIncludes
=
[],
installIncludes
=
[],
options
=
PerCompilerFlavor
[]
[],
profOptions
=
PerCompilerFlavor
[]
[],
sharedOptions
=
PerCompilerFlavor
[]
[],
staticOptions
=
PerCompilerFlavor
[]
[],
customFieldsBI
=
[],
targetBuildDepends
=
[Dependency
(PackageName
"QuickCheck")
(IntersectVersionRanges
(OrLaterVersion
(mkVersion
[2,5]))
(EarlierVersion
(mkVersion
[2,15])))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"base")
(IntersectVersionRanges
(OrLaterVersion
(mkVersion
[4,13]))
(EarlierVersion
(mkVersion
[5])))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"colour")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"random")
(IntersectVersionRanges
(OrLaterVersion
(mkVersion
[1,0]))
(EarlierVersion
(mkVersion
[1,2])))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"test-framework")
(IntersectVersionRanges
(OrLaterVersion
(mkVersion
[0,8]))
(EarlierVersion
(mkVersion
[0,9])))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"test-framework-quickcheck2")
(IntersectVersionRanges
(OrLaterVersion
(mkVersion
[0,3]))
(EarlierVersion
(mkVersion
[0,4])))
(fromNonEmpty
(LMainLibName
:|
[]))],
mixins
=
[]}}],
benchmarks
=
[],
dataFiles
=
["README","CHANGELOG"],
dataDir
=
".",
extraSrcFiles
=
[],
extraTmpFiles
=
[],
extraDocFiles
=
[]},
elabPkgSourceLocation
=
RepoTarballPackage
(RepoSecure
{repoRemote
=
RemoteRepo
{remoteRepoName
=
RepoName
"hackage.haskell.org",
remoteRepoURI
=
http://hackage.haskell.org/,
remoteRepoSecure
=
Just
True,
remoteRepoRootKeys
=
["fe331502606802feac15e514d9b9ea83fee8b6ffef71335479a2e68d84adc6b0","1ea9ba32c526d1cc91ab5e5bd364ec5e9e8cb67179a471872f6e26f0ae773d42","2c6c3627bd6c982990239487f1abd02e08a02e6cf16edb105a8012d444d870c3","0a5c7ea47cd1b15f01f5f51a33adda7e655bc0f0b0615baa8e271f4c3351e21d","51f0161b906011b52c6613376b1ae937670da69322113a246a09f807c62f6921"],
remoteRepoKeyThreshold
=
3,
remoteRepoShouldTryHttps
=
True},
repoLocalDir
=
"/home/michaels/.cabal/packages/hackage.haskell.org"})
(PackageIdentifier
{pkgName
=
PackageName
"colour",
pkgVersion
=
mkVersion
[2,3,6]})
Nothing,
elabPkgSourceHash
=
Just
(HashValue
",\211]\205iD\165\171\201\241\b\165\235^\229d\182\177\250\152\169\236y\206\252\194\vX\137\145\248q"),
elabLocalToProject
=
False,
elabBuildStyle
=
BuildAndInstall,
elabEnabledSpec
=
ComponentRequestedSpec
{testsRequested
=
False,
benchmarksRequested
=
False},
elabStanzasAvailable
=
OptionalStanzaSet
0,
elabStanzasRequested
=
OptionalStanzaMap
Nothing
Nothing,
elabSetupPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db"],
elabBuildPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db"],
elabRegisterPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db"],
elabInplaceSetupPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db",SpecificPackageDB
"/home/michaels/repos/cabal/cabal-testsuite/PackageTests/Regression/T7893/dist-newstyle/packagedb/ghc-8.10.7"],
elabInplaceBuildPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db",SpecificPackageDB
"/home/michaels/repos/cabal/cabal-testsuite/PackageTests/Regression/T7893/dist-newstyle/packagedb/ghc-8.10.7"],
elabInplaceRegisterPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db",SpecificPackageDB
"/home/michaels/repos/cabal/cabal-testsuite/PackageTests/Regression/T7893/dist-newstyle/packagedb/ghc-8.10.7"],
elabPkgDescriptionOverride
=
Just
"Name:















colour\nVersion:












2.3.6\nCabal-Version:






>=
1.10\nLicense:












MIT\nLicense-file:







LICENSE\nAuthor:













Russell
O'Connor\nMaintainer:









Russell
O'Connor
<roconnor@theorem.ca>\nHomepage:











http://www.haskell.org/haskellwiki/Colour\nBuild-Type:









Simple\nCategory:











data,
graphics\nSynopsis:











A
model
for
human
colour/color
perception\nDescription:








This
package
provides
a
data
type
for
colours
and
transparency.\n




















Colours
can
be
blended
and
composed.\n




















Various
colour
spaces
are
supported.\n




















A
module
of
colour
names
(\"Data.Colour.Names\")
is
provided.\nTested-with:








GHC
==
8.8.4\ndata-files:









README
CHANGELOG\n\nLibrary\n

default-language:

Haskell98\n

Build-Depends:




base
>=
4.13
&&
<
5\n

Exposed-Modules:


Data.Colour\n




















Data.Colour.SRGB\n




















Data.Colour.SRGB.Linear\n




















Data.Colour.CIE\n




















Data.Colour.CIE.Illuminant\n




















Data.Colour.RGBSpace\n




















Data.Colour.RGBSpace.HSL\n




















Data.Colour.RGBSpace.HSV\n




















Data.Colour.Names\n

Other-Modules:




Data.Colour.Internal\n




















Data.Colour.Chan\n




















Data.Colour.RGB\n




















Data.Colour.Matrix\n




















Data.Colour.CIE.Chromaticity\ntest-suite
test-colour\n

default-language:

Haskell98\n

type:













exitcode-stdio-1.0\n

main-is:










Tests.hs\n

build-depends:
base
>=
4.13
&&
<
5,\n
















colour,\n
















QuickCheck
>=
2.5
&&
<
2.15,\n
















random
>=
1.0
&&
<
1.2,\n
















test-framework
>=
0.8
&&
<
0.9,\n
















test-framework-quickcheck2
>=
0.3
&&
<
0.4\n

Other-Modules:


Data.Colour\n


















Data.Colour.SRGB\n


















Data.Colour.SRGB.Linear\n


















Data.Colour.CIE\n


















Data.Colour.CIE.Illuminant\n


















Data.Colour.RGBSpace\n


















Data.Colour.RGBSpace.HSL\n


















Data.Colour.RGBSpace.HSV\n


















Data.Colour.Names\n


















Data.Colour.Internal\n


















Data.Colour.Chan\n


















Data.Colour.RGB\n


















Data.Colour.Matrix\n


















Data.Colour.CIE.Chromaticity\n",
elabVanillaLib
=
True,
elabSharedLib
=
True,
elabStaticLib
=
False,
elabDynExe
=
False,
elabFullyStaticExe
=
False,
elabGHCiLib
=
False,
elabProfLib
=
False,
elabProfExe
=
False,
elabProfLibDetail
=
ProfDetailDefault,
elabProfExeDetail
=
ProfDetailDefault,
elabCoverage
=
False,
elabOptimization
=
NormalOptimisation,
elabSplitObjs
=
False,
elabSplitSections
=
False,
elabStripLibs
=
False,
elabStripExes
=
False,
elabDebugInfo
=
NoDebugInfo,
elabDumpBuildInfo
=
NoDumpBuildInfo,
elabProgramPaths
=
fromList
[("ghc","/nix/store/lrwichshmxvlqnbbym9yg4bxqsrvc88j-ghc-8.10.7/bin/ghc"),("ghc-pkg","/nix/store/lrwichshmxvlqnbbym9yg4bxqsrvc88j-ghc-8.10.7/bin/ghc-pkg-8.10.7")],
elabProgramArgs
=
fromList
[],
elabProgramPathExtra
=
["/home/michaels/.cabal/bin"],
elabConfigureScriptArgs
=
[],
elabExtraLibDirs
=
[],
elabExtraLibDirsStatic
=
[],
elabExtraFrameworkDirs
=
[],
elabExtraIncludeDirs
=
[],
elabProgPrefix
=
Nothing,
elabProgSuffix
=
Nothing,
elabInstallDirs
=
InstallDirs
{prefix
=
"/home/michaels/.cabal/store/ghc-8.10.7/colour-2.3.6-555181482708844ff63ca12e01988cc74d9d7bd572786ef9451ec8c68468dee6",
bindir
=
"/home/michaels/.cabal/store/ghc-8.10.7/colour-2.3.6-555181482708844ff63ca12e01988cc74d9d7bd572786ef9451ec8c68468dee6/bin",
libdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/colour-2.3.6-555181482708844ff63ca12e01988cc74d9d7bd572786ef9451ec8c68468dee6/lib",
libsubdir
=
"",
dynlibdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/colour-2.3.6-555181482708844ff63ca12e01988cc74d9d7bd572786ef9451ec8c68468dee6/lib",
flibdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/colour-2.3.6-555181482708844ff63ca12e01988cc74d9d7bd572786ef9451ec8c68468dee6/lib",
libexecdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/colour-2.3.6-555181482708844ff63ca12e01988cc74d9d7bd572786ef9451ec8c68468dee6/libexec",
libexecsubdir
=
"",
includedir
=
"/home/michaels/.cabal/store/ghc-8.10.7/colour-2.3.6-555181482708844ff63ca12e01988cc74d9d7bd572786ef9451ec8c68468dee6/lib/include",
datadir
=
"/home/michaels/.cabal/store/ghc-8.10.7/colour-2.3.6-555181482708844ff63ca12e01988cc74d9d7bd572786ef9451ec8c68468dee6/share",
datasubdir
=
"",
docdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/colour-2.3.6-555181482708844ff63ca12e01988cc74d9d7bd572786ef9451ec8c68468dee6/share/doc",
mandir
=
"/home/michaels/.cabal/store/ghc-8.10.7/colour-2.3.6-555181482708844ff63ca12e01988cc74d9d7bd572786ef9451ec8c68468dee6/share/man",
htmldir
=
"/home/michaels/.cabal/store/ghc-8.10.7/colour-2.3.6-555181482708844ff63ca12e01988cc74d9d7bd572786ef9451ec8c68468dee6/share/doc/html",
haddockdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/colour-2.3.6-555181482708844ff63ca12e01988cc74d9d7bd572786ef9451ec8c68468dee6/share/doc/html",
sysconfdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/colour-2.3.6-555181482708844ff63ca12e01988cc74d9d7bd572786ef9451ec8c68468dee6/etc"},
elabHaddockHoogle
=
False,
elabHaddockHtml
=
False,
elabHaddockHtmlLocation
=
Nothing,
elabHaddockForeignLibs
=
False,
elabHaddockForHackage
=
ForDevelopment,
elabHaddockExecutables
=
False,
elabHaddockTestSuites
=
False,
elabHaddockBenchmarks
=
False,
elabHaddockInternal
=
False,
elabHaddockCss
=
Nothing,
elabHaddockLinkedSource
=
False,
elabHaddockQuickJump
=
False,
elabHaddockHscolourCss
=
Nothing,
elabHaddockContents
=
Nothing,
elabTestMachineLog
=
Just
"$pkgid.log",
elabTestHumanLog
=
Just
"$pkgid-$test-suite.log",
elabTestShowDetails
=
Just
Failures,
elabTestKeepTix
=
False,
elabTestWrapper
=
Nothing,
elabTestFailWhenNoTestSuites
=
False,
elabTestTestOptions
=
[],
elabBenchmarkOptions
=
[],
elabSetupScriptStyle
=
SetupNonCustomInternalLib,
elabSetupScriptCliVersion
=
mkVersion
[3,7,0,0],
elabConfigureTargets
=
[],
elabBuildTargets
=
[],
elabTestTargets
=
[],
elabBenchTargets
=
[],
elabReplTarget
=
Nothing,
elabHaddockTargets
=
[],
elabBuildHaddocks
=
False,
elabPkgOrComp
=
ElabPackage
(ElaboratedPackage
{pkgInstalledId
=
ComponentId
"colour-2.3.6-555181482708844ff63ca12e01988cc74d9d7bd572786ef9451ec8c68468dee6",
pkgLibDependencies
=
ComponentDeps
{unComponentDeps
=
fromList
[(ComponentLib,[ComponentId
"base-4.14.3.0"])]},
pkgDependsOnSelfLib
=
ComponentDeps
{unComponentDeps
=
fromList
[(ComponentLib,[()])]},
pkgExeDependencies
=
ComponentDeps
{unComponentDeps
=
fromList
[(ComponentLib,[])]},
pkgExeDependencyPaths
=
ComponentDeps
{unComponentDeps
=
fromList
[(ComponentLib,[])]},
pkgPkgConfigDependencies
=
[],
pkgStanzasEnabled
=
OptionalStanzaSet
0})}
ElaboratedConfiguredPackage
{elabUnitId
=
UnitId
"call-stack-0.4.0-f11e257c261917655af9abd68f4615a74d2e5e33c9a7c093558f78d94ffb5166",
elabComponentId
=
ComponentId
"call-stack-0.4.0-f11e257c261917655af9abd68f4615a74d2e5e33c9a7c093558f78d94ffb5166",
elabInstantiatedWith
=
fromList
[],
elabLinkedInstantiatedWith
=
fromList
[],
elabIsCanonical
=
True,
elabPkgSourceId
=
PackageIdentifier
{pkgName
=
PackageName
"call-stack",
pkgVersion
=
mkVersion
[0,4,0]},
elabModuleShape
=
ModuleShape
{modShapeProvides
=
fromList
[(ModuleName
"Data.CallStack",OpenModule
(IndefFullUnitId
(ComponentId
"call-stack-0.4.0-f84e001ba80527eccce19e6c5209b2b571524124582a7dc9a75351a9f9fb9678")
(fromList
[]))
(ModuleName
"Data.CallStack"))],
modShapeRequires
=
fromList
[]},
elabFlagAssignment
=
fromList
[],
elabFlagDefaults
=
fromList
[],
elabPkgDescription
=
PackageDescription
{specVersion
=
CabalSpecV1_12,
package
=
PackageIdentifier
{pkgName
=
PackageName
"call-stack",
pkgVersion
=
mkVersion
[0,4,0]},
licenseRaw
=
Right
MIT,
licenseFiles
=
[SymbolicPath
"LICENSE"],
copyright
=
"",
maintainer
=
"Simon
Hengel
<sol@typeful.net>",
author
=
"",
stability
=
"",
testedWith
=
[],
homepage
=
"https://github.com/sol/call-stack#readme",
pkgUrl
=
"",
bugReports
=
"https://github.com/sol/call-stack/issues",
sourceRepos
=
[SourceRepo
{repoKind
=
RepoHead,
repoType
=
Just
(KnownRepoType
Git),
repoLocation
=
Just
"https://github.com/sol/call-stack",
repoModule
=
Nothing,
repoBranch
=
Nothing,
repoTag
=
Nothing,
repoSubdir
=
Nothing}],
synopsis
=
"Use
GHC
call-stacks
in
a
backward
compatible
way",
description
=
"",
category
=
"Data",
customFieldsPD
=
[],
buildTypeRaw
=
Just
Simple,
setupBuildInfo
=
Nothing,
library
=
Just
(Library
{libName
=
LMainLibName,
exposedModules
=
[ModuleName
"Data.CallStack"],
reexportedModules
=
[],
signatures
=
[],
libExposed
=
True,
libVisibility
=
LibraryVisibilityPublic,
libBuildInfo
=
BuildInfo
{buildable
=
True,
buildTools
=
[],
buildToolDepends
=
[],
cppOptions
=
[],
asmOptions
=
[],
cmmOptions
=
[],
ccOptions
=
[],
cxxOptions
=
[],
ldOptions
=
[],
hsc2hsOptions
=
[],
pkgconfigDepends
=
[],
frameworks
=
[],
extraFrameworkDirs
=
[],
asmSources
=
[],
cmmSources
=
[],
cSources
=
[],
cxxSources
=
[],
jsSources
=
[],
hsSourceDirs
=
[SymbolicPath
"src"],
otherModules
=
[ModuleName
"Data.SrcLoc",ModuleName
"Paths_call_stack"],
virtualModules
=
[],
autogenModules
=
[],
defaultLanguage
=
Just
Haskell2010,
otherLanguages
=
[],
defaultExtensions
=
[],
otherExtensions
=
[],
oldExtensions
=
[],
extraLibs
=
[],
extraLibsStatic
=
[],
extraGHCiLibs
=
[],
extraBundledLibs
=
[],
extraLibFlavours
=
[],
extraDynLibFlavours
=
[],
extraLibDirs
=
[],
extraLibDirsStatic
=
[],
includeDirs
=
[],
includes
=
[],
autogenIncludes
=
[],
installIncludes
=
[],
options
=
PerCompilerFlavor
["-Wall"]
[],
profOptions
=
PerCompilerFlavor
[]
[],
sharedOptions
=
PerCompilerFlavor
[]
[],
staticOptions
=
PerCompilerFlavor
[]
[],
customFieldsBI
=
[],
targetBuildDepends
=
[Dependency
(PackageName
"base")
(IntersectVersionRanges
(OrLaterVersion
(mkVersion
[4]))
(EarlierVersion
(mkVersion
[5])))
(fromNonEmpty
(LMainLibName
:|
[]))],
mixins
=
[]}}),
subLibraries
=
[],
executables
=
[],
foreignLibs
=
[],
testSuites
=
[TestSuite
{testName
=
UnqualComponentName
"spec",
testInterface
=
TestSuiteExeV10
(mkVersion
[1,0])
"Spec.hs",
testBuildInfo
=
BuildInfo
{buildable
=
True,
buildTools
=
[],
buildToolDepends
=
[],
cppOptions
=
[],
asmOptions
=
[],
cmmOptions
=
[],
ccOptions
=
[],
cxxOptions
=
[],
ldOptions
=
[],
hsc2hsOptions
=
[],
pkgconfigDepends
=
[],
frameworks
=
[],
extraFrameworkDirs
=
[],
asmSources
=
[],
cmmSources
=
[],
cSources
=
[],
cxxSources
=
[],
jsSources
=
[],
hsSourceDirs
=
[SymbolicPath
"test"],
otherModules
=
[ModuleName
"Data.CallStackSpec",ModuleName
"Example",ModuleName
"Util",ModuleName
"Paths_call_stack"],
virtualModules
=
[],
autogenModules
=
[],
defaultLanguage
=
Just
Haskell2010,
otherLanguages
=
[],
defaultExtensions
=
[],
otherExtensions
=
[],
oldExtensions
=
[],
extraLibs
=
[],
extraLibsStatic
=
[],
extraGHCiLibs
=
[],
extraBundledLibs
=
[],
extraLibFlavours
=
[],
extraDynLibFlavours
=
[],
extraLibDirs
=
[],
extraLibDirsStatic
=
[],
includeDirs
=
[],
includes
=
[],
autogenIncludes
=
[],
installIncludes
=
[],
options
=
PerCompilerFlavor
["-Wall"]
[],
profOptions
=
PerCompilerFlavor
[]
[],
sharedOptions
=
PerCompilerFlavor
[]
[],
staticOptions
=
PerCompilerFlavor
[]
[],
customFieldsBI
=
[],
targetBuildDepends
=
[Dependency
(PackageName
"base")
(IntersectVersionRanges
(OrLaterVersion
(mkVersion
[4]))
(EarlierVersion
(mkVersion
[5])))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"call-stack")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"filepath")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"nanospec")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[]))],
mixins
=
[]}}],
benchmarks
=
[],
dataFiles
=
[],
dataDir
=
".",
extraSrcFiles
=
[],
extraTmpFiles
=
[],
extraDocFiles
=
[]},
elabPkgSourceLocation
=
RepoTarballPackage
(RepoSecure
{repoRemote
=
RemoteRepo
{remoteRepoName
=
RepoName
"hackage.haskell.org",
remoteRepoURI
=
http://hackage.haskell.org/,
remoteRepoSecure
=
Just
True,
remoteRepoRootKeys
=
["fe331502606802feac15e514d9b9ea83fee8b6ffef71335479a2e68d84adc6b0","1ea9ba32c526d1cc91ab5e5bd364ec5e9e8cb67179a471872f6e26f0ae773d42","2c6c3627bd6c982990239487f1abd02e08a02e6cf16edb105a8012d444d870c3","0a5c7ea47cd1b15f01f5f51a33adda7e655bc0f0b0615baa8e271f4c3351e21d","51f0161b906011b52c6613376b1ae937670da69322113a246a09f807c62f6921"],
remoteRepoKeyThreshold
=
3,
remoteRepoShouldTryHttps
=
True},
repoLocalDir
=
"/home/michaels/.cabal/packages/hackage.haskell.org"})
(PackageIdentifier
{pkgName
=
PackageName
"call-stack",
pkgVersion
=
mkVersion
[0,4,0]})
Nothing,
elabPkgSourceHash
=
Just
(HashValue
"C\v\207\138\&4\EOT\247\229S\EMW<\v\128{\DC3V\148o\f\143(\155\179\217\175\178y\198\&6\184{"),
elabLocalToProject
=
False,
elabBuildStyle
=
BuildAndInstall,
elabEnabledSpec
=
ComponentRequestedSpec
{testsRequested
=
False,
benchmarksRequested
=
False},
elabStanzasAvailable
=
OptionalStanzaSet
0,
elabStanzasRequested
=
OptionalStanzaMap
Nothing
Nothing,
elabSetupPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db"],
elabBuildPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db"],
elabRegisterPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db"],
elabInplaceSetupPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db",SpecificPackageDB
"/home/michaels/repos/cabal/cabal-testsuite/PackageTests/Regression/T7893/dist-newstyle/packagedb/ghc-8.10.7"],
elabInplaceBuildPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db",SpecificPackageDB
"/home/michaels/repos/cabal/cabal-testsuite/PackageTests/Regression/T7893/dist-newstyle/packagedb/ghc-8.10.7"],
elabInplaceRegisterPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db",SpecificPackageDB
"/home/michaels/repos/cabal/cabal-testsuite/PackageTests/Regression/T7893/dist-newstyle/packagedb/ghc-8.10.7"],
elabPkgDescriptionOverride
=
Just
"cabal-version:
1.12\n\n--
This
file
has
been
generated
from
package.yaml
by
hpack
version
0.34.4.\n--\n--
see:
https://github.com/sol/hpack\n\nname:










call-stack\nversion:







0.4.0\nsynopsis:






Use
GHC
call-stacks
in
a
backward
compatible
way\ncategory:






Data\nhomepage:






https://github.com/sol/call-stack#readme\nbug-reports:



https://github.com/sol/call-stack/issues\nmaintainer:




Simon
Hengel
<sol@typeful.net>\nlicense:







MIT\nlicense-file:


LICENSE\nbuild-type:




Simple\n\nsource-repository
head\n

type:
git\n

location:
https://github.com/sol/call-stack\n\nlibrary\n

hs-source-dirs:\n





src\n

ghc-options:
-Wall\n

build-depends:\n





base
==4.*\n

if
os(windows)\n



cpp-options:
-DWINDOWS\n



build-depends:\n







filepath\n

exposed-modules:\n





Data.CallStack\n

other-modules:\n





Data.SrcLoc\n





Paths_call_stack\n

default-language:
Haskell2010\n\ntest-suite
spec\n

type:
exitcode-stdio-1.0\n

main-is:
Spec.hs\n

hs-source-dirs:\n





test\n

ghc-options:
-Wall\n

build-depends:\n





base
==4.*\n



,
call-stack\n



,
filepath\n



,
nanospec\n

other-modules:\n





Data.CallStackSpec\n





Example\n





Util\n





Paths_call_stack\n

default-language:
Haskell2010\n",
elabVanillaLib
=
True,
elabSharedLib
=
True,
elabStaticLib
=
False,
elabDynExe
=
False,
elabFullyStaticExe
=
False,
elabGHCiLib
=
False,
elabProfLib
=
False,
elabProfExe
=
False,
elabProfLibDetail
=
ProfDetailDefault,
elabProfExeDetail
=
ProfDetailDefault,
elabCoverage
=
False,
elabOptimization
=
NormalOptimisation,
elabSplitObjs
=
False,
elabSplitSections
=
False,
elabStripLibs
=
False,
elabStripExes
=
False,
elabDebugInfo
=
NoDebugInfo,
elabDumpBuildInfo
=
NoDumpBuildInfo,
elabProgramPaths
=
fromList
[("ghc","/nix/store/lrwichshmxvlqnbbym9yg4bxqsrvc88j-ghc-8.10.7/bin/ghc"),("ghc-pkg","/nix/store/lrwichshmxvlqnbbym9yg4bxqsrvc88j-ghc-8.10.7/bin/ghc-pkg-8.10.7")],
elabProgramArgs
=
fromList
[],
elabProgramPathExtra
=
["/home/michaels/.cabal/bin"],
elabConfigureScriptArgs
=
[],
elabExtraLibDirs
=
[],
elabExtraLibDirsStatic
=
[],
elabExtraFrameworkDirs
=
[],
elabExtraIncludeDirs
=
[],
elabProgPrefix
=
Nothing,
elabProgSuffix
=
Nothing,
elabInstallDirs
=
InstallDirs
{prefix
=
"/home/michaels/.cabal/store/ghc-8.10.7/call-stack-0.4.0-f11e257c261917655af9abd68f4615a74d2e5e33c9a7c093558f78d94ffb5166",
bindir
=
"/home/michaels/.cabal/store/ghc-8.10.7/call-stack-0.4.0-f11e257c261917655af9abd68f4615a74d2e5e33c9a7c093558f78d94ffb5166/bin",
libdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/call-stack-0.4.0-f11e257c261917655af9abd68f4615a74d2e5e33c9a7c093558f78d94ffb5166/lib",
libsubdir
=
"",
dynlibdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/call-stack-0.4.0-f11e257c261917655af9abd68f4615a74d2e5e33c9a7c093558f78d94ffb5166/lib",
flibdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/call-stack-0.4.0-f11e257c261917655af9abd68f4615a74d2e5e33c9a7c093558f78d94ffb5166/lib",
libexecdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/call-stack-0.4.0-f11e257c261917655af9abd68f4615a74d2e5e33c9a7c093558f78d94ffb5166/libexec",
libexecsubdir
=
"",
includedir
=
"/home/michaels/.cabal/store/ghc-8.10.7/call-stack-0.4.0-f11e257c261917655af9abd68f4615a74d2e5e33c9a7c093558f78d94ffb5166/lib/include",
datadir
=
"/home/michaels/.cabal/store/ghc-8.10.7/call-stack-0.4.0-f11e257c261917655af9abd68f4615a74d2e5e33c9a7c093558f78d94ffb5166/share",
datasubdir
=
"",
docdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/call-stack-0.4.0-f11e257c261917655af9abd68f4615a74d2e5e33c9a7c093558f78d94ffb5166/share/doc",
mandir
=
"/home/michaels/.cabal/store/ghc-8.10.7/call-stack-0.4.0-f11e257c261917655af9abd68f4615a74d2e5e33c9a7c093558f78d94ffb5166/share/man",
htmldir
=
"/home/michaels/.cabal/store/ghc-8.10.7/call-stack-0.4.0-f11e257c261917655af9abd68f4615a74d2e5e33c9a7c093558f78d94ffb5166/share/doc/html",
haddockdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/call-stack-0.4.0-f11e257c261917655af9abd68f4615a74d2e5e33c9a7c093558f78d94ffb5166/share/doc/html",
sysconfdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/call-stack-0.4.0-f11e257c261917655af9abd68f4615a74d2e5e33c9a7c093558f78d94ffb5166/etc"},
elabHaddockHoogle
=
False,
elabHaddockHtml
=
False,
elabHaddockHtmlLocation
=
Nothing,
elabHaddockForeignLibs
=
False,
elabHaddockForHackage
=
ForDevelopment,
elabHaddockExecutables
=
False,
elabHaddockTestSuites
=
False,
elabHaddockBenchmarks
=
False,
elabHaddockInternal
=
False,
elabHaddockCss
=
Nothing,
elabHaddockLinkedSource
=
False,
elabHaddockQuickJump
=
False,
elabHaddockHscolourCss
=
Nothing,
elabHaddockContents
=
Nothing,
elabTestMachineLog
=
Just
"$pkgid.log",
elabTestHumanLog
=
Just
"$pkgid-$test-suite.log",
elabTestShowDetails
=
Just
Failures,
elabTestKeepTix
=
False,
elabTestWrapper
=
Nothing,
elabTestFailWhenNoTestSuites
=
False,
elabTestTestOptions
=
[],
elabBenchmarkOptions
=
[],
elabSetupScriptStyle
=
SetupNonCustomInternalLib,
elabSetupScriptCliVersion
=
mkVersion
[3,7,0,0],
elabConfigureTargets
=
[],
elabBuildTargets
=
[],
elabTestTargets
=
[],
elabBenchTargets
=
[],
elabReplTarget
=
Nothing,
elabHaddockTargets
=
[],
elabBuildHaddocks
=
False,
elabPkgOrComp
=
ElabPackage
(ElaboratedPackage
{pkgInstalledId
=
ComponentId
"call-stack-0.4.0-f11e257c261917655af9abd68f4615a74d2e5e33c9a7c093558f78d94ffb5166",
pkgLibDependencies
=
ComponentDeps
{unComponentDeps
=
fromList
[(ComponentLib,[ComponentId
"base-4.14.3.0"])]},
pkgDependsOnSelfLib
=
ComponentDeps
{unComponentDeps
=
fromList
[(ComponentLib,[()])]},
pkgExeDependencies
=
ComponentDeps
{unComponentDeps
=
fromList
[(ComponentLib,[])]},
pkgExeDependencyPaths
=
ComponentDeps
{unComponentDeps
=
fromList
[(ComponentLib,[])]},
pkgPkgConfigDependencies
=
[],
pkgStanzasEnabled
=
OptionalStanzaSet
0})}
ElaboratedConfiguredPackage
{elabUnitId
=
UnitId
"HUnit-1.6.2.0-b2b2674ec87a7c61b7fa473d0252e2cfb0d432bf08667e1be5fe2f2320acc1c9",
elabComponentId
=
ComponentId
"HUnit-1.6.2.0-b2b2674ec87a7c61b7fa473d0252e2cfb0d432bf08667e1be5fe2f2320acc1c9",
elabInstantiatedWith
=
fromList
[],
elabLinkedInstantiatedWith
=
fromList
[],
elabIsCanonical
=
True,
elabPkgSourceId
=
PackageIdentifier
{pkgName
=
PackageName
"HUnit",
pkgVersion
=
mkVersion
[1,6,2,0]},
elabModuleShape
=
ModuleShape
{modShapeProvides
=
fromList
[(ModuleName
"Test.HUnit",OpenModule
(IndefFullUnitId
(ComponentId
"HUnit-1.6.2.0-b2e618bac802044491c42ec580a854ff04bc9edde847e420660b36b301ceb544")
(fromList
[]))
(ModuleName
"Test.HUnit")),(ModuleName
"Test.HUnit.Base",OpenModule
(IndefFullUnitId
(ComponentId
"HUnit-1.6.2.0-b2e618bac802044491c42ec580a854ff04bc9edde847e420660b36b301ceb544")
(fromList
[]))
(ModuleName
"Test.HUnit.Base")),(ModuleName
"Test.HUnit.Lang",OpenModule
(IndefFullUnitId
(ComponentId
"HUnit-1.6.2.0-b2e618bac802044491c42ec580a854ff04bc9edde847e420660b36b301ceb544")
(fromList
[]))
(ModuleName
"Test.HUnit.Lang")),(ModuleName
"Test.HUnit.Terminal",OpenModule
(IndefFullUnitId
(ComponentId
"HUnit-1.6.2.0-b2e618bac802044491c42ec580a854ff04bc9edde847e420660b36b301ceb544")
(fromList
[]))
(ModuleName
"Test.HUnit.Terminal")),(ModuleName
"Test.HUnit.Text",OpenModule
(IndefFullUnitId
(ComponentId
"HUnit-1.6.2.0-b2e618bac802044491c42ec580a854ff04bc9edde847e420660b36b301ceb544")
(fromList
[]))
(ModuleName
"Test.HUnit.Text"))],
modShapeRequires
=
fromList
[]},
elabFlagAssignment
=
fromList
[],
elabFlagDefaults
=
fromList
[],
elabPkgDescription
=
PackageDescription
{specVersion
=
CabalSpecV1_12,
package
=
PackageIdentifier
{pkgName
=
PackageName
"HUnit",
pkgVersion
=
mkVersion
[1,6,2,0]},
licenseRaw
=
Right
BSD3,
licenseFiles
=
[SymbolicPath
"LICENSE"],
copyright
=
"",
maintainer
=
"Simon
Hengel
<sol@typeful.net>",
author
=
"Dean
Herington",
stability
=
"stable",
testedWith
=
[],
homepage
=
"https://github.com/hspec/HUnit#readme",
pkgUrl
=
"",
bugReports
=
"https://github.com/hspec/HUnit/issues",
sourceRepos
=
[SourceRepo
{repoKind
=
RepoHead,
repoType
=
Just
(KnownRepoType
Git),
repoLocation
=
Just
"https://github.com/hspec/HUnit",
repoModule
=
Nothing,
repoBranch
=
Nothing,
repoTag
=
Nothing,
repoSubdir
=
Nothing}],
synopsis
=
"A
unit
testing
framework
for
Haskell",
description
=
"HUnit
is
a
unit
testing
framework
for
Haskell,
inspired
by
the\nJUnit
tool
for
Java,
see:
<http://www.junit.org>.",
category
=
"Testing",
customFieldsPD
=
[],
buildTypeRaw
=
Just
Simple,
setupBuildInfo
=
Nothing,
library
=
Just
(Library
{libName
=
LMainLibName,
exposedModules
=
[ModuleName
"Test.HUnit.Base",ModuleName
"Test.HUnit.Lang",ModuleName
"Test.HUnit.Terminal",ModuleName
"Test.HUnit.Text",ModuleName
"Test.HUnit"],
reexportedModules
=
[],
signatures
=
[],
libExposed
=
True,
libVisibility
=
LibraryVisibilityPublic,
libBuildInfo
=
BuildInfo
{buildable
=
True,
buildTools
=
[],
buildToolDepends
=
[],
cppOptions
=
[],
asmOptions
=
[],
cmmOptions
=
[],
ccOptions
=
[],
cxxOptions
=
[],
ldOptions
=
[],
hsc2hsOptions
=
[],
pkgconfigDepends
=
[],
frameworks
=
[],
extraFrameworkDirs
=
[],
asmSources
=
[],
cmmSources
=
[],
cSources
=
[],
cxxSources
=
[],
jsSources
=
[],
hsSourceDirs
=
[SymbolicPath
"src"],
otherModules
=
[ModuleName
"Paths_HUnit"],
virtualModules
=
[],
autogenModules
=
[],
defaultLanguage
=
Just
Haskell2010,
otherLanguages
=
[],
defaultExtensions
=
[],
otherExtensions
=
[],
oldExtensions
=
[],
extraLibs
=
[],
extraLibsStatic
=
[],
extraGHCiLibs
=
[],
extraBundledLibs
=
[],
extraLibFlavours
=
[],
extraDynLibFlavours
=
[],
extraLibDirs
=
[],
extraLibDirsStatic
=
[],
includeDirs
=
[],
includes
=
[],
autogenIncludes
=
[],
installIncludes
=
[],
options
=
PerCompilerFlavor
["-Wall"]
[],
profOptions
=
PerCompilerFlavor
[]
[],
sharedOptions
=
PerCompilerFlavor
[]
[],
staticOptions
=
PerCompilerFlavor
[]
[],
customFieldsBI
=
[],
targetBuildDepends
=
[Dependency
(PackageName
"base")
(IntersectVersionRanges
(OrLaterVersion
(mkVersion
[4]))
(EarlierVersion
(mkVersion
[5])))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"call-stack")
(OrLaterVersion
(mkVersion
[0,3,0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"deepseq")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[]))],
mixins
=
[]}}),
subLibraries
=
[],
executables
=
[],
foreignLibs
=
[],
testSuites
=
[TestSuite
{testName
=
UnqualComponentName
"tests",
testInterface
=
TestSuiteExeV10
(mkVersion
[1,0])
"HUnitTests.hs",
testBuildInfo
=
BuildInfo
{buildable
=
True,
buildTools
=
[],
buildToolDepends
=
[],
cppOptions
=
[],
asmOptions
=
[],
cmmOptions
=
[],
ccOptions
=
[],
cxxOptions
=
[],
ldOptions
=
[],
hsc2hsOptions
=
[],
pkgconfigDepends
=
[],
frameworks
=
[],
extraFrameworkDirs
=
[],
asmSources
=
[],
cmmSources
=
[],
cSources
=
[],
cxxSources
=
[],
jsSources
=
[],
hsSourceDirs
=
[SymbolicPath
"tests",SymbolicPath
"examples"],
otherModules
=
[ModuleName
"HUnitTestBase",ModuleName
"HUnitTestExtended",ModuleName
"TerminalTest",ModuleName
"Example",ModuleName
"Paths_HUnit"],
virtualModules
=
[],
autogenModules
=
[],
defaultLanguage
=
Just
Haskell2010,
otherLanguages
=
[],
defaultExtensions
=
[],
otherExtensions
=
[],
oldExtensions
=
[],
extraLibs
=
[],
extraLibsStatic
=
[],
extraGHCiLibs
=
[],
extraBundledLibs
=
[],
extraLibFlavours
=
[],
extraDynLibFlavours
=
[],
extraLibDirs
=
[],
extraLibDirsStatic
=
[],
includeDirs
=
[],
includes
=
[],
autogenIncludes
=
[],
installIncludes
=
[],
options
=
PerCompilerFlavor
["-Wall"]
[],
profOptions
=
PerCompilerFlavor
[]
[],
sharedOptions
=
PerCompilerFlavor
[]
[],
staticOptions
=
PerCompilerFlavor
[]
[],
customFieldsBI
=
[],
targetBuildDepends
=
[Dependency
(PackageName
"HUnit")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"base")
(IntersectVersionRanges
(OrLaterVersion
(mkVersion
[4]))
(EarlierVersion
(mkVersion
[5])))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"call-stack")
(OrLaterVersion
(mkVersion
[0,3,0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"deepseq")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"filepath")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[]))],
mixins
=
[]}}],
benchmarks
=
[],
dataFiles
=
[],
dataDir
=
".",
extraSrcFiles
=
["CHANGELOG.md","README.md"],
extraTmpFiles
=
[],
extraDocFiles
=
[]},
elabPkgSourceLocation
=
RepoTarballPackage
(RepoSecure
{repoRemote
=
RemoteRepo
{remoteRepoName
=
RepoName
"hackage.haskell.org",
remoteRepoURI
=
http://hackage.haskell.org/,
remoteRepoSecure
=
Just
True,
remoteRepoRootKeys
=
["fe331502606802feac15e514d9b9ea83fee8b6ffef71335479a2e68d84adc6b0","1ea9ba32c526d1cc91ab5e5bd364ec5e9e8cb67179a471872f6e26f0ae773d42","2c6c3627bd6c982990239487f1abd02e08a02e6cf16edb105a8012d444d870c3","0a5c7ea47cd1b15f01f5f51a33adda7e655bc0f0b0615baa8e271f4c3351e21d","51f0161b906011b52c6613376b1ae937670da69322113a246a09f807c62f6921"],
remoteRepoKeyThreshold
=
3,
remoteRepoShouldTryHttps
=
True},
repoLocalDir
=
"/home/michaels/.cabal/packages/hackage.haskell.org"})
(PackageIdentifier
{pkgName
=
PackageName
"HUnit",
pkgVersion
=
mkVersion
[1,6,2,0]})
Nothing,
elabPkgSourceHash
=
Just
(HashValue
"\176\183S\136q\255\192XHo\192\a@\136m/1r\248\250hi\147k\254\131\165\225\v\215D\171"),
elabLocalToProject
=
False,
elabBuildStyle
=
BuildAndInstall,
elabEnabledSpec
=
ComponentRequestedSpec
{testsRequested
=
False,
benchmarksRequested
=
False},
elabStanzasAvailable
=
OptionalStanzaSet
0,
elabStanzasRequested
=
OptionalStanzaMap
Nothing
Nothing,
elabSetupPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db"],
elabBuildPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db"],
elabRegisterPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db"],
elabInplaceSetupPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db",SpecificPackageDB
"/home/michaels/repos/cabal/cabal-testsuite/PackageTests/Regression/T7893/dist-newstyle/packagedb/ghc-8.10.7"],
elabInplaceBuildPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db",SpecificPackageDB
"/home/michaels/repos/cabal/cabal-testsuite/PackageTests/Regression/T7893/dist-newstyle/packagedb/ghc-8.10.7"],
elabInplaceRegisterPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db",SpecificPackageDB
"/home/michaels/repos/cabal/cabal-testsuite/PackageTests/Regression/T7893/dist-newstyle/packagedb/ghc-8.10.7"],
elabPkgDescriptionOverride
=
Just
"cabal-version:
1.12\n\n--
This
file
has
been
generated
from
package.yaml
by
hpack
version
0.34.3.\n--\n--
see:
https://github.com/sol/hpack\n\nname:


















HUnit\nversion:















1.6.2.0\nlicense:















BSD3\nlicense-file:










LICENSE\nauthor:
















Dean
Herington\nmaintainer:












Simon
Hengel
<sol@typeful.net>\nstability:













stable\nhomepage:














https://github.com/hspec/HUnit#readme\nbug-reports:











https://github.com/hspec/HUnit/issues\ncategory:














Testing\nsynopsis:














A
unit
testing
framework
for
Haskell\ndescription:











HUnit
is
a
unit
testing
framework
for
Haskell,
inspired
by
the\n























JUnit
tool
for
Java,
see:
<http://www.junit.org>.\nbuild-type:












Simple\nextra-source-files:\n

CHANGELOG.md\n

README.md\n\nsource-repository
head\n

type:
git\n

location:
https://github.com/hspec/HUnit\n\nlibrary\n

hs-source-dirs:\n



src\n

build-depends:\n



base
==4.*,\n



call-stack
>=0.3.0,\n



deepseq\n

exposed-modules:\n



Test.HUnit.Base\n



Test.HUnit.Lang\n



Test.HUnit.Terminal\n



Test.HUnit.Text\n



Test.HUnit\n

other-modules:\n



Paths_HUnit\n

default-language:
Haskell2010\n

ghc-options:
-Wall\n\ntest-suite
tests\n

type:
exitcode-stdio-1.0\n

main-is:
HUnitTests.hs\n

hs-source-dirs:\n



tests\n



examples\n

build-depends:\n



HUnit,\n



base
==4.*,\n



call-stack
>=0.3.0,\n



deepseq,\n



filepath\n

other-modules:\n



HUnitTestBase\n



HUnitTestExtended\n



TerminalTest\n



Example\n



Paths_HUnit\n

default-language:
Haskell2010\n

ghc-options:
-Wall\n",
elabVanillaLib
=
True,
elabSharedLib
=
True,
elabStaticLib
=
False,
elabDynExe
=
False,
elabFullyStaticExe
=
False,
elabGHCiLib
=
False,
elabProfLib
=
False,
elabProfExe
=
False,
elabProfLibDetail
=
ProfDetailDefault,
elabProfExeDetail
=
ProfDetailDefault,
elabCoverage
=
False,
elabOptimization
=
NormalOptimisation,
elabSplitObjs
=
False,
elabSplitSections
=
False,
elabStripLibs
=
False,
elabStripExes
=
False,
elabDebugInfo
=
NoDebugInfo,
elabDumpBuildInfo
=
NoDumpBuildInfo,
elabProgramPaths
=
fromList
[("ghc","/nix/store/lrwichshmxvlqnbbym9yg4bxqsrvc88j-ghc-8.10.7/bin/ghc"),("ghc-pkg","/nix/store/lrwichshmxvlqnbbym9yg4bxqsrvc88j-ghc-8.10.7/bin/ghc-pkg-8.10.7")],
elabProgramArgs
=
fromList
[],
elabProgramPathExtra
=
["/home/michaels/.cabal/bin"],
elabConfigureScriptArgs
=
[],
elabExtraLibDirs
=
[],
elabExtraLibDirsStatic
=
[],
elabExtraFrameworkDirs
=
[],
elabExtraIncludeDirs
=
[],
elabProgPrefix
=
Nothing,
elabProgSuffix
=
Nothing,
elabInstallDirs
=
InstallDirs
{prefix
=
"/home/michaels/.cabal/store/ghc-8.10.7/HUnit-1.6.2.0-b2b2674ec87a7c61b7fa473d0252e2cfb0d432bf08667e1be5fe2f2320acc1c9",
bindir
=
"/home/michaels/.cabal/store/ghc-8.10.7/HUnit-1.6.2.0-b2b2674ec87a7c61b7fa473d0252e2cfb0d432bf08667e1be5fe2f2320acc1c9/bin",
libdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/HUnit-1.6.2.0-b2b2674ec87a7c61b7fa473d0252e2cfb0d432bf08667e1be5fe2f2320acc1c9/lib",
libsubdir
=
"",
dynlibdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/HUnit-1.6.2.0-b2b2674ec87a7c61b7fa473d0252e2cfb0d432bf08667e1be5fe2f2320acc1c9/lib",
flibdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/HUnit-1.6.2.0-b2b2674ec87a7c61b7fa473d0252e2cfb0d432bf08667e1be5fe2f2320acc1c9/lib",
libexecdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/HUnit-1.6.2.0-b2b2674ec87a7c61b7fa473d0252e2cfb0d432bf08667e1be5fe2f2320acc1c9/libexec",
libexecsubdir
=
"",
includedir
=
"/home/michaels/.cabal/store/ghc-8.10.7/HUnit-1.6.2.0-b2b2674ec87a7c61b7fa473d0252e2cfb0d432bf08667e1be5fe2f2320acc1c9/lib/include",
datadir
=
"/home/michaels/.cabal/store/ghc-8.10.7/HUnit-1.6.2.0-b2b2674ec87a7c61b7fa473d0252e2cfb0d432bf08667e1be5fe2f2320acc1c9/share",
datasubdir
=
"",
docdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/HUnit-1.6.2.0-b2b2674ec87a7c61b7fa473d0252e2cfb0d432bf08667e1be5fe2f2320acc1c9/share/doc",
mandir
=
"/home/michaels/.cabal/store/ghc-8.10.7/HUnit-1.6.2.0-b2b2674ec87a7c61b7fa473d0252e2cfb0d432bf08667e1be5fe2f2320acc1c9/share/man",
htmldir
=
"/home/michaels/.cabal/store/ghc-8.10.7/HUnit-1.6.2.0-b2b2674ec87a7c61b7fa473d0252e2cfb0d432bf08667e1be5fe2f2320acc1c9/share/doc/html",
haddockdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/HUnit-1.6.2.0-b2b2674ec87a7c61b7fa473d0252e2cfb0d432bf08667e1be5fe2f2320acc1c9/share/doc/html",
sysconfdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/HUnit-1.6.2.0-b2b2674ec87a7c61b7fa473d0252e2cfb0d432bf08667e1be5fe2f2320acc1c9/etc"},
elabHaddockHoogle
=
False,
elabHaddockHtml
=
False,
elabHaddockHtmlLocation
=
Nothing,
elabHaddockForeignLibs
=
False,
elabHaddockForHackage
=
ForDevelopment,
elabHaddockExecutables
=
False,
elabHaddockTestSuites
=
False,
elabHaddockBenchmarks
=
False,
elabHaddockInternal
=
False,
elabHaddockCss
=
Nothing,
elabHaddockLinkedSource
=
False,
elabHaddockQuickJump
=
False,
elabHaddockHscolourCss
=
Nothing,
elabHaddockContents
=
Nothing,
elabTestMachineLog
=
Just
"$pkgid.log",
elabTestHumanLog
=
Just
"$pkgid-$test-suite.log",
elabTestShowDetails
=
Just
Failures,
elabTestKeepTix
=
False,
elabTestWrapper
=
Nothing,
elabTestFailWhenNoTestSuites
=
False,
elabTestTestOptions
=
[],
elabBenchmarkOptions
=
[],
elabSetupScriptStyle
=
SetupNonCustomInternalLib,
elabSetupScriptCliVersion
=
mkVersion
[3,7,0,0],
elabConfigureTargets
=
[],
elabBuildTargets
=
[],
elabTestTargets
=
[],
elabBenchTargets
=
[],
elabReplTarget
=
Nothing,
elabHaddockTargets
=
[],
elabBuildHaddocks
=
False,
elabPkgOrComp
=
ElabPackage
(ElaboratedPackage
{pkgInstalledId
=
ComponentId
"HUnit-1.6.2.0-b2b2674ec87a7c61b7fa473d0252e2cfb0d432bf08667e1be5fe2f2320acc1c9",
pkgLibDependencies
=
ComponentDeps
{unComponentDeps
=
fromList
[(ComponentLib,[ComponentId
"base-4.14.3.0",ComponentId
"call-stack-0.4.0-f11e257c261917655af9abd68f4615a74d2e5e33c9a7c093558f78d94ffb5166",ComponentId
"deepseq-1.4.4.0"])]},
pkgDependsOnSelfLib
=
ComponentDeps
{unComponentDeps
=
fromList
[(ComponentLib,[()])]},
pkgExeDependencies
=
ComponentDeps
{unComponentDeps
=
fromList
[(ComponentLib,[])]},
pkgExeDependencyPaths
=
ComponentDeps
{unComponentDeps
=
fromList
[(ComponentLib,[])]},
pkgPkgConfigDependencies
=
[],
pkgStanzasEnabled
=
OptionalStanzaSet
0})}
ElaboratedConfiguredPackage
{elabUnitId
=
UnitId
"splitmix-0.1.0.4-67c84d13e4d7c71df2ebc6ec425fdcc4f24fcbdf70984a80c9452679ca619983",
elabComponentId
=
ComponentId
"splitmix-0.1.0.4-67c84d13e4d7c71df2ebc6ec425fdcc4f24fcbdf70984a80c9452679ca619983",
elabInstantiatedWith
=
fromList
[],
elabLinkedInstantiatedWith
=
fromList
[],
elabIsCanonical
=
True,
elabPkgSourceId
=
PackageIdentifier
{pkgName
=
PackageName
"splitmix",
pkgVersion
=
mkVersion
[0,1,0,4]},
elabModuleShape
=
ModuleShape
{modShapeProvides
=
fromList
[(ModuleName
"System.Random.SplitMix",OpenModule
(IndefFullUnitId
(ComponentId
"splitmix-0.1.0.4-ecf05af7ba88b161057dd38db998065e9449310e23cbacac97d6a6e83c32b8d5")
(fromList
[]))
(ModuleName
"System.Random.SplitMix")),(ModuleName
"System.Random.SplitMix32",OpenModule
(IndefFullUnitId
(ComponentId
"splitmix-0.1.0.4-ecf05af7ba88b161057dd38db998065e9449310e23cbacac97d6a6e83c32b8d5")
(fromList
[]))
(ModuleName
"System.Random.SplitMix32"))],
modShapeRequires
=
fromList
[]},
elabFlagAssignment
=
fromList
[(FlagName
"optimised-mixer",(1,False))],
elabFlagDefaults
=
fromList
[(FlagName
"optimised-mixer",(1,False))],
elabPkgDescription
=
PackageDescription
{specVersion
=
CabalSpecV1_10,
package
=
PackageIdentifier
{pkgName
=
PackageName
"splitmix",
pkgVersion
=
mkVersion
[0,1,0,4]},
licenseRaw
=
Right
BSD3,
licenseFiles
=
[SymbolicPath
"LICENSE"],
copyright
=
"",
maintainer
=
"Oleg
Grenrus
<oleg.grenrus@iki.fi>",
author
=
"",
stability
=
"",
testedWith
=
[(GHC,UnionVersionRanges
(ThisVersion
(mkVersion
[7,0,4]))
(UnionVersionRanges
(ThisVersion
(mkVersion
[7,2,2]))
(UnionVersionRanges
(ThisVersion
(mkVersion
[7,4,2]))
(UnionVersionRanges
(ThisVersion
(mkVersion
[7,6,3]))
(UnionVersionRanges
(ThisVersion
(mkVersion
[7,8,4]))
(UnionVersionRanges
(ThisVersion
(mkVersion
[7,10,3]))
(UnionVersionRanges
(ThisVersion
(mkVersion
[8,0,2]))
(UnionVersionRanges
(ThisVersion
(mkVersion
[8,2,2]))
(UnionVersionRanges
(ThisVersion
(mkVersion
[8,4,4]))
(UnionVersionRanges
(ThisVersion
(mkVersion
[8,6,5]))
(UnionVersionRanges
(ThisVersion
(mkVersion
[8,8,4]))
(UnionVersionRanges
(ThisVersion
(mkVersion
[8,10,4]))
(UnionVersionRanges
(ThisVersion
(mkVersion
[9,0,1]))
(ThisVersion
(mkVersion
[9,2,1]))))))))))))))),(GHCJS,ThisVersion
(mkVersion
[8,4]))],
homepage
=
"",
pkgUrl
=
"",
bugReports
=
"https://github.com/haskellari/splitmix/issues",
sourceRepos
=
[SourceRepo
{repoKind
=
RepoHead,
repoType
=
Just
(KnownRepoType
Git),
repoLocation
=
Just
"https://github.com/haskellari/splitmix.git",
repoModule
=
Nothing,
repoBranch
=
Nothing,
repoTag
=
Nothing,
repoSubdir
=
Nothing}],
synopsis
=
"Fast
Splittable
PRNG",
description
=
"Pure
Haskell
implementation
of
SplitMix
described
in\n\nGuy
L.
Steele,
Jr.,
Doug
Lea,
and
Christine
H.
Flood.
2014.\nFast
splittable
pseudorandom
number
generators.
In
Proceedings\nof
the
2014
ACM
International
Conference
on
Object
Oriented\nProgramming
Systems
Languages
&
Applications
(OOPSLA
'14).
ACM,\nNew
York,
NY,
USA,
453-472.
DOI:\n<https://doi.org/10.1145/2660193.2660195>\n\nThe
paper
describes
a
new
algorithm
/SplitMix/
for
/splittable/\npseudorandom
number
generator
that
is
quite
fast:
9
64
bit
arithmetic/logical\noperations
per
64
bits
generated.\n\n/SplitMix/
is
tested
with
two
standard
statistical
test
suites
(DieHarder
and\nTestU01,
this
implementation
only
using
the
former)
and
it
appears
to
be\nadequate
for
\"everyday\"
use,
such
as
Monte
Carlo
algorithms
and
randomized\ndata
structures
where
speed
is
important.\n\nIn
particular,
it
__should
not
be
used
for
cryptographic
or
security
applications__,\nbecause
generated
sequences
of
pseudorandom
values
are
too
predictable\n(the
mixing
functions
are
easily
inverted,
and
two
successive
outputs\nsuffice
to
reconstruct
the
internal
state).",
category
=
"System,
Random",
customFieldsPD
=
[],
buildTypeRaw
=
Just
Simple,
setupBuildInfo
=
Nothing,
library
=
Just
(Library
{libName
=
LMainLibName,
exposedModules
=
[ModuleName
"System.Random.SplitMix",ModuleName
"System.Random.SplitMix32"],
reexportedModules
=
[],
signatures
=
[],
libExposed
=
True,
libVisibility
=
LibraryVisibilityPublic,
libBuildInfo
=
BuildInfo
{buildable
=
True,
buildTools
=
[],
buildToolDepends
=
[],
cppOptions
=
["-DSPLITMIX_INIT_C=1"],
asmOptions
=
[],
cmmOptions
=
[],
ccOptions
=
[],
cxxOptions
=
[],
ldOptions
=
[],
hsc2hsOptions
=
[],
pkgconfigDepends
=
[],
frameworks
=
[],
extraFrameworkDirs
=
[],
asmSources
=
[],
cmmSources
=
[],
cSources
=
["cbits-unix/init.c"],
cxxSources
=
[],
jsSources
=
[],
hsSourceDirs
=
[SymbolicPath
"src",SymbolicPath
"src-compat"],
otherModules
=
[ModuleName
"Data.Bits.Compat",ModuleName
"System.Random.SplitMix.Init"],
virtualModules
=
[],
autogenModules
=
[],
defaultLanguage
=
Just
Haskell2010,
otherLanguages
=
[],
defaultExtensions
=
[],
otherExtensions
=
[],
oldExtensions
=
[],
extraLibs
=
[],
extraLibsStatic
=
[],
extraGHCiLibs
=
[],
extraBundledLibs
=
[],
extraLibFlavours
=
[],
extraDynLibFlavours
=
[],
extraLibDirs
=
[],
extraLibDirsStatic
=
[],
includeDirs
=
[],
includes
=
[],
autogenIncludes
=
[],
installIncludes
=
[],
options
=
PerCompilerFlavor
["-Wall"]
[],
profOptions
=
PerCompilerFlavor
[]
[],
sharedOptions
=
PerCompilerFlavor
[]
[],
staticOptions
=
PerCompilerFlavor
[]
[],
customFieldsBI
=
[],
targetBuildDepends
=
[Dependency
(PackageName
"base")
(IntersectVersionRanges
(OrLaterVersion
(mkVersion
[4,3]))
(EarlierVersion
(mkVersion
[4,17])))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"deepseq")
(IntersectVersionRanges
(OrLaterVersion
(mkVersion
[1,3,0,0]))
(EarlierVersion
(mkVersion
[1,5])))
(fromNonEmpty
(LMainLibName
:|
[]))],
mixins
=
[]}}),
subLibraries
=
[],
executables
=
[],
foreignLibs
=
[],
testSuites
=
[TestSuite
{testName
=
UnqualComponentName
"examples",
testInterface
=
TestSuiteExeV10
(mkVersion
[1,0])
"Examples.hs",
testBuildInfo
=
BuildInfo
{buildable
=
True,
buildTools
=
[],
buildToolDepends
=
[],
cppOptions
=
[],
asmOptions
=
[],
cmmOptions
=
[],
ccOptions
=
[],
cxxOptions
=
[],
ldOptions
=
[],
hsc2hsOptions
=
[],
pkgconfigDepends
=
[],
frameworks
=
[],
extraFrameworkDirs
=
[],
asmSources
=
[],
cmmSources
=
[],
cSources
=
[],
cxxSources
=
[],
jsSources
=
[],
hsSourceDirs
=
[SymbolicPath
"tests"],
otherModules
=
[],
virtualModules
=
[],
autogenModules
=
[],
defaultLanguage
=
Just
Haskell2010,
otherLanguages
=
[],
defaultExtensions
=
[],
otherExtensions
=
[],
oldExtensions
=
[],
extraLibs
=
[],
extraLibsStatic
=
[],
extraGHCiLibs
=
[],
extraBundledLibs
=
[],
extraLibFlavours
=
[],
extraDynLibFlavours
=
[],
extraLibDirs
=
[],
extraLibDirsStatic
=
[],
includeDirs
=
[],
includes
=
[],
autogenIncludes
=
[],
installIncludes
=
[],
options
=
PerCompilerFlavor
["-Wall"]
[],
profOptions
=
PerCompilerFlavor
[]
[],
sharedOptions
=
PerCompilerFlavor
[]
[],
staticOptions
=
PerCompilerFlavor
[]
[],
customFieldsBI
=
[],
targetBuildDepends
=
[Dependency
(PackageName
"HUnit")
(UnionVersionRanges
(ThisVersion
(mkVersion
[1,3,1,2]))
(IntersectVersionRanges
(OrLaterVersion
(mkVersion
[1,6,0,0]))
(EarlierVersion
(mkVersion
[1,7]))))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"base")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"splitmix")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[]))],
mixins
=
[]}},TestSuite
{testName
=
UnqualComponentName
"splitmix-tests",
testInterface
=
TestSuiteExeV10
(mkVersion
[1,0])
"Tests.hs",
testBuildInfo
=
BuildInfo
{buildable
=
True,
buildTools
=
[],
buildToolDepends
=
[],
cppOptions
=
[],
asmOptions
=
[],
cmmOptions
=
[],
ccOptions
=
[],
cxxOptions
=
[],
ldOptions
=
[],
hsc2hsOptions
=
[],
pkgconfigDepends
=
[],
frameworks
=
[],
extraFrameworkDirs
=
[],
asmSources
=
[],
cmmSources
=
[],
cSources
=
[],
cxxSources
=
[],
jsSources
=
[],
hsSourceDirs
=
[SymbolicPath
"tests"],
otherModules
=
[ModuleName
"MiniQC",ModuleName
"Uniformity"],
virtualModules
=
[],
autogenModules
=
[],
defaultLanguage
=
Just
Haskell2010,
otherLanguages
=
[],
defaultExtensions
=
[],
otherExtensions
=
[],
oldExtensions
=
[],
extraLibs
=
[],
extraLibsStatic
=
[],
extraGHCiLibs
=
[],
extraBundledLibs
=
[],
extraLibFlavours
=
[],
extraDynLibFlavours
=
[],
extraLibDirs
=
[],
extraLibDirsStatic
=
[],
includeDirs
=
[],
includes
=
[],
autogenIncludes
=
[],
installIncludes
=
[],
options
=
PerCompilerFlavor
["-Wall"]
[],
profOptions
=
PerCompilerFlavor
[]
[],
sharedOptions
=
PerCompilerFlavor
[]
[],
staticOptions
=
PerCompilerFlavor
[]
[],
customFieldsBI
=
[],
targetBuildDepends
=
[Dependency
(PackageName
"HUnit")
(UnionVersionRanges
(ThisVersion
(mkVersion
[1,3,1,2]))
(IntersectVersionRanges
(OrLaterVersion
(mkVersion
[1,6,0,0]))
(EarlierVersion
(mkVersion
[1,7]))))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"base")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"base-compat")
(IntersectVersionRanges
(OrLaterVersion
(mkVersion
[0,11,1]))
(EarlierVersion
(mkVersion
[0,13])))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"containers")
(IntersectVersionRanges
(OrLaterVersion
(mkVersion
[0,4,0,0]))
(EarlierVersion
(mkVersion
[0,7])))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"math-functions")
(UnionVersionRanges
(ThisVersion
(mkVersion
[0,1,7,0]))
(IntersectVersionRanges
(OrLaterVersion
(mkVersion
[0,3,3,0]))
(EarlierVersion
(mkVersion
[0,4]))))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"splitmix")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"test-framework")
(IntersectVersionRanges
(OrLaterVersion
(mkVersion
[0,8,2,0]))
(EarlierVersion
(mkVersion
[0,9])))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"test-framework-hunit")
(IntersectVersionRanges
(OrLaterVersion
(mkVersion
[0,3,0,2]))
(EarlierVersion
(mkVersion
[0,4])))
(fromNonEmpty
(LMainLibName
:|
[]))],
mixins
=
[]}},TestSuite
{testName
=
UnqualComponentName
"montecarlo-pi",
testInterface
=
TestSuiteExeV10
(mkVersion
[1,0])
"SplitMixPi.hs",
testBuildInfo
=
BuildInfo
{buildable
=
True,
buildTools
=
[],
buildToolDepends
=
[],
cppOptions
=
[],
asmOptions
=
[],
cmmOptions
=
[],
ccOptions
=
[],
cxxOptions
=
[],
ldOptions
=
[],
hsc2hsOptions
=
[],
pkgconfigDepends
=
[],
frameworks
=
[],
extraFrameworkDirs
=
[],
asmSources
=
[],
cmmSources
=
[],
cSources
=
[],
cxxSources
=
[],
jsSources
=
[],
hsSourceDirs
=
[SymbolicPath
"tests"],
otherModules
=
[],
virtualModules
=
[],
autogenModules
=
[],
defaultLanguage
=
Just
Haskell2010,
otherLanguages
=
[],
defaultExtensions
=
[],
otherExtensions
=
[],
oldExtensions
=
[],
extraLibs
=
[],
extraLibsStatic
=
[],
extraGHCiLibs
=
[],
extraBundledLibs
=
[],
extraLibFlavours
=
[],
extraDynLibFlavours
=
[],
extraLibDirs
=
[],
extraLibDirsStatic
=
[],
includeDirs
=
[],
includes
=
[],
autogenIncludes
=
[],
installIncludes
=
[],
options
=
PerCompilerFlavor
["-Wall"]
[],
profOptions
=
PerCompilerFlavor
[]
[],
sharedOptions
=
PerCompilerFlavor
[]
[],
staticOptions
=
PerCompilerFlavor
[]
[],
customFieldsBI
=
[],
targetBuildDepends
=
[Dependency
(PackageName
"base")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"splitmix")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[]))],
mixins
=
[]}},TestSuite
{testName
=
UnqualComponentName
"montecarlo-pi-32",
testInterface
=
TestSuiteExeV10
(mkVersion
[1,0])
"SplitMixPi32.hs",
testBuildInfo
=
BuildInfo
{buildable
=
True,
buildTools
=
[],
buildToolDepends
=
[],
cppOptions
=
[],
asmOptions
=
[],
cmmOptions
=
[],
ccOptions
=
[],
cxxOptions
=
[],
ldOptions
=
[],
hsc2hsOptions
=
[],
pkgconfigDepends
=
[],
frameworks
=
[],
extraFrameworkDirs
=
[],
asmSources
=
[],
cmmSources
=
[],
cSources
=
[],
cxxSources
=
[],
jsSources
=
[],
hsSourceDirs
=
[SymbolicPath
"tests"],
otherModules
=
[],
virtualModules
=
[],
autogenModules
=
[],
defaultLanguage
=
Just
Haskell2010,
otherLanguages
=
[],
defaultExtensions
=
[],
otherExtensions
=
[],
oldExtensions
=
[],
extraLibs
=
[],
extraLibsStatic
=
[],
extraGHCiLibs
=
[],
extraBundledLibs
=
[],
extraLibFlavours
=
[],
extraDynLibFlavours
=
[],
extraLibDirs
=
[],
extraLibDirsStatic
=
[],
includeDirs
=
[],
includes
=
[],
autogenIncludes
=
[],
installIncludes
=
[],
options
=
PerCompilerFlavor
["-Wall"]
[],
profOptions
=
PerCompilerFlavor
[]
[],
sharedOptions
=
PerCompilerFlavor
[]
[],
staticOptions
=
PerCompilerFlavor
[]
[],
customFieldsBI
=
[],
targetBuildDepends
=
[Dependency
(PackageName
"base")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"splitmix")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[]))],
mixins
=
[]}},TestSuite
{testName
=
UnqualComponentName
"splitmix-dieharder",
testInterface
=
TestSuiteExeV10
(mkVersion
[1,0])
"Dieharder.hs",
testBuildInfo
=
BuildInfo
{buildable
=
True,
buildTools
=
[],
buildToolDepends
=
[],
cppOptions
=
[],
asmOptions
=
[],
cmmOptions
=
[],
ccOptions
=
[],
cxxOptions
=
[],
ldOptions
=
[],
hsc2hsOptions
=
[],
pkgconfigDepends
=
[],
frameworks
=
[],
extraFrameworkDirs
=
[],
asmSources
=
[],
cmmSources
=
[],
cSources
=
[],
cxxSources
=
[],
jsSources
=
[],
hsSourceDirs
=
[SymbolicPath
"tests"],
otherModules
=
[],
virtualModules
=
[],
autogenModules
=
[],
defaultLanguage
=
Just
Haskell2010,
otherLanguages
=
[],
defaultExtensions
=
[],
otherExtensions
=
[],
oldExtensions
=
[],
extraLibs
=
[],
extraLibsStatic
=
[],
extraGHCiLibs
=
[],
extraBundledLibs
=
[],
extraLibFlavours
=
[],
extraDynLibFlavours
=
[],
extraLibDirs
=
[],
extraLibDirsStatic
=
[],
includeDirs
=
[],
includes
=
[],
autogenIncludes
=
[],
installIncludes
=
[],
options
=
PerCompilerFlavor
["-Wall","-threaded","-rtsopts"]
[],
profOptions
=
PerCompilerFlavor
[]
[],
sharedOptions
=
PerCompilerFlavor
[]
[],
staticOptions
=
PerCompilerFlavor
[]
[],
customFieldsBI
=
[],
targetBuildDepends
=
[Dependency
(PackageName
"async")
(IntersectVersionRanges
(OrLaterVersion
(mkVersion
[2,2,1]))
(EarlierVersion
(mkVersion
[2,3])))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"base")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"base-compat-batteries")
(IntersectVersionRanges
(OrLaterVersion
(mkVersion
[0,10,5]))
(EarlierVersion
(mkVersion
[0,13])))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"bytestring")
(IntersectVersionRanges
(OrLaterVersion
(mkVersion
[0,9,1,8]))
(EarlierVersion
(mkVersion
[0,12])))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"deepseq")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"process")
(IntersectVersionRanges
(OrLaterVersion
(mkVersion
[1,0,1,5]))
(EarlierVersion
(mkVersion
[1,7])))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"random")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"splitmix")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"tf-random")
(IntersectVersionRanges
(OrLaterVersion
(mkVersion
[0,5]))
(EarlierVersion
(mkVersion
[0,6])))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"vector")
(IntersectVersionRanges
(OrLaterVersion
(mkVersion
[0,11,0,0]))
(EarlierVersion
(mkVersion
[0,13])))
(fromNonEmpty
(LMainLibName
:|
[]))],
mixins
=
[]}},TestSuite
{testName
=
UnqualComponentName
"splitmix-testu01",
testInterface
=
TestSuiteExeV10
(mkVersion
[1,0])
"TestU01.hs",
testBuildInfo
=
BuildInfo
{buildable
=
True,
buildTools
=
[],
buildToolDepends
=
[],
cppOptions
=
[],
asmOptions
=
[],
cmmOptions
=
[],
ccOptions
=
[],
cxxOptions
=
[],
ldOptions
=
[],
hsc2hsOptions
=
[],
pkgconfigDepends
=
[],
frameworks
=
[],
extraFrameworkDirs
=
[],
asmSources
=
[],
cmmSources
=
[],
cSources
=
["tests/cbits/testu01.c"],
cxxSources
=
[],
jsSources
=
[],
hsSourceDirs
=
[SymbolicPath
"tests"],
otherModules
=
[],
virtualModules
=
[],
autogenModules
=
[],
defaultLanguage
=
Just
Haskell2010,
otherLanguages
=
[],
defaultExtensions
=
[],
otherExtensions
=
[],
oldExtensions
=
[],
extraLibs
=
["testu01"],
extraLibsStatic
=
[],
extraGHCiLibs
=
[],
extraBundledLibs
=
[],
extraLibFlavours
=
[],
extraDynLibFlavours
=
[],
extraLibDirs
=
[],
extraLibDirsStatic
=
[],
includeDirs
=
[],
includes
=
[],
autogenIncludes
=
[],
installIncludes
=
[],
options
=
PerCompilerFlavor
["-Wall","-threaded","-rtsopts"]
[],
profOptions
=
PerCompilerFlavor
[]
[],
sharedOptions
=
PerCompilerFlavor
[]
[],
staticOptions
=
PerCompilerFlavor
[]
[],
customFieldsBI
=
[],
targetBuildDepends
=
[Dependency
(PackageName
"base")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"base-compat-batteries")
(IntersectVersionRanges
(OrLaterVersion
(mkVersion
[0,10,5]))
(EarlierVersion
(mkVersion
[0,13])))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"splitmix")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[]))],
mixins
=
[]}},TestSuite
{testName
=
UnqualComponentName
"initialization",
testInterface
=
TestSuiteExeV10
(mkVersion
[1,0])
"Initialization.hs",
testBuildInfo
=
BuildInfo
{buildable
=
True,
buildTools
=
[],
buildToolDepends
=
[],
cppOptions
=
[],
asmOptions
=
[],
cmmOptions
=
[],
ccOptions
=
[],
cxxOptions
=
[],
ldOptions
=
[],
hsc2hsOptions
=
[],
pkgconfigDepends
=
[],
frameworks
=
[],
extraFrameworkDirs
=
[],
asmSources
=
[],
cmmSources
=
[],
cSources
=
[],
cxxSources
=
[],
jsSources
=
[],
hsSourceDirs
=
[SymbolicPath
"tests"],
otherModules
=
[],
virtualModules
=
[],
autogenModules
=
[],
defaultLanguage
=
Just
Haskell2010,
otherLanguages
=
[],
defaultExtensions
=
[],
otherExtensions
=
[],
oldExtensions
=
[],
extraLibs
=
[],
extraLibsStatic
=
[],
extraGHCiLibs
=
[],
extraBundledLibs
=
[],
extraLibFlavours
=
[],
extraDynLibFlavours
=
[],
extraLibDirs
=
[],
extraLibDirsStatic
=
[],
includeDirs
=
[],
includes
=
[],
autogenIncludes
=
[],
installIncludes
=
[],
options
=
PerCompilerFlavor
["-Wall","-threaded","-rtsopts"]
[],
profOptions
=
PerCompilerFlavor
[]
[],
sharedOptions
=
PerCompilerFlavor
[]
[],
staticOptions
=
PerCompilerFlavor
[]
[],
customFieldsBI
=
[],
targetBuildDepends
=
[Dependency
(PackageName
"HUnit")
(UnionVersionRanges
(ThisVersion
(mkVersion
[1,3,1,2]))
(IntersectVersionRanges
(OrLaterVersion
(mkVersion
[1,6,0,0]))
(EarlierVersion
(mkVersion
[1,7]))))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"base")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"splitmix")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[]))],
mixins
=
[]}}],
benchmarks
=
[Benchmark
{benchmarkName
=
UnqualComponentName
"comparison",
benchmarkInterface
=
BenchmarkExeV10
(mkVersion
[1,0])
"Bench.hs",
benchmarkBuildInfo
=
BuildInfo
{buildable
=
True,
buildTools
=
[],
buildToolDepends
=
[],
cppOptions
=
[],
asmOptions
=
[],
cmmOptions
=
[],
ccOptions
=
[],
cxxOptions
=
[],
ldOptions
=
[],
hsc2hsOptions
=
[],
pkgconfigDepends
=
[],
frameworks
=
[],
extraFrameworkDirs
=
[],
asmSources
=
[],
cmmSources
=
[],
cSources
=
[],
cxxSources
=
[],
jsSources
=
[],
hsSourceDirs
=
[SymbolicPath
"bench"],
otherModules
=
[],
virtualModules
=
[],
autogenModules
=
[],
defaultLanguage
=
Just
Haskell2010,
otherLanguages
=
[],
defaultExtensions
=
[],
otherExtensions
=
[],
oldExtensions
=
[],
extraLibs
=
[],
extraLibsStatic
=
[],
extraGHCiLibs
=
[],
extraBundledLibs
=
[],
extraLibFlavours
=
[],
extraDynLibFlavours
=
[],
extraLibDirs
=
[],
extraLibDirsStatic
=
[],
includeDirs
=
[],
includes
=
[],
autogenIncludes
=
[],
installIncludes
=
[],
options
=
PerCompilerFlavor
["-Wall"]
[],
profOptions
=
PerCompilerFlavor
[]
[],
sharedOptions
=
PerCompilerFlavor
[]
[],
staticOptions
=
PerCompilerFlavor
[]
[],
customFieldsBI
=
[],
targetBuildDepends
=
[Dependency
(PackageName
"base")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"containers")
(IntersectVersionRanges
(OrLaterVersion
(mkVersion
[0,4,2,1]))
(EarlierVersion
(mkVersion
[0,7])))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"criterion")
(IntersectVersionRanges
(OrLaterVersion
(mkVersion
[1,1,0,0]))
(EarlierVersion
(mkVersion
[1,6])))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"random")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"splitmix")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"tf-random")
(IntersectVersionRanges
(OrLaterVersion
(mkVersion
[0,5]))
(EarlierVersion
(mkVersion
[0,6])))
(fromNonEmpty
(LMainLibName
:|
[]))],
mixins
=
[]}},Benchmark
{benchmarkName
=
UnqualComponentName
"simple-sum",
benchmarkInterface
=
BenchmarkExeV10
(mkVersion
[1,0])
"SimpleSum.hs",
benchmarkBuildInfo
=
BuildInfo
{buildable
=
True,
buildTools
=
[],
buildToolDepends
=
[],
cppOptions
=
[],
asmOptions
=
[],
cmmOptions
=
[],
ccOptions
=
[],
cxxOptions
=
[],
ldOptions
=
[],
hsc2hsOptions
=
[],
pkgconfigDepends
=
[],
frameworks
=
[],
extraFrameworkDirs
=
[],
asmSources
=
[],
cmmSources
=
[],
cSources
=
[],
cxxSources
=
[],
jsSources
=
[],
hsSourceDirs
=
[SymbolicPath
"bench"],
otherModules
=
[],
virtualModules
=
[],
autogenModules
=
[],
defaultLanguage
=
Just
Haskell2010,
otherLanguages
=
[],
defaultExtensions
=
[],
otherExtensions
=
[],
oldExtensions
=
[],
extraLibs
=
[],
extraLibsStatic
=
[],
extraGHCiLibs
=
[],
extraBundledLibs
=
[],
extraLibFlavours
=
[],
extraDynLibFlavours
=
[],
extraLibDirs
=
[],
extraLibDirsStatic
=
[],
includeDirs
=
[],
includes
=
[],
autogenIncludes
=
[],
installIncludes
=
[],
options
=
PerCompilerFlavor
["-Wall"]
[],
profOptions
=
PerCompilerFlavor
[]
[],
sharedOptions
=
PerCompilerFlavor
[]
[],
staticOptions
=
PerCompilerFlavor
[]
[],
customFieldsBI
=
[],
targetBuildDepends
=
[Dependency
(PackageName
"base")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"random")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"splitmix")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[]))],
mixins
=
[]}},Benchmark
{benchmarkName
=
UnqualComponentName
"range",
benchmarkInterface
=
BenchmarkExeV10
(mkVersion
[1,0])
"Range.hs",
benchmarkBuildInfo
=
BuildInfo
{buildable
=
True,
buildTools
=
[],
buildToolDepends
=
[],
cppOptions
=
[],
asmOptions
=
[],
cmmOptions
=
[],
ccOptions
=
[],
cxxOptions
=
[],
ldOptions
=
[],
hsc2hsOptions
=
[],
pkgconfigDepends
=
[],
frameworks
=
[],
extraFrameworkDirs
=
[],
asmSources
=
[],
cmmSources
=
[],
cSources
=
[],
cxxSources
=
[],
jsSources
=
[],
hsSourceDirs
=
[SymbolicPath
"bench",SymbolicPath
"src-compat"],
otherModules
=
[ModuleName
"Data.Bits.Compat"],
virtualModules
=
[],
autogenModules
=
[],
defaultLanguage
=
Just
Haskell2010,
otherLanguages
=
[],
defaultExtensions
=
[],
otherExtensions
=
[],
oldExtensions
=
[],
extraLibs
=
[],
extraLibsStatic
=
[],
extraGHCiLibs
=
[],
extraBundledLibs
=
[],
extraLibFlavours
=
[],
extraDynLibFlavours
=
[],
extraLibDirs
=
[],
extraLibDirsStatic
=
[],
includeDirs
=
[],
includes
=
[],
autogenIncludes
=
[],
installIncludes
=
[],
options
=
PerCompilerFlavor
["-Wall"]
[],
profOptions
=
PerCompilerFlavor
[]
[],
sharedOptions
=
PerCompilerFlavor
[]
[],
staticOptions
=
PerCompilerFlavor
[]
[],
customFieldsBI
=
[],
targetBuildDepends
=
[Dependency
(PackageName
"base")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"clock")
(IntersectVersionRanges
(OrLaterVersion
(mkVersion
[0,8]))
(EarlierVersion
(mkVersion
[0,9])))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"random")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"splitmix")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[]))],
mixins
=
[]}}],
dataFiles
=
[],
dataDir
=
".",
extraSrcFiles
=
["Changelog.md","make-hugs.sh","README.md","test-hugs.sh"],
extraTmpFiles
=
[],
extraDocFiles
=
[]},
elabPkgSourceLocation
=
RepoTarballPackage
(RepoSecure
{repoRemote
=
RemoteRepo
{remoteRepoName
=
RepoName
"hackage.haskell.org",
remoteRepoURI
=
http://hackage.haskell.org/,
remoteRepoSecure
=
Just
True,
remoteRepoRootKeys
=
["fe331502606802feac15e514d9b9ea83fee8b6ffef71335479a2e68d84adc6b0","1ea9ba32c526d1cc91ab5e5bd364ec5e9e8cb67179a471872f6e26f0ae773d42","2c6c3627bd6c982990239487f1abd02e08a02e6cf16edb105a8012d444d870c3","0a5c7ea47cd1b15f01f5f51a33adda7e655bc0f0b0615baa8e271f4c3351e21d","51f0161b906011b52c6613376b1ae937670da69322113a246a09f807c62f6921"],
remoteRepoKeyThreshold
=
3,
remoteRepoShouldTryHttps
=
True},
repoLocalDir
=
"/home/michaels/.cabal/packages/hackage.haskell.org"})
(PackageIdentifier
{pkgName
=
PackageName
"splitmix",
pkgVersion
=
mkVersion
[0,1,0,4]})
Nothing,
elabPkgSourceHash
=
Just
(HashValue
"m\ACKT\STX9Nz\145\ETB\t=\187E0\162\DC3B\201\177\226\236P\149\SYN\200\168\208\255\237\152\236\170"),
elabLocalToProject
=
False,
elabBuildStyle
=
BuildAndInstall,
elabEnabledSpec
=
ComponentRequestedSpec
{testsRequested
=
False,
benchmarksRequested
=
False},
elabStanzasAvailable
=
OptionalStanzaSet
0,
elabStanzasRequested
=
OptionalStanzaMap
Nothing
Nothing,
elabSetupPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db"],
elabBuildPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db"],
elabRegisterPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db"],
elabInplaceSetupPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db",SpecificPackageDB
"/home/michaels/repos/cabal/cabal-testsuite/PackageTests/Regression/T7893/dist-newstyle/packagedb/ghc-8.10.7"],
elabInplaceBuildPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db",SpecificPackageDB
"/home/michaels/repos/cabal/cabal-testsuite/PackageTests/Regression/T7893/dist-newstyle/packagedb/ghc-8.10.7"],
elabInplaceRegisterPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db",SpecificPackageDB
"/home/michaels/repos/cabal/cabal-testsuite/PackageTests/Regression/T7893/dist-newstyle/packagedb/ghc-8.10.7"],
elabPkgDescriptionOverride
=
Just
"cabal-version:





>=1.10\nname:














splitmix\nversion:











0.1.0.4\nsynopsis:










Fast
Splittable
PRNG\ndescription:\n

Pure
Haskell
implementation
of
SplitMix
described
in\n

.\n

Guy
L.
Steele,
Jr.,
Doug
Lea,
and
Christine
H.
Flood.
2014.\n

Fast
splittable
pseudorandom
number
generators.
In
Proceedings\n

of
the
2014
ACM
International
Conference
on
Object
Oriented\n

Programming
Systems
Languages
&
Applications
(OOPSLA
'14).
ACM,\n

New
York,
NY,
USA,
453-472.
DOI:\n

<https://doi.org/10.1145/2660193.2660195>\n

.\n

The
paper
describes
a
new
algorithm
/SplitMix/
for
/splittable/\n

pseudorandom
number
generator
that
is
quite
fast:
9
64
bit
arithmetic/logical\n

operations
per
64
bits
generated.\n

.\n

/SplitMix/
is
tested
with
two
standard
statistical
test
suites
(DieHarder
and\n

TestU01,
this
implementation
only
using
the
former)
and
it
appears
to
be\n

adequate
for
\"everyday\"
use,
such
as
Monte
Carlo
algorithms
and
randomized\n

data
structures
where
speed
is
important.\n

.\n

In
particular,
it
__should
not
be
used
for
cryptographic
or
security
applications__,\n

because
generated
sequences
of
pseudorandom
values
are
too
predictable\n

(the
mixing
functions
are
easily
inverted,
and
two
successive
outputs\n

suffice
to
reconstruct
the
internal
state).\n\nlicense:











BSD3\nlicense-file:






LICENSE\nmaintainer:








Oleg
Grenrus
<oleg.grenrus@iki.fi>\nbug-reports:







https://github.com/haskellari/splitmix/issues\ncategory:










System,
Random\nbuild-type:








Simple\ntested-with:\n



GHC
==7.0.4\n




||
==7.2.2\n




||
==7.4.2\n




||
==7.6.3\n




||
==7.8.4\n




||
==7.10.3\n




||
==8.0.2\n




||
==8.2.2\n




||
==8.4.4\n




||
==8.6.5\n




||
==8.8.4\n




||
==8.10.4\n




||
==9.0.1\n




||
==9.2.1\n

,
GHCJS
==8.4\n\nextra-source-files:\n

Changelog.md\n

make-hugs.sh\n

README.md\n

test-hugs.sh\n\nflag
optimised-mixer\n

description:
Use
JavaScript
for
mix32\n

manual:





True\n

default:




False\n\nlibrary\n

default-language:
Haskell2010\n

ghc-options:





-Wall\n

hs-source-dirs:


src
src-compat\n

exposed-modules:\n



System.Random.SplitMix\n



System.Random.SplitMix32\n\n

other-modules:\n



Data.Bits.Compat\n



System.Random.SplitMix.Init\n\n

--
dump-core\n

--
build-depends:
dump-core\n

--
ghc-options:
-fplugin=DumpCore
-fplugin-opt
DumpCore:core-html\n\n

build-depends:\n





base




>=4.3




&&
<4.17\n



,
deepseq

>=1.3.0.0
&&
<1.5\n\n

if
flag(optimised-mixer)\n



cpp-options:
-DOPTIMISED_MIX32=1\n\n

--
We
don't
want
to
depend
on
time,
nor
unix
or
Win32
packages\n

--
because
it's
valuable
that
splitmix
and
QuickCheck
doesn't\n

--
depend
on
about
anything\n\n

if
impl(ghcjs)\n



cpp-options:
-DSPLITMIX_INIT_GHCJS=1\n\n

else\n



if
impl(ghc)\n





cpp-options:
-DSPLITMIX_INIT_C=1\n\n





if
os(windows)\n







c-sources:
cbits-win/init.c\n\n





else\n







c-sources:
cbits-unix/init.c\n\n



else\n





cpp-options:


-DSPLITMIX_INIT_COMPAT=1\n





build-depends:
time
>=1.2.0.3
&&
<1.13\n\nsource-repository
head\n

type:




git\n

location:
https://github.com/haskellari/splitmix.git\n\nbenchmark
comparison\n

type:












exitcode-stdio-1.0\n

default-language:
Haskell2010\n

ghc-options:





-Wall\n

hs-source-dirs:


bench\n

main-is:









Bench.hs\n

build-depends:\n





base\n



,
containers

>=0.4.2.1
&&
<0.7\n



,
criterion


>=1.1.0.0
&&
<1.6\n



,
random\n



,
splitmix\n



,
tf-random


>=0.5




&&
<0.6\n\nbenchmark
simple-sum\n

type:












exitcode-stdio-1.0\n

default-language:
Haskell2010\n

ghc-options:





-Wall\n

hs-source-dirs:


bench\n

main-is:









SimpleSum.hs\n

build-depends:\n





base\n



,
random\n



,
splitmix\n\nbenchmark
range\n

type:












exitcode-stdio-1.0\n

default-language:
Haskell2010\n

ghc-options:





-Wall\n

hs-source-dirs:


bench
src-compat\n

main-is:









Range.hs\n

other-modules:



Data.Bits.Compat\n

build-depends:\n





base\n



,
clock




>=0.8
&&
<0.9\n



,
random\n



,
splitmix\n\ntest-suite
examples\n

type:












exitcode-stdio-1.0\n

default-language:
Haskell2010\n

ghc-options:





-Wall\n

hs-source-dirs:


tests\n

main-is:









Examples.hs\n

build-depends:\n





base\n



,
HUnit




==1.3.1.2
||
>=1.6.0.0
&&
<1.7\n



,
splitmix\n\ntest-suite
splitmix-tests\n

type:












exitcode-stdio-1.0\n

default-language:
Haskell2010\n

ghc-options:





-Wall\n

hs-source-dirs:


tests\n

main-is:









Tests.hs\n

other-modules:\n



MiniQC\n



Uniformity\n\n

build-depends:\n





base\n



,
base-compat










>=0.11.1

&&
<0.13\n



,
containers











>=0.4.0.0
&&
<0.7\n



,
HUnit
















==1.3.1.2
||
>=1.6.0.0
&&
<1.7\n



,
math-functions







==0.1.7.0
||
>=0.3.3.0
&&
<0.4\n



,
splitmix\n



,
test-framework







>=0.8.2.0
&&
<0.9\n



,
test-framework-hunit

>=0.3.0.2
&&
<0.4\n\ntest-suite
montecarlo-pi\n

type:












exitcode-stdio-1.0\n

default-language:
Haskell2010\n

ghc-options:





-Wall\n

hs-source-dirs:


tests\n

main-is:









SplitMixPi.hs\n

build-depends:\n





base\n



,
splitmix\n\ntest-suite
montecarlo-pi-32\n

type:












exitcode-stdio-1.0\n

default-language:
Haskell2010\n

ghc-options:





-Wall\n

hs-source-dirs:


tests\n

main-is:









SplitMixPi32.hs\n

build-depends:\n





base\n



,
splitmix\n\ntest-suite
splitmix-dieharder\n

default-language:
Haskell2010\n

type:












exitcode-stdio-1.0\n

ghc-options:





-Wall
-threaded
-rtsopts\n

hs-source-dirs:


tests\n

main-is:









Dieharder.hs\n

build-depends:\n





async

















>=2.2.1



&&
<2.3\n



,
base\n



,
base-compat-batteries

>=0.10.5


&&
<0.13\n



,
bytestring












>=0.9.1.8

&&
<0.12\n



,
deepseq\n



,
process















>=1.0.1.5

&&
<1.7\n



,
random\n



,
splitmix\n



,
tf-random













>=0.5





&&
<0.6\n



,
vector
















>=0.11.0.0
&&
<0.13\n\ntest-suite
splitmix-testu01\n

if
!os(linux)\n



buildable:
False\n\n

default-language:
Haskell2010\n

type:












exitcode-stdio-1.0\n

ghc-options:





-Wall
-threaded
-rtsopts\n

hs-source-dirs:


tests\n

main-is:









TestU01.hs\n

c-sources:







tests/cbits/testu01.c\n

extra-libraries:

testu01\n

build-depends:\n





base\n



,
base-compat-batteries

>=0.10.5


&&
<0.13\n



,
splitmix\n\ntest-suite
initialization\n

default-language:
Haskell2010\n

type:












exitcode-stdio-1.0\n

ghc-options:





-Wall
-threaded
-rtsopts\n

hs-source-dirs:


tests\n

main-is:









Initialization.hs\n

build-depends:\n





base\n



,
HUnit




==1.3.1.2
||
>=1.6.0.0
&&
<1.7\n



,
splitmix\n",
elabVanillaLib
=
True,
elabSharedLib
=
True,
elabStaticLib
=
False,
elabDynExe
=
False,
elabFullyStaticExe
=
False,
elabGHCiLib
=
False,
elabProfLib
=
False,
elabProfExe
=
False,
elabProfLibDetail
=
ProfDetailDefault,
elabProfExeDetail
=
ProfDetailDefault,
elabCoverage
=
False,
elabOptimization
=
NormalOptimisation,
elabSplitObjs
=
False,
elabSplitSections
=
False,
elabStripLibs
=
False,
elabStripExes
=
False,
elabDebugInfo
=
NoDebugInfo,
elabDumpBuildInfo
=
NoDumpBuildInfo,
elabProgramPaths
=
fromList
[("ghc","/nix/store/lrwichshmxvlqnbbym9yg4bxqsrvc88j-ghc-8.10.7/bin/ghc"),("ghc-pkg","/nix/store/lrwichshmxvlqnbbym9yg4bxqsrvc88j-ghc-8.10.7/bin/ghc-pkg-8.10.7")],
elabProgramArgs
=
fromList
[],
elabProgramPathExtra
=
["/home/michaels/.cabal/bin"],
elabConfigureScriptArgs
=
[],
elabExtraLibDirs
=
[],
elabExtraLibDirsStatic
=
[],
elabExtraFrameworkDirs
=
[],
elabExtraIncludeDirs
=
[],
elabProgPrefix
=
Nothing,
elabProgSuffix
=
Nothing,
elabInstallDirs
=
InstallDirs
{prefix
=
"/home/michaels/.cabal/store/ghc-8.10.7/splitmix-0.1.0.4-67c84d13e4d7c71df2ebc6ec425fdcc4f24fcbdf70984a80c9452679ca619983",
bindir
=
"/home/michaels/.cabal/store/ghc-8.10.7/splitmix-0.1.0.4-67c84d13e4d7c71df2ebc6ec425fdcc4f24fcbdf70984a80c9452679ca619983/bin",
libdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/splitmix-0.1.0.4-67c84d13e4d7c71df2ebc6ec425fdcc4f24fcbdf70984a80c9452679ca619983/lib",
libsubdir
=
"",
dynlibdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/splitmix-0.1.0.4-67c84d13e4d7c71df2ebc6ec425fdcc4f24fcbdf70984a80c9452679ca619983/lib",
flibdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/splitmix-0.1.0.4-67c84d13e4d7c71df2ebc6ec425fdcc4f24fcbdf70984a80c9452679ca619983/lib",
libexecdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/splitmix-0.1.0.4-67c84d13e4d7c71df2ebc6ec425fdcc4f24fcbdf70984a80c9452679ca619983/libexec",
libexecsubdir
=
"",
includedir
=
"/home/michaels/.cabal/store/ghc-8.10.7/splitmix-0.1.0.4-67c84d13e4d7c71df2ebc6ec425fdcc4f24fcbdf70984a80c9452679ca619983/lib/include",
datadir
=
"/home/michaels/.cabal/store/ghc-8.10.7/splitmix-0.1.0.4-67c84d13e4d7c71df2ebc6ec425fdcc4f24fcbdf70984a80c9452679ca619983/share",
datasubdir
=
"",
docdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/splitmix-0.1.0.4-67c84d13e4d7c71df2ebc6ec425fdcc4f24fcbdf70984a80c9452679ca619983/share/doc",
mandir
=
"/home/michaels/.cabal/store/ghc-8.10.7/splitmix-0.1.0.4-67c84d13e4d7c71df2ebc6ec425fdcc4f24fcbdf70984a80c9452679ca619983/share/man",
htmldir
=
"/home/michaels/.cabal/store/ghc-8.10.7/splitmix-0.1.0.4-67c84d13e4d7c71df2ebc6ec425fdcc4f24fcbdf70984a80c9452679ca619983/share/doc/html",
haddockdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/splitmix-0.1.0.4-67c84d13e4d7c71df2ebc6ec425fdcc4f24fcbdf70984a80c9452679ca619983/share/doc/html",
sysconfdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/splitmix-0.1.0.4-67c84d13e4d7c71df2ebc6ec425fdcc4f24fcbdf70984a80c9452679ca619983/etc"},
elabHaddockHoogle
=
False,
elabHaddockHtml
=
False,
elabHaddockHtmlLocation
=
Nothing,
elabHaddockForeignLibs
=
False,
elabHaddockForHackage
=
ForDevelopment,
elabHaddockExecutables
=
False,
elabHaddockTestSuites
=
False,
elabHaddockBenchmarks
=
False,
elabHaddockInternal
=
False,
elabHaddockCss
=
Nothing,
elabHaddockLinkedSource
=
False,
elabHaddockQuickJump
=
False,
elabHaddockHscolourCss
=
Nothing,
elabHaddockContents
=
Nothing,
elabTestMachineLog
=
Just
"$pkgid.log",
elabTestHumanLog
=
Just
"$pkgid-$test-suite.log",
elabTestShowDetails
=
Just
Failures,
elabTestKeepTix
=
False,
elabTestWrapper
=
Nothing,
elabTestFailWhenNoTestSuites
=
False,
elabTestTestOptions
=
[],
elabBenchmarkOptions
=
[],
elabSetupScriptStyle
=
SetupNonCustomInternalLib,
elabSetupScriptCliVersion
=
mkVersion
[3,7,0,0],
elabConfigureTargets
=
[],
elabBuildTargets
=
[],
elabTestTargets
=
[],
elabBenchTargets
=
[],
elabReplTarget
=
Nothing,
elabHaddockTargets
=
[],
elabBuildHaddocks
=
False,
elabPkgOrComp
=
ElabPackage
(ElaboratedPackage
{pkgInstalledId
=
ComponentId
"splitmix-0.1.0.4-67c84d13e4d7c71df2ebc6ec425fdcc4f24fcbdf70984a80c9452679ca619983",
pkgLibDependencies
=
ComponentDeps
{unComponentDeps
=
fromList
[(ComponentLib,[ComponentId
"base-4.14.3.0",ComponentId
"deepseq-1.4.4.0"])]},
pkgDependsOnSelfLib
=
ComponentDeps
{unComponentDeps
=
fromList
[(ComponentLib,[()])]},
pkgExeDependencies
=
ComponentDeps
{unComponentDeps
=
fromList
[(ComponentLib,[])]},
pkgExeDependencyPaths
=
ComponentDeps
{unComponentDeps
=
fromList
[(ComponentLib,[])]},
pkgPkgConfigDependencies
=
[],
pkgStanzasEnabled
=
OptionalStanzaSet
0})}
ElaboratedConfiguredPackage
{elabUnitId
=
UnitId
"random-1.2.1-27f75c738ff56dde673ff6b8730ddcf155b7971f3e93018daa2185a2407a7278",
elabComponentId
=
ComponentId
"random-1.2.1-27f75c738ff56dde673ff6b8730ddcf155b7971f3e93018daa2185a2407a7278",
elabInstantiatedWith
=
fromList
[],
elabLinkedInstantiatedWith
=
fromList
[],
elabIsCanonical
=
True,
elabPkgSourceId
=
PackageIdentifier
{pkgName
=
PackageName
"random",
pkgVersion
=
mkVersion
[1,2,1]},
elabModuleShape
=
ModuleShape
{modShapeProvides
=
fromList
[(ModuleName
"System.Random",OpenModule
(IndefFullUnitId
(ComponentId
"random-1.2.1-ea051b9e19b7ea403673b6fba124a359b62844fb0a8a894107a00136fd4772cf")
(fromList
[]))
(ModuleName
"System.Random")),(ModuleName
"System.Random.Internal",OpenModule
(IndefFullUnitId
(ComponentId
"random-1.2.1-ea051b9e19b7ea403673b6fba124a359b62844fb0a8a894107a00136fd4772cf")
(fromList
[]))
(ModuleName
"System.Random.Internal")),(ModuleName
"System.Random.Stateful",OpenModule
(IndefFullUnitId
(ComponentId
"random-1.2.1-ea051b9e19b7ea403673b6fba124a359b62844fb0a8a894107a00136fd4772cf")
(fromList
[]))
(ModuleName
"System.Random.Stateful"))],
modShapeRequires
=
fromList
[]},
elabFlagAssignment
=
fromList
[],
elabFlagDefaults
=
fromList
[],
elabPkgDescription
=
PackageDescription
{specVersion
=
CabalSpecV1_10,
package
=
PackageIdentifier
{pkgName
=
PackageName
"random",
pkgVersion
=
mkVersion
[1,2,1]},
licenseRaw
=
Right
BSD3,
licenseFiles
=
[SymbolicPath
"LICENSE"],
copyright
=
"",
maintainer
=
"core-libraries-committee@haskell.org",
author
=
"",
stability
=
"",
testedWith
=
[(GHC,ThisVersion
(mkVersion
[7,10,2])),(GHC,ThisVersion
(mkVersion
[7,10,3])),(GHC,ThisVersion
(mkVersion
[8,0,2])),(GHC,ThisVersion
(mkVersion
[8,2,2])),(GHC,ThisVersion
(mkVersion
[8,4,3])),(GHC,ThisVersion
(mkVersion
[8,4,4])),(GHC,ThisVersion
(mkVersion
[8,6,3])),(GHC,ThisVersion
(mkVersion
[8,6,4])),(GHC,ThisVersion
(mkVersion
[8,6,5])),(GHC,ThisVersion
(mkVersion
[8,8,1])),(GHC,ThisVersion
(mkVersion
[8,8,2])),(GHC,ThisVersion
(mkVersion
[8,10,1]))],
homepage
=
"",
pkgUrl
=
"",
bugReports
=
"https://github.com/haskell/random/issues",
sourceRepos
=
[SourceRepo
{repoKind
=
RepoHead,
repoType
=
Just
(KnownRepoType
Git),
repoLocation
=
Just
"https://github.com/haskell/random.git",
repoModule
=
Nothing,
repoBranch
=
Nothing,
repoTag
=
Nothing,
repoSubdir
=
Nothing}],
synopsis
=
"Pseudo-random
number
generation",
description
=
"This
package
provides
basic
pseudo-random
number
generation,
including
the\nability
to
split
random
number
generators.\n\n==
\"System.Random\":
pure
pseudo-random
number
interface\n\nIn
pure
code,
use
'System.Random.uniform'
and
'System.Random.uniformR'
from\n\"System.Random\"
to
generate
pseudo-random
numbers
with
a
pure
pseudo-random\nnumber
generator
like
'System.Random.StdGen'.\n\nAs
an
example,
here
is
how
you
can
simulate
rolls
of
a
six-sided
die
using\n'System.Random.uniformR':\n\n>>>
let
roll
=
uniformR
(1,
6)







::
RandomGen
g
=>
g
->
(Word,
g)\n>>>
let
rolls
=
unfoldr
(Just
.
roll)
::
RandomGen
g
=>
g
->
[Word]\n>>>
let
pureGen
=
mkStdGen
42\n>>>
take
10
(rolls
pureGen)










::
[Word]\n[1,1,3,2,4,5,3,4,6,2]\n\nSee
\"System.Random\"
for
more
details.\n\n==
\"System.Random.Stateful\":
monadic
pseudo-random
number
interface\n\nIn
monadic
code,
use
'System.Random.Stateful.uniformM'
and\n'System.Random.Stateful.uniformRM'
from
\"System.Random.Stateful\"
to
generate\npseudo-random
numbers
with
a
monadic
pseudo-random
number
generator,
or\nusing
a
monadic
adapter.\n\nAs
an
example,
here
is
how
you
can
simulate
rolls
of
a
six-sided
die
using\n'System.Random.Stateful.uniformRM':\n\n>>>
let
rollM
=
uniformRM
(1,
6)
















::
StatefulGen
g
m
=>
g
->
m
Word\n>>>
let
pureGen
=
mkStdGen
42\n>>>
runStateGen_
pureGen
(replicateM
10
.
rollM)
::
[Word]\n[1,1,3,2,4,5,3,4,6,2]\n\nThe
monadic
adapter
'System.Random.Stateful.runStateGen_'
is
used
here
to
lift\nthe
pure
pseudo-random
number
generator
@pureGen@
into
the\n'System.Random.Stateful.StatefulGen'
context.\n\nThe
monadic
interface
can
also
be
used
with
existing
monadic
pseudo-random\nnumber
generators.
In
this
example,
we
use
the
one
provided
in
the\n<https://hackage.haskell.org/package/mwc-random
mwc-random>
package:\n\n>>>
import
System.Random.MWC
as
MWC\n>>>
let
rollM
=
uniformRM
(1,
6)






::
StatefulGen
g
m
=>
g
->
m
Word\n>>>
monadicGen
<-
MWC.create\n>>>
replicateM
10
(rollM
monadicGen)
::
IO
[Word]\n[2,3,6,6,4,4,3,1,5,4]\n\nSee
\"System.Random.Stateful\"
for
more
details.",
category
=
"System",
customFieldsPD
=
[],
buildTypeRaw
=
Just
Simple,
setupBuildInfo
=
Nothing,
library
=
Just
(Library
{libName
=
LMainLibName,
exposedModules
=
[ModuleName
"System.Random",ModuleName
"System.Random.Internal",ModuleName
"System.Random.Stateful"],
reexportedModules
=
[],
signatures
=
[],
libExposed
=
True,
libVisibility
=
LibraryVisibilityPublic,
libBuildInfo
=
BuildInfo
{buildable
=
True,
buildTools
=
[],
buildToolDepends
=
[],
cppOptions
=
[],
asmOptions
=
[],
cmmOptions
=
[],
ccOptions
=
[],
cxxOptions
=
[],
ldOptions
=
[],
hsc2hsOptions
=
[],
pkgconfigDepends
=
[],
frameworks
=
[],
extraFrameworkDirs
=
[],
asmSources
=
[],
cmmSources
=
[],
cSources
=
[],
cxxSources
=
[],
jsSources
=
[],
hsSourceDirs
=
[SymbolicPath
"src"],
otherModules
=
[ModuleName
"System.Random.GFinite"],
virtualModules
=
[],
autogenModules
=
[],
defaultLanguage
=
Just
Haskell2010,
otherLanguages
=
[],
defaultExtensions
=
[],
otherExtensions
=
[],
oldExtensions
=
[],
extraLibs
=
[],
extraLibsStatic
=
[],
extraGHCiLibs
=
[],
extraBundledLibs
=
[],
extraLibFlavours
=
[],
extraDynLibFlavours
=
[],
extraLibDirs
=
[],
extraLibDirsStatic
=
[],
includeDirs
=
[],
includes
=
[],
autogenIncludes
=
[],
installIncludes
=
[],
options
=
PerCompilerFlavor
["-Wall","-Wincomplete-record-updates","-Wincomplete-uni-patterns"]
[],
profOptions
=
PerCompilerFlavor
[]
[],
sharedOptions
=
PerCompilerFlavor
[]
[],
staticOptions
=
PerCompilerFlavor
[]
[],
customFieldsBI
=
[],
targetBuildDepends
=
[Dependency
(PackageName
"base")
(IntersectVersionRanges
(OrLaterVersion
(mkVersion
[4,8]))
(EarlierVersion
(mkVersion
[5])))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"bytestring")
(IntersectVersionRanges
(OrLaterVersion
(mkVersion
[0,10,4]))
(EarlierVersion
(mkVersion
[0,12])))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"deepseq")
(IntersectVersionRanges
(OrLaterVersion
(mkVersion
[1,1]))
(EarlierVersion
(mkVersion
[2])))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"mtl")
(IntersectVersionRanges
(OrLaterVersion
(mkVersion
[2,2]))
(EarlierVersion
(mkVersion
[2,3])))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"splitmix")
(IntersectVersionRanges
(OrLaterVersion
(mkVersion
[0,1]))
(EarlierVersion
(mkVersion
[0,2])))
(fromNonEmpty
(LMainLibName
:|
[]))],
mixins
=
[]}}),
subLibraries
=
[],
executables
=
[],
foreignLibs
=
[],
testSuites
=
[TestSuite
{testName
=
UnqualComponentName
"legacy-test",
testInterface
=
TestSuiteExeV10
(mkVersion
[1,0])
"Legacy.hs",
testBuildInfo
=
BuildInfo
{buildable
=
True,
buildTools
=
[],
buildToolDepends
=
[],
cppOptions
=
[],
asmOptions
=
[],
cmmOptions
=
[],
ccOptions
=
[],
cxxOptions
=
[],
ldOptions
=
[],
hsc2hsOptions
=
[],
pkgconfigDepends
=
[],
frameworks
=
[],
extraFrameworkDirs
=
[],
asmSources
=
[],
cmmSources
=
[],
cSources
=
[],
cxxSources
=
[],
jsSources
=
[],
hsSourceDirs
=
[SymbolicPath
"test-legacy"],
otherModules
=
[ModuleName
"T7936",ModuleName
"TestRandomIOs",ModuleName
"TestRandomRs",ModuleName
"Random1283",ModuleName
"RangeTest"],
virtualModules
=
[],
autogenModules
=
[],
defaultLanguage
=
Just
Haskell2010,
otherLanguages
=
[],
defaultExtensions
=
[],
otherExtensions
=
[],
oldExtensions
=
[],
extraLibs
=
[],
extraLibsStatic
=
[],
extraGHCiLibs
=
[],
extraBundledLibs
=
[],
extraLibFlavours
=
[],
extraDynLibFlavours
=
[],
extraLibDirs
=
[],
extraLibDirsStatic
=
[],
includeDirs
=
[],
includes
=
[],
autogenIncludes
=
[],
installIncludes
=
[],
options
=
PerCompilerFlavor
["-with-rtsopts=-M4M","-Wno-deprecations"]
[],
profOptions
=
PerCompilerFlavor
[]
[],
sharedOptions
=
PerCompilerFlavor
[]
[],
staticOptions
=
PerCompilerFlavor
[]
[],
customFieldsBI
=
[],
targetBuildDepends
=
[Dependency
(PackageName
"base")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"containers")
(IntersectVersionRanges
(OrLaterVersion
(mkVersion
[0,5]))
(EarlierVersion
(mkVersion
[0,7])))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"random")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[]))],
mixins
=
[]}},TestSuite
{testName
=
UnqualComponentName
"doctests",
testInterface
=
TestSuiteExeV10
(mkVersion
[1,0])
"doctests.hs",
testBuildInfo
=
BuildInfo
{buildable
=
True,
buildTools
=
[],
buildToolDepends
=
[],
cppOptions
=
[],
asmOptions
=
[],
cmmOptions
=
[],
ccOptions
=
[],
cxxOptions
=
[],
ldOptions
=
[],
hsc2hsOptions
=
[],
pkgconfigDepends
=
[],
frameworks
=
[],
extraFrameworkDirs
=
[],
asmSources
=
[],
cmmSources
=
[],
cSources
=
[],
cxxSources
=
[],
jsSources
=
[],
hsSourceDirs
=
[SymbolicPath
"test"],
otherModules
=
[],
virtualModules
=
[],
autogenModules
=
[],
defaultLanguage
=
Just
Haskell2010,
otherLanguages
=
[],
defaultExtensions
=
[],
otherExtensions
=
[],
oldExtensions
=
[],
extraLibs
=
[],
extraLibsStatic
=
[],
extraGHCiLibs
=
[],
extraBundledLibs
=
[],
extraLibFlavours
=
[],
extraDynLibFlavours
=
[],
extraLibDirs
=
[],
extraLibDirsStatic
=
[],
includeDirs
=
[],
includes
=
[],
autogenIncludes
=
[],
installIncludes
=
[],
options
=
PerCompilerFlavor
[]
[],
profOptions
=
PerCompilerFlavor
[]
[],
sharedOptions
=
PerCompilerFlavor
[]
[],
staticOptions
=
PerCompilerFlavor
[]
[],
customFieldsBI
=
[],
targetBuildDepends
=
[Dependency
(PackageName
"base")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"doctest")
(IntersectVersionRanges
(OrLaterVersion
(mkVersion
[0,15]))
(EarlierVersion
(mkVersion
[0,19])))
(fromNonEmpty
(LMainLibName
:|
[]))],
mixins
=
[]}},TestSuite
{testName
=
UnqualComponentName
"spec",
testInterface
=
TestSuiteExeV10
(mkVersion
[1,0])
"Spec.hs",
testBuildInfo
=
BuildInfo
{buildable
=
True,
buildTools
=
[],
buildToolDepends
=
[],
cppOptions
=
[],
asmOptions
=
[],
cmmOptions
=
[],
ccOptions
=
[],
cxxOptions
=
[],
ldOptions
=
[],
hsc2hsOptions
=
[],
pkgconfigDepends
=
[],
frameworks
=
[],
extraFrameworkDirs
=
[],
asmSources
=
[],
cmmSources
=
[],
cSources
=
[],
cxxSources
=
[],
jsSources
=
[],
hsSourceDirs
=
[SymbolicPath
"test"],
otherModules
=
[ModuleName
"Spec.Range",ModuleName
"Spec.Run",ModuleName
"Spec.Stateful"],
virtualModules
=
[],
autogenModules
=
[],
defaultLanguage
=
Just
Haskell2010,
otherLanguages
=
[],
defaultExtensions
=
[],
otherExtensions
=
[],
oldExtensions
=
[],
extraLibs
=
[],
extraLibsStatic
=
[],
extraGHCiLibs
=
[],
extraBundledLibs
=
[],
extraLibFlavours
=
[],
extraDynLibFlavours
=
[],
extraLibDirs
=
[],
extraLibDirsStatic
=
[],
includeDirs
=
[],
includes
=
[],
autogenIncludes
=
[],
installIncludes
=
[],
options
=
PerCompilerFlavor
["-Wall"]
[],
profOptions
=
PerCompilerFlavor
[]
[],
sharedOptions
=
PerCompilerFlavor
[]
[],
staticOptions
=
PerCompilerFlavor
[]
[],
customFieldsBI
=
[],
targetBuildDepends
=
[Dependency
(PackageName
"base")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"bytestring")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"random")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"smallcheck")
(IntersectVersionRanges
(OrLaterVersion
(mkVersion
[1,2]))
(EarlierVersion
(mkVersion
[1,3])))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"stm")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"tasty")
(IntersectVersionRanges
(OrLaterVersion
(mkVersion
[1,0]))
(EarlierVersion
(mkVersion
[1,5])))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"tasty-hunit")
(IntersectVersionRanges
(OrLaterVersion
(mkVersion
[0,10]))
(EarlierVersion
(mkVersion
[0,11])))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"tasty-smallcheck")
(IntersectVersionRanges
(OrLaterVersion
(mkVersion
[0,8]))
(EarlierVersion
(mkVersion
[0,9])))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"transformers")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[]))],
mixins
=
[]}},TestSuite
{testName
=
UnqualComponentName
"spec-inspection",
testInterface
=
TestSuiteExeV10
(mkVersion
[1,0])
"Spec.hs",
testBuildInfo
=
BuildInfo
{buildable
=
True,
buildTools
=
[],
buildToolDepends
=
[],
cppOptions
=
[],
asmOptions
=
[],
cmmOptions
=
[],
ccOptions
=
[],
cxxOptions
=
[],
ldOptions
=
[],
hsc2hsOptions
=
[],
pkgconfigDepends
=
[],
frameworks
=
[],
extraFrameworkDirs
=
[],
asmSources
=
[],
cmmSources
=
[],
cSources
=
[],
cxxSources
=
[],
jsSources
=
[],
hsSourceDirs
=
[SymbolicPath
"test-inspection"],
otherModules
=
[ModuleName
"Spec.Inspection"],
virtualModules
=
[],
autogenModules
=
[],
defaultLanguage
=
Just
Haskell2010,
otherLanguages
=
[],
defaultExtensions
=
[],
otherExtensions
=
[],
oldExtensions
=
[],
extraLibs
=
[],
extraLibsStatic
=
[],
extraGHCiLibs
=
[],
extraBundledLibs
=
[],
extraLibFlavours
=
[],
extraDynLibFlavours
=
[],
extraLibDirs
=
[],
extraLibDirsStatic
=
[],
includeDirs
=
[],
includes
=
[],
autogenIncludes
=
[],
installIncludes
=
[],
options
=
PerCompilerFlavor
["-Wall"]
[],
profOptions
=
PerCompilerFlavor
[]
[],
sharedOptions
=
PerCompilerFlavor
[]
[],
staticOptions
=
PerCompilerFlavor
[]
[],
customFieldsBI
=
[],
targetBuildDepends
=
[Dependency
(PackageName
"base")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"random")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"tasty")
(IntersectVersionRanges
(OrLaterVersion
(mkVersion
[1,0]))
(EarlierVersion
(mkVersion
[1,5])))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"tasty-inspection-testing")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[]))],
mixins
=
[]}}],
benchmarks
=
[Benchmark
{benchmarkName
=
UnqualComponentName
"legacy-bench",
benchmarkInterface
=
BenchmarkExeV10
(mkVersion
[1,0])
"SimpleRNGBench.hs",
benchmarkBuildInfo
=
BuildInfo
{buildable
=
True,
buildTools
=
[],
buildToolDepends
=
[],
cppOptions
=
[],
asmOptions
=
[],
cmmOptions
=
[],
ccOptions
=
[],
cxxOptions
=
[],
ldOptions
=
[],
hsc2hsOptions
=
[],
pkgconfigDepends
=
[],
frameworks
=
[],
extraFrameworkDirs
=
[],
asmSources
=
[],
cmmSources
=
[],
cSources
=
[],
cxxSources
=
[],
jsSources
=
[],
hsSourceDirs
=
[SymbolicPath
"bench-legacy"],
otherModules
=
[ModuleName
"BinSearch"],
virtualModules
=
[],
autogenModules
=
[],
defaultLanguage
=
Just
Haskell2010,
otherLanguages
=
[],
defaultExtensions
=
[],
otherExtensions
=
[],
oldExtensions
=
[],
extraLibs
=
[],
extraLibsStatic
=
[],
extraGHCiLibs
=
[],
extraBundledLibs
=
[],
extraLibFlavours
=
[],
extraDynLibFlavours
=
[],
extraLibDirs
=
[],
extraLibDirsStatic
=
[],
includeDirs
=
[],
includes
=
[],
autogenIncludes
=
[],
installIncludes
=
[],
options
=
PerCompilerFlavor
["-Wall","-O2","-threaded","-rtsopts","-with-rtsopts=-N","-Wno-deprecations"]
[],
profOptions
=
PerCompilerFlavor
[]
[],
sharedOptions
=
PerCompilerFlavor
[]
[],
staticOptions
=
PerCompilerFlavor
[]
[],
customFieldsBI
=
[],
targetBuildDepends
=
[Dependency
(PackageName
"base")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"random")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"rdtsc")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"split")
(IntersectVersionRanges
(OrLaterVersion
(mkVersion
[0,2]))
(EarlierVersion
(mkVersion
[0,3])))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"time")
(IntersectVersionRanges
(OrLaterVersion
(mkVersion
[1,4]))
(EarlierVersion
(mkVersion
[1,11])))
(fromNonEmpty
(LMainLibName
:|
[]))],
mixins
=
[]}},Benchmark
{benchmarkName
=
UnqualComponentName
"bench",
benchmarkInterface
=
BenchmarkExeV10
(mkVersion
[1,0])
"Main.hs",
benchmarkBuildInfo
=
BuildInfo
{buildable
=
True,
buildTools
=
[],
buildToolDepends
=
[],
cppOptions
=
[],
asmOptions
=
[],
cmmOptions
=
[],
ccOptions
=
[],
cxxOptions
=
[],
ldOptions
=
[],
hsc2hsOptions
=
[],
pkgconfigDepends
=
[],
frameworks
=
[],
extraFrameworkDirs
=
[],
asmSources
=
[],
cmmSources
=
[],
cSources
=
[],
cxxSources
=
[],
jsSources
=
[],
hsSourceDirs
=
[SymbolicPath
"bench"],
otherModules
=
[],
virtualModules
=
[],
autogenModules
=
[],
defaultLanguage
=
Just
Haskell2010,
otherLanguages
=
[],
defaultExtensions
=
[],
otherExtensions
=
[],
oldExtensions
=
[],
extraLibs
=
[],
extraLibsStatic
=
[],
extraGHCiLibs
=
[],
extraBundledLibs
=
[],
extraLibFlavours
=
[],
extraDynLibFlavours
=
[],
extraLibDirs
=
[],
extraLibDirsStatic
=
[],
includeDirs
=
[],
includes
=
[],
autogenIncludes
=
[],
installIncludes
=
[],
options
=
PerCompilerFlavor
["-Wall","-O2"]
[],
profOptions
=
PerCompilerFlavor
[]
[],
sharedOptions
=
PerCompilerFlavor
[]
[],
staticOptions
=
PerCompilerFlavor
[]
[],
customFieldsBI
=
[],
targetBuildDepends
=
[Dependency
(PackageName
"base")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"mtl")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"primitive")
(OrLaterVersion
(mkVersion
[0,7,1]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"random")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"splitmix")
(IntersectVersionRanges
(OrLaterVersion
(mkVersion
[0,1]))
(EarlierVersion
(mkVersion
[0,2])))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"tasty-bench")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[]))],
mixins
=
[]}}],
dataFiles
=
[],
dataDir
=
".",
extraSrcFiles
=
["README.md","CHANGELOG.md"],
extraTmpFiles
=
[],
extraDocFiles
=
[]},
elabPkgSourceLocation
=
RepoTarballPackage
(RepoSecure
{repoRemote
=
RemoteRepo
{remoteRepoName
=
RepoName
"hackage.haskell.org",
remoteRepoURI
=
http://hackage.haskell.org/,
remoteRepoSecure
=
Just
True,
remoteRepoRootKeys
=
["fe331502606802feac15e514d9b9ea83fee8b6ffef71335479a2e68d84adc6b0","1ea9ba32c526d1cc91ab5e5bd364ec5e9e8cb67179a471872f6e26f0ae773d42","2c6c3627bd6c982990239487f1abd02e08a02e6cf16edb105a8012d444d870c3","0a5c7ea47cd1b15f01f5f51a33adda7e655bc0f0b0615baa8e271f4c3351e21d","51f0161b906011b52c6613376b1ae937670da69322113a246a09f807c62f6921"],
remoteRepoKeyThreshold
=
3,
remoteRepoShouldTryHttps
=
True},
repoLocalDir
=
"/home/michaels/.cabal/packages/hackage.haskell.org"})
(PackageIdentifier
{pkgName
=
PackageName
"random",
pkgVersion
=
mkVersion
[1,2,1]})
Nothing,
elabPkgSourceHash
=
Just
(HashValue
"&\\v\143\197\242\202S\205\230\168~pkDH\202\212t\195\222\236\233\&3\193\ETX\242DSf\DC4W"),
elabLocalToProject
=
False,
elabBuildStyle
=
BuildAndInstall,
elabEnabledSpec
=
ComponentRequestedSpec
{testsRequested
=
False,
benchmarksRequested
=
False},
elabStanzasAvailable
=
OptionalStanzaSet
0,
elabStanzasRequested
=
OptionalStanzaMap
Nothing
Nothing,
elabSetupPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db"],
elabBuildPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db"],
elabRegisterPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db"],
elabInplaceSetupPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db",SpecificPackageDB
"/home/michaels/repos/cabal/cabal-testsuite/PackageTests/Regression/T7893/dist-newstyle/packagedb/ghc-8.10.7"],
elabInplaceBuildPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db",SpecificPackageDB
"/home/michaels/repos/cabal/cabal-testsuite/PackageTests/Regression/T7893/dist-newstyle/packagedb/ghc-8.10.7"],
elabInplaceRegisterPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db",SpecificPackageDB
"/home/michaels/repos/cabal/cabal-testsuite/PackageTests/Regression/T7893/dist-newstyle/packagedb/ghc-8.10.7"],
elabPkgDescriptionOverride
=
Just
"cabal-version:





>=1.10\nname:














random\nversion:











1.2.1\nlicense:











BSD3\nlicense-file:






LICENSE\nmaintainer:








core-libraries-committee@haskell.org\nbug-reports:







https://github.com/haskell/random/issues\nsynopsis:










Pseudo-random
number
generation\ndescription:\n



This
package
provides
basic
pseudo-random
number
generation,
including
the\n



ability
to
split
random
number
generators.\n



.\n



==
\"System.Random\":
pure
pseudo-random
number
interface\n



.\n



In
pure
code,
use
'System.Random.uniform'
and
'System.Random.uniformR'
from\n



\"System.Random\"
to
generate
pseudo-random
numbers
with
a
pure
pseudo-random\n



number
generator
like
'System.Random.StdGen'.\n



.\n



As
an
example,
here
is
how
you
can
simulate
rolls
of
a
six-sided
die
using\n



'System.Random.uniformR':\n



.\n



>>>
let
roll
=
uniformR
(1,
6)







::
RandomGen
g
=>
g
->
(Word,
g)\n



>>>
let
rolls
=
unfoldr
(Just
.
roll)
::
RandomGen
g
=>
g
->
[Word]\n



>>>
let
pureGen
=
mkStdGen
42\n



>>>
take
10
(rolls
pureGen)










::
[Word]\n



[1,1,3,2,4,5,3,4,6,2]\n



.\n



See
\"System.Random\"
for
more
details.\n



.\n



==
\"System.Random.Stateful\":
monadic
pseudo-random
number
interface\n



.\n



In
monadic
code,
use
'System.Random.Stateful.uniformM'
and\n



'System.Random.Stateful.uniformRM'
from
\"System.Random.Stateful\"
to
generate\n



pseudo-random
numbers
with
a
monadic
pseudo-random
number
generator,
or\n



using
a
monadic
adapter.\n



.\n



As
an
example,
here
is
how
you
can
simulate
rolls
of
a
six-sided
die
using\n



'System.Random.Stateful.uniformRM':\n



.\n



>>>
let
rollM
=
uniformRM
(1,
6)
















::
StatefulGen
g
m
=>
g
->
m
Word\n



>>>
let
pureGen
=
mkStdGen
42\n



>>>
runStateGen_
pureGen
(replicateM
10
.
rollM)
::
[Word]\n



[1,1,3,2,4,5,3,4,6,2]\n



.\n



The
monadic
adapter
'System.Random.Stateful.runStateGen_'
is
used
here
to
lift\n



the
pure
pseudo-random
number
generator
@pureGen@
into
the\n



'System.Random.Stateful.StatefulGen'
context.\n



.\n



The
monadic
interface
can
also
be
used
with
existing
monadic
pseudo-random\n



number
generators.
In
this
example,
we
use
the
one
provided
in
the\n



<https://hackage.haskell.org/package/mwc-random
mwc-random>
package:\n



.\n



>>>
import
System.Random.MWC
as
MWC\n



>>>
let
rollM
=
uniformRM
(1,
6)






::
StatefulGen
g
m
=>
g
->
m
Word\n



>>>
monadicGen
<-
MWC.create\n



>>>
replicateM
10
(rollM
monadicGen)
::
IO
[Word]\n



[2,3,6,6,4,4,3,1,5,4]\n



.\n



See
\"System.Random.Stateful\"
for
more
details.\n\ncategory:










System\nbuild-type:








Simple\nextra-source-files:\n



README.md\n



CHANGELOG.md\ntested-with:








GHC
==
7.10.2\n


















,
GHC
==
7.10.3\n


















,
GHC
==
8.0.2\n


















,
GHC
==
8.2.2\n


















,
GHC
==
8.4.3\n


















,
GHC
==
8.4.4\n


















,
GHC
==
8.6.3\n


















,
GHC
==
8.6.4\n


















,
GHC
==
8.6.5\n


















,
GHC
==
8.8.1\n


















,
GHC
==
8.8.2\n


















,
GHC
==
8.10.1\n\nsource-repository
head\n



type:




git\n



location:
https://github.com/haskell/random.git\n\n\nlibrary\n



exposed-modules:\n







System.Random\n







System.Random.Internal\n







System.Random.Stateful\n



other-modules:\n







System.Random.GFinite\n\n



hs-source-dirs:


src\n



default-language:
Haskell2010\n



ghc-options:\n







-Wall\n



if
impl(ghc
>=
8.0)\n







ghc-options:\n











-Wincomplete-record-updates
-Wincomplete-uni-patterns\n\n



build-depends:\n







base
>=4.8
&&
<5,\n







bytestring
>=0.10.4
&&
<0.12,\n







deepseq
>=1.1
&&
<2,\n







mtl
>=2.2
&&
<2.3,\n







splitmix
>=0.1
&&
<0.2\n



if
impl(ghc
<
8.0)\n






build-depends:\n










transformers\n



if
impl(ghc
<
8.4)\n





build-depends:

ghc-byteorder\n\ntest-suite
legacy-test\n



type:












exitcode-stdio-1.0\n



main-is:









Legacy.hs\n



hs-source-dirs:


test-legacy\n



other-modules:\n







T7936\n







TestRandomIOs\n







TestRandomRs\n







Random1283\n







RangeTest\n\n



default-language:
Haskell2010\n



ghc-options:





-with-rtsopts=-M4M\n



if
impl(ghc
>=
8.0)\n







ghc-options:\n











-Wno-deprecations\n



build-depends:\n







base,\n







containers
>=0.5
&&
<0.7,\n







random\n\ntest-suite
doctests\n



type:












exitcode-stdio-1.0\n



main-is:









doctests.hs\n



hs-source-dirs:


test\n



default-language:
Haskell2010\n



build-depends:\n







base,\n







doctest
>=0.15
&&
<0.19\n



if
impl(ghc
>=
8.2)
&&
impl(ghc
<
8.10)\n







build-depends:\n











mwc-random
>=0.13
&&
<0.16,\n











primitive
>=0.6
&&
<0.8,\n











random,\n











stm,\n











unliftio
>=0.2
&&
<0.3,\n











vector
>=
0.10
&&
<0.14\n\ntest-suite
spec\n



type:












exitcode-stdio-1.0\n



main-is:









Spec.hs\n



hs-source-dirs:


test\n



other-modules:\n







Spec.Range\n







Spec.Run\n







Spec.Stateful\n\n



default-language:
Haskell2010\n



ghc-options:





-Wall\n



build-depends:\n







base,\n







bytestring,\n







random,\n







smallcheck
>=1.2
&&
<1.3,\n







stm,\n







tasty
>=1.0
&&
<1.5,\n







tasty-smallcheck
>=0.8
&&
<0.9,\n







tasty-hunit
>=0.10
&&
<0.11,\n







transformers\n\n--
Note.
Fails
when
compiled
with
coverage:\n--
https://github.com/haskell/random/issues/107\ntest-suite
spec-inspection\n



type:












exitcode-stdio-1.0\n



main-is:









Spec.hs\n



hs-source-dirs:


test-inspection\n



build-depends:\n\n



default-language:
Haskell2010\n



ghc-options:





-Wall\n



build-depends:\n







base,\n







random,\n







tasty
>=1.0
&&
<1.5\n



if
impl(ghc
>=
8.0)\n







build-depends:\n











tasty-inspection-testing\n







other-modules:\n











Spec.Inspection\n\nbenchmark
legacy-bench\n



type:












exitcode-stdio-1.0\n



main-is:









SimpleRNGBench.hs\n



hs-source-dirs:


bench-legacy\n



other-modules:



BinSearch\n



default-language:
Haskell2010\n



ghc-options:\n







-Wall
-O2
-threaded
-rtsopts
-with-rtsopts=-N\n



if
impl(ghc
>=
8.0)\n







ghc-options:\n











-Wno-deprecations\n\n



build-depends:\n







base,\n







random,\n







rdtsc,\n







split
>=0.2
&&
<0.3,\n







time
>=1.4
&&
<1.11\n\nbenchmark
bench\n



type:












exitcode-stdio-1.0\n



main-is:









Main.hs\n



hs-source-dirs:


bench\n



default-language:
Haskell2010\n



ghc-options:





-Wall
-O2\n



build-depends:\n







base,\n







mtl,\n







primitive
>=
0.7.1,\n







random,\n







splitmix
>=0.1
&&
<0.2,\n







tasty-bench\n",
elabVanillaLib
=
True,
elabSharedLib
=
True,
elabStaticLib
=
False,
elabDynExe
=
False,
elabFullyStaticExe
=
False,
elabGHCiLib
=
False,
elabProfLib
=
False,
elabProfExe
=
False,
elabProfLibDetail
=
ProfDetailDefault,
elabProfExeDetail
=
ProfDetailDefault,
elabCoverage
=
False,
elabOptimization
=
NormalOptimisation,
elabSplitObjs
=
False,
elabSplitSections
=
False,
elabStripLibs
=
False,
elabStripExes
=
False,
elabDebugInfo
=
NoDebugInfo,
elabDumpBuildInfo
=
NoDumpBuildInfo,
elabProgramPaths
=
fromList
[("ghc","/nix/store/lrwichshmxvlqnbbym9yg4bxqsrvc88j-ghc-8.10.7/bin/ghc"),("ghc-pkg","/nix/store/lrwichshmxvlqnbbym9yg4bxqsrvc88j-ghc-8.10.7/bin/ghc-pkg-8.10.7")],
elabProgramArgs
=
fromList
[],
elabProgramPathExtra
=
["/home/michaels/.cabal/bin"],
elabConfigureScriptArgs
=
[],
elabExtraLibDirs
=
[],
elabExtraLibDirsStatic
=
[],
elabExtraFrameworkDirs
=
[],
elabExtraIncludeDirs
=
[],
elabProgPrefix
=
Nothing,
elabProgSuffix
=
Nothing,
elabInstallDirs
=
InstallDirs
{prefix
=
"/home/michaels/.cabal/store/ghc-8.10.7/random-1.2.1-27f75c738ff56dde673ff6b8730ddcf155b7971f3e93018daa2185a2407a7278",
bindir
=
"/home/michaels/.cabal/store/ghc-8.10.7/random-1.2.1-27f75c738ff56dde673ff6b8730ddcf155b7971f3e93018daa2185a2407a7278/bin",
libdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/random-1.2.1-27f75c738ff56dde673ff6b8730ddcf155b7971f3e93018daa2185a2407a7278/lib",
libsubdir
=
"",
dynlibdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/random-1.2.1-27f75c738ff56dde673ff6b8730ddcf155b7971f3e93018daa2185a2407a7278/lib",
flibdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/random-1.2.1-27f75c738ff56dde673ff6b8730ddcf155b7971f3e93018daa2185a2407a7278/lib",
libexecdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/random-1.2.1-27f75c738ff56dde673ff6b8730ddcf155b7971f3e93018daa2185a2407a7278/libexec",
libexecsubdir
=
"",
includedir
=
"/home/michaels/.cabal/store/ghc-8.10.7/random-1.2.1-27f75c738ff56dde673ff6b8730ddcf155b7971f3e93018daa2185a2407a7278/lib/include",
datadir
=
"/home/michaels/.cabal/store/ghc-8.10.7/random-1.2.1-27f75c738ff56dde673ff6b8730ddcf155b7971f3e93018daa2185a2407a7278/share",
datasubdir
=
"",
docdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/random-1.2.1-27f75c738ff56dde673ff6b8730ddcf155b7971f3e93018daa2185a2407a7278/share/doc",
mandir
=
"/home/michaels/.cabal/store/ghc-8.10.7/random-1.2.1-27f75c738ff56dde673ff6b8730ddcf155b7971f3e93018daa2185a2407a7278/share/man",
htmldir
=
"/home/michaels/.cabal/store/ghc-8.10.7/random-1.2.1-27f75c738ff56dde673ff6b8730ddcf155b7971f3e93018daa2185a2407a7278/share/doc/html",
haddockdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/random-1.2.1-27f75c738ff56dde673ff6b8730ddcf155b7971f3e93018daa2185a2407a7278/share/doc/html",
sysconfdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/random-1.2.1-27f75c738ff56dde673ff6b8730ddcf155b7971f3e93018daa2185a2407a7278/etc"},
elabHaddockHoogle
=
False,
elabHaddockHtml
=
False,
elabHaddockHtmlLocation
=
Nothing,
elabHaddockForeignLibs
=
False,
elabHaddockForHackage
=
ForDevelopment,
elabHaddockExecutables
=
False,
elabHaddockTestSuites
=
False,
elabHaddockBenchmarks
=
False,
elabHaddockInternal
=
False,
elabHaddockCss
=
Nothing,
elabHaddockLinkedSource
=
False,
elabHaddockQuickJump
=
False,
elabHaddockHscolourCss
=
Nothing,
elabHaddockContents
=
Nothing,
elabTestMachineLog
=
Just
"$pkgid.log",
elabTestHumanLog
=
Just
"$pkgid-$test-suite.log",
elabTestShowDetails
=
Just
Failures,
elabTestKeepTix
=
False,
elabTestWrapper
=
Nothing,
elabTestFailWhenNoTestSuites
=
False,
elabTestTestOptions
=
[],
elabBenchmarkOptions
=
[],
elabSetupScriptStyle
=
SetupNonCustomInternalLib,
elabSetupScriptCliVersion
=
mkVersion
[3,7,0,0],
elabConfigureTargets
=
[],
elabBuildTargets
=
[],
elabTestTargets
=
[],
elabBenchTargets
=
[],
elabReplTarget
=
Nothing,
elabHaddockTargets
=
[],
elabBuildHaddocks
=
False,
elabPkgOrComp
=
ElabPackage
(ElaboratedPackage
{pkgInstalledId
=
ComponentId
"random-1.2.1-27f75c738ff56dde673ff6b8730ddcf155b7971f3e93018daa2185a2407a7278",
pkgLibDependencies
=
ComponentDeps
{unComponentDeps
=
fromList
[(ComponentLib,[ComponentId
"base-4.14.3.0",ComponentId
"bytestring-0.10.12.0",ComponentId
"deepseq-1.4.4.0",ComponentId
"mtl-2.2.2",ComponentId
"splitmix-0.1.0.4-67c84d13e4d7c71df2ebc6ec425fdcc4f24fcbdf70984a80c9452679ca619983"])]},
pkgDependsOnSelfLib
=
ComponentDeps
{unComponentDeps
=
fromList
[(ComponentLib,[()])]},
pkgExeDependencies
=
ComponentDeps
{unComponentDeps
=
fromList
[(ComponentLib,[])]},
pkgExeDependencyPaths
=
ComponentDeps
{unComponentDeps
=
fromList
[(ComponentLib,[])]},
pkgPkgConfigDependencies
=
[],
pkgStanzasEnabled
=
OptionalStanzaSet
0})}
ElaboratedConfiguredPackage
{elabUnitId
=
UnitId
"QuickCheck-2.14.2-6467e0fb8e4c059a4b4a73f2bd7b7056d024e00a5bfbdcc6e27253b020fc4af3",
elabComponentId
=
ComponentId
"QuickCheck-2.14.2-6467e0fb8e4c059a4b4a73f2bd7b7056d024e00a5bfbdcc6e27253b020fc4af3",
elabInstantiatedWith
=
fromList
[],
elabLinkedInstantiatedWith
=
fromList
[],
elabIsCanonical
=
True,
elabPkgSourceId
=
PackageIdentifier
{pkgName
=
PackageName
"QuickCheck",
pkgVersion
=
mkVersion
[2,14,2]},
elabModuleShape
=
ModuleShape
{modShapeProvides
=
fromList
[(ModuleName
"Test.QuickCheck",OpenModule
(IndefFullUnitId
(ComponentId
"QuickCheck-2.14.2-85a737922b896838cfe93005c0a0ae9d4f800fd0c8c8eea3d4f52e45a0559d5d")
(fromList
[]))
(ModuleName
"Test.QuickCheck")),(ModuleName
"Test.QuickCheck.All",OpenModule
(IndefFullUnitId
(ComponentId
"QuickCheck-2.14.2-85a737922b896838cfe93005c0a0ae9d4f800fd0c8c8eea3d4f52e45a0559d5d")
(fromList
[]))
(ModuleName
"Test.QuickCheck.All")),(ModuleName
"Test.QuickCheck.Arbitrary",OpenModule
(IndefFullUnitId
(ComponentId
"QuickCheck-2.14.2-85a737922b896838cfe93005c0a0ae9d4f800fd0c8c8eea3d4f52e45a0559d5d")
(fromList
[]))
(ModuleName
"Test.QuickCheck.Arbitrary")),(ModuleName
"Test.QuickCheck.Exception",OpenModule
(IndefFullUnitId
(ComponentId
"QuickCheck-2.14.2-85a737922b896838cfe93005c0a0ae9d4f800fd0c8c8eea3d4f52e45a0559d5d")
(fromList
[]))
(ModuleName
"Test.QuickCheck.Exception")),(ModuleName
"Test.QuickCheck.Features",OpenModule
(IndefFullUnitId
(ComponentId
"QuickCheck-2.14.2-85a737922b896838cfe93005c0a0ae9d4f800fd0c8c8eea3d4f52e45a0559d5d")
(fromList
[]))
(ModuleName
"Test.QuickCheck.Features")),(ModuleName
"Test.QuickCheck.Function",OpenModule
(IndefFullUnitId
(ComponentId
"QuickCheck-2.14.2-85a737922b896838cfe93005c0a0ae9d4f800fd0c8c8eea3d4f52e45a0559d5d")
(fromList
[]))
(ModuleName
"Test.QuickCheck.Function")),(ModuleName
"Test.QuickCheck.Gen",OpenModule
(IndefFullUnitId
(ComponentId
"QuickCheck-2.14.2-85a737922b896838cfe93005c0a0ae9d4f800fd0c8c8eea3d4f52e45a0559d5d")
(fromList
[]))
(ModuleName
"Test.QuickCheck.Gen")),(ModuleName
"Test.QuickCheck.Gen.Unsafe",OpenModule
(IndefFullUnitId
(ComponentId
"QuickCheck-2.14.2-85a737922b896838cfe93005c0a0ae9d4f800fd0c8c8eea3d4f52e45a0559d5d")
(fromList
[]))
(ModuleName
"Test.QuickCheck.Gen.Unsafe")),(ModuleName
"Test.QuickCheck.Modifiers",OpenModule
(IndefFullUnitId
(ComponentId
"QuickCheck-2.14.2-85a737922b896838cfe93005c0a0ae9d4f800fd0c8c8eea3d4f52e45a0559d5d")
(fromList
[]))
(ModuleName
"Test.QuickCheck.Modifiers")),(ModuleName
"Test.QuickCheck.Monadic",OpenModule
(IndefFullUnitId
(ComponentId
"QuickCheck-2.14.2-85a737922b896838cfe93005c0a0ae9d4f800fd0c8c8eea3d4f52e45a0559d5d")
(fromList
[]))
(ModuleName
"Test.QuickCheck.Monadic")),(ModuleName
"Test.QuickCheck.Poly",OpenModule
(IndefFullUnitId
(ComponentId
"QuickCheck-2.14.2-85a737922b896838cfe93005c0a0ae9d4f800fd0c8c8eea3d4f52e45a0559d5d")
(fromList
[]))
(ModuleName
"Test.QuickCheck.Poly")),(ModuleName
"Test.QuickCheck.Property",OpenModule
(IndefFullUnitId
(ComponentId
"QuickCheck-2.14.2-85a737922b896838cfe93005c0a0ae9d4f800fd0c8c8eea3d4f52e45a0559d5d")
(fromList
[]))
(ModuleName
"Test.QuickCheck.Property")),(ModuleName
"Test.QuickCheck.Random",OpenModule
(IndefFullUnitId
(ComponentId
"QuickCheck-2.14.2-85a737922b896838cfe93005c0a0ae9d4f800fd0c8c8eea3d4f52e45a0559d5d")
(fromList
[]))
(ModuleName
"Test.QuickCheck.Random")),(ModuleName
"Test.QuickCheck.State",OpenModule
(IndefFullUnitId
(ComponentId
"QuickCheck-2.14.2-85a737922b896838cfe93005c0a0ae9d4f800fd0c8c8eea3d4f52e45a0559d5d")
(fromList
[]))
(ModuleName
"Test.QuickCheck.State")),(ModuleName
"Test.QuickCheck.Test",OpenModule
(IndefFullUnitId
(ComponentId
"QuickCheck-2.14.2-85a737922b896838cfe93005c0a0ae9d4f800fd0c8c8eea3d4f52e45a0559d5d")
(fromList
[]))
(ModuleName
"Test.QuickCheck.Test")),(ModuleName
"Test.QuickCheck.Text",OpenModule
(IndefFullUnitId
(ComponentId
"QuickCheck-2.14.2-85a737922b896838cfe93005c0a0ae9d4f800fd0c8c8eea3d4f52e45a0559d5d")
(fromList
[]))
(ModuleName
"Test.QuickCheck.Text"))],
modShapeRequires
=
fromList
[]},
elabFlagAssignment
=
fromList
[(FlagName
"old-random",(1,False)),(FlagName
"templatehaskell",(1,True))],
elabFlagDefaults
=
fromList
[(FlagName
"old-random",(1,False)),(FlagName
"templatehaskell",(1,True))],
elabPkgDescription
=
PackageDescription
{specVersion
=
CabalSpecV1_10,
package
=
PackageIdentifier
{pkgName
=
PackageName
"QuickCheck",
pkgVersion
=
mkVersion
[2,14,2]},
licenseRaw
=
Right
BSD3,
licenseFiles
=
[SymbolicPath
"LICENSE"],
copyright
=
"2000-2019
Koen
Claessen,
2006-2008
Bj\246rn
Bringert,
2009-2019
Nick
Smallbone",
maintainer
=
"Nick
Smallbone
<nick@smallbone.se>",
author
=
"Koen
Claessen
<koen@chalmers.se>",
stability
=
"",
testedWith
=
[(GHC,UnionVersionRanges
(ThisVersion
(mkVersion
[7,0,4]))
(UnionVersionRanges
(ThisVersion
(mkVersion
[7,2,2]))
(OrLaterVersion
(mkVersion
[7,4]))))],
homepage
=
"https://github.com/nick8325/quickcheck",
pkgUrl
=
"",
bugReports
=
"https://github.com/nick8325/quickcheck/issues",
sourceRepos
=
[SourceRepo
{repoKind
=
RepoHead,
repoType
=
Just
(KnownRepoType
Git),
repoLocation
=
Just
"https://github.com/nick8325/quickcheck",
repoModule
=
Nothing,
repoBranch
=
Nothing,
repoTag
=
Nothing,
repoSubdir
=
Nothing},SourceRepo
{repoKind
=
RepoThis,
repoType
=
Just
(KnownRepoType
Git),
repoLocation
=
Just
"https://github.com/nick8325/quickcheck",
repoModule
=
Nothing,
repoBranch
=
Nothing,
repoTag
=
Just
"2.14.2",
repoSubdir
=
Nothing}],
synopsis
=
"Automatic
testing
of
Haskell
programs",
description
=
"QuickCheck
is
a
library
for
random
testing
of
program
properties.\nThe
programmer
provides
a
specification
of
the
program,
in
the
form
of\nproperties
which
functions
should
satisfy,
and
QuickCheck
then
tests
that
the\nproperties
hold
in
a
large
number
of
randomly
generated
cases.\nSpecifications
are
expressed
in
Haskell,
using
combinators
provided
by\nQuickCheck.
QuickCheck
provides
combinators
to
define
properties,
observe
the\ndistribution
of
test
data,
and
define
test
data
generators.\n\nMost
of
QuickCheck's
functionality
is
exported
by
the
main
\"Test.QuickCheck\"\nmodule.
The
main
exception
is
the
monadic
property
testing
library
in\n\"Test.QuickCheck.Monadic\".\n\nIf
you
are
new
to
QuickCheck,
you
can
try
looking
at
the
following
resources:\n\n*
The
<http://www.cse.chalmers.se/~rjmh/QuickCheck/manual.html
official
QuickCheck
manual>.\nIt's
a
bit
out-of-date
in
some
details
and
doesn't
cover
newer
QuickCheck
features,\nbut
is
still
full
of
good
advice.\n*
<https://begriffs.com/posts/2017-01-14-design-use-quickcheck.html>,\na
detailed
tutorial
written
by
a
user
of
QuickCheck.\n\nThe
<https://hackage.haskell.org/package/quickcheck-instances
quickcheck-instances>\ncompanion
package
provides
instances
for
types
in
Haskell
Platform
packages\nat
the
cost
of
additional
dependencies.",
category
=
"Testing",
customFieldsPD
=
[],
buildTypeRaw
=
Just
Simple,
setupBuildInfo
=
Nothing,
library
=
Just
(Library
{libName
=
LMainLibName,
exposedModules
=
[ModuleName
"Test.QuickCheck",ModuleName
"Test.QuickCheck.Arbitrary",ModuleName
"Test.QuickCheck.Gen",ModuleName
"Test.QuickCheck.Gen.Unsafe",ModuleName
"Test.QuickCheck.Monadic",ModuleName
"Test.QuickCheck.Modifiers",ModuleName
"Test.QuickCheck.Property",ModuleName
"Test.QuickCheck.Test",ModuleName
"Test.QuickCheck.Text",ModuleName
"Test.QuickCheck.Poly",ModuleName
"Test.QuickCheck.State",ModuleName
"Test.QuickCheck.Random",ModuleName
"Test.QuickCheck.Exception",ModuleName
"Test.QuickCheck.Features",ModuleName
"Test.QuickCheck.Function",ModuleName
"Test.QuickCheck.All"],
reexportedModules
=
[],
signatures
=
[],
libExposed
=
True,
libVisibility
=
LibraryVisibilityPublic,
libBuildInfo
=
BuildInfo
{buildable
=
True,
buildTools
=
[],
buildToolDepends
=
[],
cppOptions
=
[],
asmOptions
=
[],
cmmOptions
=
[],
ccOptions
=
[],
cxxOptions
=
[],
ldOptions
=
[],
hsc2hsOptions
=
[],
pkgconfigDepends
=
[],
frameworks
=
[],
extraFrameworkDirs
=
[],
asmSources
=
[],
cmmSources
=
[],
cSources
=
[],
cxxSources
=
[],
jsSources
=
[],
hsSourceDirs
=
[SymbolicPath
"src"],
otherModules
=
[],
virtualModules
=
[],
autogenModules
=
[],
defaultLanguage
=
Just
Haskell2010,
otherLanguages
=
[],
defaultExtensions
=
[],
otherExtensions
=
[EnableExtension
TemplateHaskell],
oldExtensions
=
[],
extraLibs
=
[],
extraLibsStatic
=
[],
extraGHCiLibs
=
[],
extraBundledLibs
=
[],
extraLibFlavours
=
[],
extraDynLibFlavours
=
[],
extraLibDirs
=
[],
extraLibDirsStatic
=
[],
includeDirs
=
[],
includes
=
[],
autogenIncludes
=
[],
installIncludes
=
[],
options
=
PerCompilerFlavor
[]
[],
profOptions
=
PerCompilerFlavor
[]
[],
sharedOptions
=
PerCompilerFlavor
[]
[],
staticOptions
=
PerCompilerFlavor
[]
[],
customFieldsBI
=
[],
targetBuildDepends
=
[Dependency
(PackageName
"base")
(IntersectVersionRanges
(OrLaterVersion
(mkVersion
[4,3]))
(EarlierVersion
(mkVersion
[5])))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"containers")
(IntersectVersionRanges
(OrLaterVersion
(mkVersion
[0]))
(OrLaterVersion
(mkVersion
[0,4,2,1])))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"deepseq")
(OrLaterVersion
(mkVersion
[1,1,0,0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"random")
(IntersectVersionRanges
(IntersectVersionRanges
(OrLaterVersion
(mkVersion
[1,2,0]))
(EarlierVersion
(mkVersion
[1,3])))
(OrLaterVersion
(mkVersion
[1,0,1,0])))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"splitmix")
(IntersectVersionRanges
(OrLaterVersion
(mkVersion
[0,1]))
(EarlierVersion
(mkVersion
[0,2])))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"template-haskell")
(OrLaterVersion
(mkVersion
[2,4]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"transformers")
(OrLaterVersion
(mkVersion
[0,3]))
(fromNonEmpty
(LMainLibName
:|
[]))],
mixins
=
[]}}),
subLibraries
=
[],
executables
=
[],
foreignLibs
=
[],
testSuites
=
[TestSuite
{testName
=
UnqualComponentName
"test-quickcheck",
testInterface
=
TestSuiteExeV10
(mkVersion
[1,0])
"Heap.hs",
testBuildInfo
=
BuildInfo
{buildable
=
True,
buildTools
=
[],
buildToolDepends
=
[],
cppOptions
=
[],
asmOptions
=
[],
cmmOptions
=
[],
ccOptions
=
[],
cxxOptions
=
[],
ldOptions
=
[],
hsc2hsOptions
=
[],
pkgconfigDepends
=
[],
frameworks
=
[],
extraFrameworkDirs
=
[],
asmSources
=
[],
cmmSources
=
[],
cSources
=
[],
cxxSources
=
[],
jsSources
=
[],
hsSourceDirs
=
[SymbolicPath
"examples"],
otherModules
=
[],
virtualModules
=
[],
autogenModules
=
[],
defaultLanguage
=
Just
Haskell2010,
otherLanguages
=
[],
defaultExtensions
=
[],
otherExtensions
=
[],
oldExtensions
=
[],
extraLibs
=
[],
extraLibsStatic
=
[],
extraGHCiLibs
=
[],
extraBundledLibs
=
[],
extraLibFlavours
=
[],
extraDynLibFlavours
=
[],
extraLibDirs
=
[],
extraLibDirsStatic
=
[],
includeDirs
=
[],
includes
=
[],
autogenIncludes
=
[],
installIncludes
=
[],
options
=
PerCompilerFlavor
[]
[],
profOptions
=
PerCompilerFlavor
[]
[],
sharedOptions
=
PerCompilerFlavor
[]
[],
staticOptions
=
PerCompilerFlavor
[]
[],
customFieldsBI
=
[],
targetBuildDepends
=
[Dependency
(PackageName
"QuickCheck")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"base")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[]))],
mixins
=
[]}},TestSuite
{testName
=
UnqualComponentName
"test-quickcheck-gcoarbitrary",
testInterface
=
TestSuiteExeV10
(mkVersion
[1,0])
"GCoArbitraryExample.hs",
testBuildInfo
=
BuildInfo
{buildable
=
True,
buildTools
=
[],
buildToolDepends
=
[],
cppOptions
=
[],
asmOptions
=
[],
cmmOptions
=
[],
ccOptions
=
[],
cxxOptions
=
[],
ldOptions
=
[],
hsc2hsOptions
=
[],
pkgconfigDepends
=
[],
frameworks
=
[],
extraFrameworkDirs
=
[],
asmSources
=
[],
cmmSources
=
[],
cSources
=
[],
cxxSources
=
[],
jsSources
=
[],
hsSourceDirs
=
[SymbolicPath
"tests"],
otherModules
=
[],
virtualModules
=
[],
autogenModules
=
[],
defaultLanguage
=
Just
Haskell2010,
otherLanguages
=
[],
defaultExtensions
=
[],
otherExtensions
=
[],
oldExtensions
=
[],
extraLibs
=
[],
extraLibsStatic
=
[],
extraGHCiLibs
=
[],
extraBundledLibs
=
[],
extraLibFlavours
=
[],
extraDynLibFlavours
=
[],
extraLibDirs
=
[],
extraLibDirsStatic
=
[],
includeDirs
=
[],
includes
=
[],
autogenIncludes
=
[],
installIncludes
=
[],
options
=
PerCompilerFlavor
[]
[],
profOptions
=
PerCompilerFlavor
[]
[],
sharedOptions
=
PerCompilerFlavor
[]
[],
staticOptions
=
PerCompilerFlavor
[]
[],
customFieldsBI
=
[],
targetBuildDepends
=
[Dependency
(PackageName
"QuickCheck")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"base")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[]))],
mixins
=
[]}},TestSuite
{testName
=
UnqualComponentName
"test-quickcheck-generators",
testInterface
=
TestSuiteExeV10
(mkVersion
[1,0])
"Generators.hs",
testBuildInfo
=
BuildInfo
{buildable
=
True,
buildTools
=
[],
buildToolDepends
=
[],
cppOptions
=
[],
asmOptions
=
[],
cmmOptions
=
[],
ccOptions
=
[],
cxxOptions
=
[],
ldOptions
=
[],
hsc2hsOptions
=
[],
pkgconfigDepends
=
[],
frameworks
=
[],
extraFrameworkDirs
=
[],
asmSources
=
[],
cmmSources
=
[],
cSources
=
[],
cxxSources
=
[],
jsSources
=
[],
hsSourceDirs
=
[SymbolicPath
"tests"],
otherModules
=
[],
virtualModules
=
[],
autogenModules
=
[],
defaultLanguage
=
Just
Haskell2010,
otherLanguages
=
[],
defaultExtensions
=
[],
otherExtensions
=
[],
oldExtensions
=
[],
extraLibs
=
[],
extraLibsStatic
=
[],
extraGHCiLibs
=
[],
extraBundledLibs
=
[],
extraLibFlavours
=
[],
extraDynLibFlavours
=
[],
extraLibDirs
=
[],
extraLibDirsStatic
=
[],
includeDirs
=
[],
includes
=
[],
autogenIncludes
=
[],
installIncludes
=
[],
options
=
PerCompilerFlavor
[]
[],
profOptions
=
PerCompilerFlavor
[]
[],
sharedOptions
=
PerCompilerFlavor
[]
[],
staticOptions
=
PerCompilerFlavor
[]
[],
customFieldsBI
=
[],
targetBuildDepends
=
[Dependency
(PackageName
"QuickCheck")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"base")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[]))],
mixins
=
[]}},TestSuite
{testName
=
UnqualComponentName
"test-quickcheck-gshrink",
testInterface
=
TestSuiteExeV10
(mkVersion
[1,0])
"GShrinkExample.hs",
testBuildInfo
=
BuildInfo
{buildable
=
True,
buildTools
=
[],
buildToolDepends
=
[],
cppOptions
=
[],
asmOptions
=
[],
cmmOptions
=
[],
ccOptions
=
[],
cxxOptions
=
[],
ldOptions
=
[],
hsc2hsOptions
=
[],
pkgconfigDepends
=
[],
frameworks
=
[],
extraFrameworkDirs
=
[],
asmSources
=
[],
cmmSources
=
[],
cSources
=
[],
cxxSources
=
[],
jsSources
=
[],
hsSourceDirs
=
[SymbolicPath
"tests"],
otherModules
=
[],
virtualModules
=
[],
autogenModules
=
[],
defaultLanguage
=
Just
Haskell2010,
otherLanguages
=
[],
defaultExtensions
=
[],
otherExtensions
=
[],
oldExtensions
=
[],
extraLibs
=
[],
extraLibsStatic
=
[],
extraGHCiLibs
=
[],
extraBundledLibs
=
[],
extraLibFlavours
=
[],
extraDynLibFlavours
=
[],
extraLibDirs
=
[],
extraLibDirsStatic
=
[],
includeDirs
=
[],
includes
=
[],
autogenIncludes
=
[],
installIncludes
=
[],
options
=
PerCompilerFlavor
[]
[],
profOptions
=
PerCompilerFlavor
[]
[],
sharedOptions
=
PerCompilerFlavor
[]
[],
staticOptions
=
PerCompilerFlavor
[]
[],
customFieldsBI
=
[],
targetBuildDepends
=
[Dependency
(PackageName
"QuickCheck")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"base")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[]))],
mixins
=
[]}},TestSuite
{testName
=
UnqualComponentName
"test-quickcheck-terminal",
testInterface
=
TestSuiteExeV10
(mkVersion
[1,0])
"Terminal.hs",
testBuildInfo
=
BuildInfo
{buildable
=
True,
buildTools
=
[],
buildToolDepends
=
[],
cppOptions
=
[],
asmOptions
=
[],
cmmOptions
=
[],
ccOptions
=
[],
cxxOptions
=
[],
ldOptions
=
[],
hsc2hsOptions
=
[],
pkgconfigDepends
=
[],
frameworks
=
[],
extraFrameworkDirs
=
[],
asmSources
=
[],
cmmSources
=
[],
cSources
=
[],
cxxSources
=
[],
jsSources
=
[],
hsSourceDirs
=
[SymbolicPath
"tests"],
otherModules
=
[],
virtualModules
=
[],
autogenModules
=
[],
defaultLanguage
=
Just
Haskell2010,
otherLanguages
=
[],
defaultExtensions
=
[],
otherExtensions
=
[],
oldExtensions
=
[],
extraLibs
=
[],
extraLibsStatic
=
[],
extraGHCiLibs
=
[],
extraBundledLibs
=
[],
extraLibFlavours
=
[],
extraDynLibFlavours
=
[],
extraLibDirs
=
[],
extraLibDirsStatic
=
[],
includeDirs
=
[],
includes
=
[],
autogenIncludes
=
[],
installIncludes
=
[],
options
=
PerCompilerFlavor
[]
[],
profOptions
=
PerCompilerFlavor
[]
[],
sharedOptions
=
PerCompilerFlavor
[]
[],
staticOptions
=
PerCompilerFlavor
[]
[],
customFieldsBI
=
[],
targetBuildDepends
=
[Dependency
(PackageName
"QuickCheck")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"base")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"deepseq")
(OrLaterVersion
(mkVersion
[1,1,0,0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"process")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[]))],
mixins
=
[]}},TestSuite
{testName
=
UnqualComponentName
"test-quickcheck-monadfix",
testInterface
=
TestSuiteExeV10
(mkVersion
[1,0])
"MonadFix.hs",
testBuildInfo
=
BuildInfo
{buildable
=
True,
buildTools
=
[],
buildToolDepends
=
[],
cppOptions
=
[],
asmOptions
=
[],
cmmOptions
=
[],
ccOptions
=
[],
cxxOptions
=
[],
ldOptions
=
[],
hsc2hsOptions
=
[],
pkgconfigDepends
=
[],
frameworks
=
[],
extraFrameworkDirs
=
[],
asmSources
=
[],
cmmSources
=
[],
cSources
=
[],
cxxSources
=
[],
jsSources
=
[],
hsSourceDirs
=
[SymbolicPath
"tests"],
otherModules
=
[],
virtualModules
=
[],
autogenModules
=
[],
defaultLanguage
=
Just
Haskell2010,
otherLanguages
=
[],
defaultExtensions
=
[],
otherExtensions
=
[],
oldExtensions
=
[],
extraLibs
=
[],
extraLibsStatic
=
[],
extraGHCiLibs
=
[],
extraBundledLibs
=
[],
extraLibFlavours
=
[],
extraDynLibFlavours
=
[],
extraLibDirs
=
[],
extraLibDirsStatic
=
[],
includeDirs
=
[],
includes
=
[],
autogenIncludes
=
[],
installIncludes
=
[],
options
=
PerCompilerFlavor
[]
[],
profOptions
=
PerCompilerFlavor
[]
[],
sharedOptions
=
PerCompilerFlavor
[]
[],
staticOptions
=
PerCompilerFlavor
[]
[],
customFieldsBI
=
[],
targetBuildDepends
=
[Dependency
(PackageName
"QuickCheck")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"base")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[]))],
mixins
=
[]}},TestSuite
{testName
=
UnqualComponentName
"test-quickcheck-split",
testInterface
=
TestSuiteExeV10
(mkVersion
[1,0])
"Split.hs",
testBuildInfo
=
BuildInfo
{buildable
=
True,
buildTools
=
[],
buildToolDepends
=
[],
cppOptions
=
[],
asmOptions
=
[],
cmmOptions
=
[],
ccOptions
=
[],
cxxOptions
=
[],
ldOptions
=
[],
hsc2hsOptions
=
[],
pkgconfigDepends
=
[],
frameworks
=
[],
extraFrameworkDirs
=
[],
asmSources
=
[],
cmmSources
=
[],
cSources
=
[],
cxxSources
=
[],
jsSources
=
[],
hsSourceDirs
=
[SymbolicPath
"tests"],
otherModules
=
[],
virtualModules
=
[],
autogenModules
=
[],
defaultLanguage
=
Just
Haskell2010,
otherLanguages
=
[],
defaultExtensions
=
[],
otherExtensions
=
[],
oldExtensions
=
[],
extraLibs
=
[],
extraLibsStatic
=
[],
extraGHCiLibs
=
[],
extraBundledLibs
=
[],
extraLibFlavours
=
[],
extraDynLibFlavours
=
[],
extraLibDirs
=
[],
extraLibDirsStatic
=
[],
includeDirs
=
[],
includes
=
[],
autogenIncludes
=
[],
installIncludes
=
[],
options
=
PerCompilerFlavor
[]
[],
profOptions
=
PerCompilerFlavor
[]
[],
sharedOptions
=
PerCompilerFlavor
[]
[],
staticOptions
=
PerCompilerFlavor
[]
[],
customFieldsBI
=
[],
targetBuildDepends
=
[Dependency
(PackageName
"QuickCheck")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"base")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[]))],
mixins
=
[]}},TestSuite
{testName
=
UnqualComponentName
"test-quickcheck-misc",
testInterface
=
TestSuiteExeV10
(mkVersion
[1,0])
"Misc.hs",
testBuildInfo
=
BuildInfo
{buildable
=
True,
buildTools
=
[],
buildToolDepends
=
[],
cppOptions
=
[],
asmOptions
=
[],
cmmOptions
=
[],
ccOptions
=
[],
cxxOptions
=
[],
ldOptions
=
[],
hsc2hsOptions
=
[],
pkgconfigDepends
=
[],
frameworks
=
[],
extraFrameworkDirs
=
[],
asmSources
=
[],
cmmSources
=
[],
cSources
=
[],
cxxSources
=
[],
jsSources
=
[],
hsSourceDirs
=
[SymbolicPath
"tests"],
otherModules
=
[],
virtualModules
=
[],
autogenModules
=
[],
defaultLanguage
=
Just
Haskell2010,
otherLanguages
=
[],
defaultExtensions
=
[],
otherExtensions
=
[],
oldExtensions
=
[],
extraLibs
=
[],
extraLibsStatic
=
[],
extraGHCiLibs
=
[],
extraBundledLibs
=
[],
extraLibFlavours
=
[],
extraDynLibFlavours
=
[],
extraLibDirs
=
[],
extraLibDirsStatic
=
[],
includeDirs
=
[],
includes
=
[],
autogenIncludes
=
[],
installIncludes
=
[],
options
=
PerCompilerFlavor
[]
[],
profOptions
=
PerCompilerFlavor
[]
[],
sharedOptions
=
PerCompilerFlavor
[]
[],
staticOptions
=
PerCompilerFlavor
[]
[],
customFieldsBI
=
[],
targetBuildDepends
=
[Dependency
(PackageName
"QuickCheck")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"base")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[]))],
mixins
=
[]}}],
benchmarks
=
[],
dataFiles
=
[],
dataDir
=
".",
extraSrcFiles
=
["README","changelog","examples/Heap.hs","examples/Heap_Program.hs","examples/Heap_ProgramAlgebraic.hs","examples/Lambda.hs","examples/Merge.hs","examples/Set.hs","examples/Simple.hs","make-hugs","test-hugs"],
extraTmpFiles
=
[],
extraDocFiles
=
[]},
elabPkgSourceLocation
=
RepoTarballPackage
(RepoSecure
{repoRemote
=
RemoteRepo
{remoteRepoName
=
RepoName
"hackage.haskell.org",
remoteRepoURI
=
http://hackage.haskell.org/,
remoteRepoSecure
=
Just
True,
remoteRepoRootKeys
=
["fe331502606802feac15e514d9b9ea83fee8b6ffef71335479a2e68d84adc6b0","1ea9ba32c526d1cc91ab5e5bd364ec5e9e8cb67179a471872f6e26f0ae773d42","2c6c3627bd6c982990239487f1abd02e08a02e6cf16edb105a8012d444d870c3","0a5c7ea47cd1b15f01f5f51a33adda7e655bc0f0b0615baa8e271f4c3351e21d","51f0161b906011b52c6613376b1ae937670da69322113a246a09f807c62f6921"],
remoteRepoKeyThreshold
=
3,
remoteRepoShouldTryHttps
=
True},
repoLocalDir
=
"/home/michaels/.cabal/packages/hackage.haskell.org"})
(PackageIdentifier
{pkgName
=
PackageName
"QuickCheck",
pkgVersion
=
mkVersion
[2,14,2]})
Nothing,
elabPkgSourceHash
=
Just
(HashValue
"\216{l\133ik`\DC1u'Ca\250b!x\148@\RS@\RS\NAK\f<]@\DC3\172S\205\&6\243"),
elabLocalToProject
=
False,
elabBuildStyle
=
BuildAndInstall,
elabEnabledSpec
=
ComponentRequestedSpec
{testsRequested
=
False,
benchmarksRequested
=
False},
elabStanzasAvailable
=
OptionalStanzaSet
0,
elabStanzasRequested
=
OptionalStanzaMap
Nothing
Nothing,
elabSetupPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db"],
elabBuildPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db"],
elabRegisterPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db"],
elabInplaceSetupPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db",SpecificPackageDB
"/home/michaels/repos/cabal/cabal-testsuite/PackageTests/Regression/T7893/dist-newstyle/packagedb/ghc-8.10.7"],
elabInplaceBuildPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db",SpecificPackageDB
"/home/michaels/repos/cabal/cabal-testsuite/PackageTests/Regression/T7893/dist-newstyle/packagedb/ghc-8.10.7"],
elabInplaceRegisterPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db",SpecificPackageDB
"/home/michaels/repos/cabal/cabal-testsuite/PackageTests/Regression/T7893/dist-newstyle/packagedb/ghc-8.10.7"],
elabPkgDescriptionOverride
=
Just
"Name:
QuickCheck\nVersion:
2.14.2\nCabal-Version:
>=
1.10\nBuild-type:
Simple\nLicense:
BSD3\nLicense-file:
LICENSE\nCopyright:
2000-2019
Koen
Claessen,
2006-2008
Bj\195\182rn
Bringert,
2009-2019
Nick
Smallbone\nAuthor:
Koen
Claessen
<koen@chalmers.se>\nMaintainer:
Nick
Smallbone
<nick@smallbone.se>\nBug-reports:
https://github.com/nick8325/quickcheck/issues\nTested-with:
GHC
==7.0.4
||
==7.2.2
||
>=
7.4\nHomepage:
https://github.com/nick8325/quickcheck\nCategory:






Testing\nSynopsis:






Automatic
testing
of
Haskell
programs\nDescription:\n

QuickCheck
is
a
library
for
random
testing
of
program
properties.\n

The
programmer
provides
a
specification
of
the
program,
in
the
form
of\n

properties
which
functions
should
satisfy,
and
QuickCheck
then
tests
that
the\n

properties
hold
in
a
large
number
of
randomly
generated
cases.\n

Specifications
are
expressed
in
Haskell,
using
combinators
provided
by\n

QuickCheck.
QuickCheck
provides
combinators
to
define
properties,
observe
the\n

distribution
of
test
data,
and
define
test
data
generators.\n

.\n

Most
of
QuickCheck's
functionality
is
exported
by
the
main
\"Test.QuickCheck\"\n

module.
The
main
exception
is
the
monadic
property
testing
library
in\n

\"Test.QuickCheck.Monadic\".\n

.\n

If
you
are
new
to
QuickCheck,
you
can
try
looking
at
the
following
resources:\n

.\n

*
The
<http://www.cse.chalmers.se/~rjmh/QuickCheck/manual.html
official
QuickCheck
manual>.\n



It's
a
bit
out-of-date
in
some
details
and
doesn't
cover
newer
QuickCheck
features,\n



but
is
still
full
of
good
advice.\n

*
<https://begriffs.com/posts/2017-01-14-design-use-quickcheck.html>,\n



a
detailed
tutorial
written
by
a
user
of
QuickCheck.\n

.\n

The
<https://hackage.haskell.org/package/quickcheck-instances
quickcheck-instances>\n

companion
package
provides
instances
for
types
in
Haskell
Platform
packages\n

at
the
cost
of
additional
dependencies.\n\nextra-source-files:\n

README\n

changelog\n

examples/Heap.hs\n

examples/Heap_Program.hs\n

examples/Heap_ProgramAlgebraic.hs\n

examples/Lambda.hs\n

examples/Merge.hs\n

examples/Set.hs\n

examples/Simple.hs\n

make-hugs\n

test-hugs\n\nsource-repository
head\n

type:




git\n

location:
https://github.com/nick8325/quickcheck\n\nsource-repository
this\n

type:




git\n

location:
https://github.com/nick8325/quickcheck\n

tag:





2.14.2\n\nflag
templateHaskell\n

Description:
Build
Test.QuickCheck.All,
which
uses
Template
Haskell.\n

Default:
True\n\nflag
old-random\n

Description:
Build
against
a
pre-1.2.0
version
of
the
random
package.\n

Default:
False\n\nlibrary\n

Hs-source-dirs:
src\n

Build-depends:
base
>=4.3
&&
<5,
containers\n

Default-language:
Haskell2010\n\n

--
New
vs
old
random.\n

if
flag(old-random)\n



Build-depends:
random
>=
1.0.0.3
&&
<
1.2.0\n



cpp-options:
-DOLD_RANDOM\n

else\n



Build-depends:
random
>=
1.2.0
&&
<
1.3\n\n

--
We
always
use
splitmix
directly
rather
than
going
through
StdGen\n

--
(it's
somewhat
more
efficient).\n

--
However,
Hugs
traps
overflow
on
Word64,
so
we
have
to
stick\n

--
with
StdGen
there.\n

if
impl(hugs)\n



cpp-options:
-DNO_SPLITMIX\n

else\n



Build-depends:
splitmix
>=
0.1
&&
<0.2\n\n

--
Modules
that
are
always
built.\n

Exposed-Modules:\n



Test.QuickCheck,\n



Test.QuickCheck.Arbitrary,\n



Test.QuickCheck.Gen,\n



Test.QuickCheck.Gen.Unsafe,\n



Test.QuickCheck.Monadic,\n



Test.QuickCheck.Modifiers,\n



Test.QuickCheck.Property,\n



Test.QuickCheck.Test,\n



Test.QuickCheck.Text,\n



Test.QuickCheck.Poly,\n



Test.QuickCheck.State,\n



Test.QuickCheck.Random,\n



Test.QuickCheck.Exception,\n



Test.QuickCheck.Features\n\n

--
GHC-specific
modules.\n

if
impl(ghc)\n



Exposed-Modules:
Test.QuickCheck.Function\n



Build-depends:
transformers
>=
0.3,
deepseq
>=
1.1.0.0\n

else\n



cpp-options:
-DNO_TRANSFORMERS
-DNO_DEEPSEQ\n\n

if
impl(ghc)
&&
flag(templateHaskell)\n



Build-depends:
template-haskell
>=
2.4\n



Other-Extensions:
TemplateHaskell\n



Exposed-Modules:
Test.QuickCheck.All\n

else\n



cpp-options:
-DNO_TEMPLATE_HASKELL\n\n

if
!impl(ghc
>=
7.4)\n



cpp-options:
-DNO_CTYPES_CONSTRUCTORS
-DNO_FOREIGN_C_USECONDS\n\n

--
The
new
generics
appeared
in
GHC
7.2...\n

if
impl(ghc
<
7.2)\n



cpp-options:
-DNO_GENERICS\n

--
...but
in
7.2-7.4
it
lives
in
the
ghc-prim
package.\n

if
impl(ghc
>=
7.2)
&&
impl(ghc
<
7.6)\n



Build-depends:
ghc-prim\n\n

--
Safe
Haskell
appeared
in
GHC
7.2,
but
GHC.Generics
isn't
safe
until
7.4.\n

if
impl
(ghc
<
7.4)\n



cpp-options:
-DNO_SAFE_HASKELL\n\n

--
random
is
explicitly
Trustworthy
since
1.0.1.0\n

--
similar
constraint
for
containers\n

if
impl(ghc
>=
7.2)\n



Build-depends:
random
>=1.0.1.0\n

if
impl(ghc
>=
7.4)\n



Build-depends:
containers
>=0.4.2.1\n\n

if
!impl(ghc
>=
7.6)\n





cpp-options:
-DNO_POLYKINDS\n\n

if
!impl(ghc
>=
8.0)\n



cpp-options:
-DNO_MONADFAIL\n\n

--
Switch
off
most
optional
features
on
non-GHC
systems.\n

if
!impl(ghc)\n



--
If
your
Haskell
compiler
can
cope
without
some
of
these,
please\n



--
send
a
message
to
the
QuickCheck
mailing
list!\n



cpp-options:
-DNO_TIMEOUT
-DNO_NEWTYPE_DERIVING
-DNO_GENERICS\n





-DNO_TEMPLATE_HASKELL
-DNO_SAFE_HASKELL
-DNO_TYPEABLE
-DNO_GADTS\n





-DNO_EXTRA_METHODS_IN_APPLICATIVE
-DOLD_RANDOM\n



if
!impl(hugs)
&&
!impl(uhc)\n





cpp-options:
-DNO_ST_MONAD
-DNO_MULTI_PARAM_TYPE_CLASSES\n\n

--
LANGUAGE
pragmas
don't
have
any
effect
in
Hugs.\n

if
impl(hugs)\n



Default-Extensions:
CPP\n\n

if
impl(uhc)\n



--
Cabal
under
UHC
needs
pointing
out
all
the
dependencies
of
the\n



--
random
package.\n



Build-depends:
old-time,
old-locale\n



--
Plus
some
bits
of
the
standard
library
are
missing.\n



cpp-options:
-DNO_FIXED
-DNO_EXCEPTIONS\n\nTest-Suite
test-quickcheck\n



type:
exitcode-stdio-1.0\n



Default-language:
Haskell2010\n



hs-source-dirs:\n







examples\n



main-is:
Heap.hs\n



build-depends:
base,
QuickCheck\n



if
!flag(templateHaskell)\n







Buildable:
False\n\nTest-Suite
test-quickcheck-gcoarbitrary\n



type:
exitcode-stdio-1.0\n



Default-language:
Haskell2010\n



hs-source-dirs:
tests\n



main-is:
GCoArbitraryExample.hs\n



build-depends:
base,
QuickCheck\n



if
!flag(templateHaskell)
||
!impl(ghc
>=
7.2)\n







buildable:
False\n



if
impl(ghc
>=
7.2)
&&
impl(ghc
<
7.6)\n







build-depends:
ghc-prim\n\nTest-Suite
test-quickcheck-generators\n



type:
exitcode-stdio-1.0\n



Default-language:
Haskell2010\n



hs-source-dirs:
tests\n



main-is:
Generators.hs\n



build-depends:
base,
QuickCheck\n



if
!flag(templateHaskell)\n







Buildable:
False\n\nTest-Suite
test-quickcheck-gshrink\n



type:
exitcode-stdio-1.0\n



Default-language:
Haskell2010\n



hs-source-dirs:
tests\n



main-is:
GShrinkExample.hs\n



build-depends:
base,
QuickCheck\n



if
!flag(templateHaskell)
||
!impl(ghc
>=
7.2)\n







buildable:
False\n



if
impl(ghc
>=
7.2)
&&
impl(ghc
<
7.6)\n







build-depends:
ghc-prim\n\nTest-Suite
test-quickcheck-terminal\n



type:
exitcode-stdio-1.0\n



Default-language:
Haskell2010\n



hs-source-dirs:
tests\n



main-is:
Terminal.hs\n



build-depends:
base,
process,
deepseq
>=
1.1.0.0,
QuickCheck\n



if
!flag(templateHaskell)
||
!impl(ghc
>=
7.10)\n







buildable:
False\n\nTest-Suite
test-quickcheck-monadfix\n



type:
exitcode-stdio-1.0\n



Default-language:
Haskell2010\n



hs-source-dirs:
tests\n



main-is:
MonadFix.hs\n



build-depends:
base,
QuickCheck\n



if
!flag(templateHaskell)
||
!impl(ghc
>=
7.10)\n







buildable:
False\n\nTest-Suite
test-quickcheck-split\n



type:
exitcode-stdio-1.0\n



Default-language:
Haskell2010\n



hs-source-dirs:
tests\n



main-is:
Split.hs\n



build-depends:
base,
QuickCheck\n\nTest-Suite
test-quickcheck-misc\n



type:
exitcode-stdio-1.0\n



Default-language:
Haskell2010\n



hs-source-dirs:
tests\n



main-is:
Misc.hs\n



build-depends:
base,
QuickCheck\n



if
!flag(templateHaskell)
||
!impl(ghc
>=
7.10)\n







buildable:
False\n",
elabVanillaLib
=
True,
elabSharedLib
=
True,
elabStaticLib
=
False,
elabDynExe
=
False,
elabFullyStaticExe
=
False,
elabGHCiLib
=
False,
elabProfLib
=
False,
elabProfExe
=
False,
elabProfLibDetail
=
ProfDetailDefault,
elabProfExeDetail
=
ProfDetailDefault,
elabCoverage
=
False,
elabOptimization
=
NormalOptimisation,
elabSplitObjs
=
False,
elabSplitSections
=
False,
elabStripLibs
=
False,
elabStripExes
=
False,
elabDebugInfo
=
NoDebugInfo,
elabDumpBuildInfo
=
NoDumpBuildInfo,
elabProgramPaths
=
fromList
[("ghc","/nix/store/lrwichshmxvlqnbbym9yg4bxqsrvc88j-ghc-8.10.7/bin/ghc"),("ghc-pkg","/nix/store/lrwichshmxvlqnbbym9yg4bxqsrvc88j-ghc-8.10.7/bin/ghc-pkg-8.10.7")],
elabProgramArgs
=
fromList
[],
elabProgramPathExtra
=
["/home/michaels/.cabal/bin"],
elabConfigureScriptArgs
=
[],
elabExtraLibDirs
=
[],
elabExtraLibDirsStatic
=
[],
elabExtraFrameworkDirs
=
[],
elabExtraIncludeDirs
=
[],
elabProgPrefix
=
Nothing,
elabProgSuffix
=
Nothing,
elabInstallDirs
=
InstallDirs
{prefix
=
"/home/michaels/.cabal/store/ghc-8.10.7/QuickCheck-2.14.2-6467e0fb8e4c059a4b4a73f2bd7b7056d024e00a5bfbdcc6e27253b020fc4af3",
bindir
=
"/home/michaels/.cabal/store/ghc-8.10.7/QuickCheck-2.14.2-6467e0fb8e4c059a4b4a73f2bd7b7056d024e00a5bfbdcc6e27253b020fc4af3/bin",
libdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/QuickCheck-2.14.2-6467e0fb8e4c059a4b4a73f2bd7b7056d024e00a5bfbdcc6e27253b020fc4af3/lib",
libsubdir
=
"",
dynlibdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/QuickCheck-2.14.2-6467e0fb8e4c059a4b4a73f2bd7b7056d024e00a5bfbdcc6e27253b020fc4af3/lib",
flibdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/QuickCheck-2.14.2-6467e0fb8e4c059a4b4a73f2bd7b7056d024e00a5bfbdcc6e27253b020fc4af3/lib",
libexecdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/QuickCheck-2.14.2-6467e0fb8e4c059a4b4a73f2bd7b7056d024e00a5bfbdcc6e27253b020fc4af3/libexec",
libexecsubdir
=
"",
includedir
=
"/home/michaels/.cabal/store/ghc-8.10.7/QuickCheck-2.14.2-6467e0fb8e4c059a4b4a73f2bd7b7056d024e00a5bfbdcc6e27253b020fc4af3/lib/include",
datadir
=
"/home/michaels/.cabal/store/ghc-8.10.7/QuickCheck-2.14.2-6467e0fb8e4c059a4b4a73f2bd7b7056d024e00a5bfbdcc6e27253b020fc4af3/share",
datasubdir
=
"",
docdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/QuickCheck-2.14.2-6467e0fb8e4c059a4b4a73f2bd7b7056d024e00a5bfbdcc6e27253b020fc4af3/share/doc",
mandir
=
"/home/michaels/.cabal/store/ghc-8.10.7/QuickCheck-2.14.2-6467e0fb8e4c059a4b4a73f2bd7b7056d024e00a5bfbdcc6e27253b020fc4af3/share/man",
htmldir
=
"/home/michaels/.cabal/store/ghc-8.10.7/QuickCheck-2.14.2-6467e0fb8e4c059a4b4a73f2bd7b7056d024e00a5bfbdcc6e27253b020fc4af3/share/doc/html",
haddockdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/QuickCheck-2.14.2-6467e0fb8e4c059a4b4a73f2bd7b7056d024e00a5bfbdcc6e27253b020fc4af3/share/doc/html",
sysconfdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/QuickCheck-2.14.2-6467e0fb8e4c059a4b4a73f2bd7b7056d024e00a5bfbdcc6e27253b020fc4af3/etc"},
elabHaddockHoogle
=
False,
elabHaddockHtml
=
False,
elabHaddockHtmlLocation
=
Nothing,
elabHaddockForeignLibs
=
False,
elabHaddockForHackage
=
ForDevelopment,
elabHaddockExecutables
=
False,
elabHaddockTestSuites
=
False,
elabHaddockBenchmarks
=
False,
elabHaddockInternal
=
False,
elabHaddockCss
=
Nothing,
elabHaddockLinkedSource
=
False,
elabHaddockQuickJump
=
False,
elabHaddockHscolourCss
=
Nothing,
elabHaddockContents
=
Nothing,
elabTestMachineLog
=
Just
"$pkgid.log",
elabTestHumanLog
=
Just
"$pkgid-$test-suite.log",
elabTestShowDetails
=
Just
Failures,
elabTestKeepTix
=
False,
elabTestWrapper
=
Nothing,
elabTestFailWhenNoTestSuites
=
False,
elabTestTestOptions
=
[],
elabBenchmarkOptions
=
[],
elabSetupScriptStyle
=
SetupNonCustomInternalLib,
elabSetupScriptCliVersion
=
mkVersion
[3,7,0,0],
elabConfigureTargets
=
[],
elabBuildTargets
=
[],
elabTestTargets
=
[],
elabBenchTargets
=
[],
elabReplTarget
=
Nothing,
elabHaddockTargets
=
[],
elabBuildHaddocks
=
False,
elabPkgOrComp
=
ElabPackage
(ElaboratedPackage
{pkgInstalledId
=
ComponentId
"QuickCheck-2.14.2-6467e0fb8e4c059a4b4a73f2bd7b7056d024e00a5bfbdcc6e27253b020fc4af3",
pkgLibDependencies
=
ComponentDeps
{unComponentDeps
=
fromList
[(ComponentLib,[ComponentId
"base-4.14.3.0",ComponentId
"containers-0.6.5.1",ComponentId
"deepseq-1.4.4.0",ComponentId
"random-1.2.1-27f75c738ff56dde673ff6b8730ddcf155b7971f3e93018daa2185a2407a7278",ComponentId
"splitmix-0.1.0.4-67c84d13e4d7c71df2ebc6ec425fdcc4f24fcbdf70984a80c9452679ca619983",ComponentId
"template-haskell-2.16.0.0",ComponentId
"transformers-0.5.6.2"])]},
pkgDependsOnSelfLib
=
ComponentDeps
{unComponentDeps
=
fromList
[(ComponentLib,[()])]},
pkgExeDependencies
=
ComponentDeps
{unComponentDeps
=
fromList
[(ComponentLib,[])]},
pkgExeDependencyPaths
=
ComponentDeps
{unComponentDeps
=
fromList
[(ComponentLib,[])]},
pkgPkgConfigDependencies
=
[],
pkgStanzasEnabled
=
OptionalStanzaSet
0})}
ElaboratedConfiguredPackage
{elabUnitId
=
UnitId
"primitive-0.7.3.0-e7272e060bbb33c881ddd90785223bdb89c5382ff66cea5affe80c2d7bc33d6c",
elabComponentId
=
ComponentId
"primitive-0.7.3.0-e7272e060bbb33c881ddd90785223bdb89c5382ff66cea5affe80c2d7bc33d6c",
elabInstantiatedWith
=
fromList
[],
elabLinkedInstantiatedWith
=
fromList
[],
elabIsCanonical
=
True,
elabPkgSourceId
=
PackageIdentifier
{pkgName
=
PackageName
"primitive",
pkgVersion
=
mkVersion
[0,7,3,0]},
elabModuleShape
=
ModuleShape
{modShapeProvides
=
fromList
[(ModuleName
"Control.Monad.Primitive",OpenModule
(IndefFullUnitId
(ComponentId
"primitive-0.7.3.0-ca993c0684c5b48074dd2590184c6f06667d73290dfde50301aed62da070af56")
(fromList
[]))
(ModuleName
"Control.Monad.Primitive")),(ModuleName
"Data.Primitive",OpenModule
(IndefFullUnitId
(ComponentId
"primitive-0.7.3.0-ca993c0684c5b48074dd2590184c6f06667d73290dfde50301aed62da070af56")
(fromList
[]))
(ModuleName
"Data.Primitive")),(ModuleName
"Data.Primitive.Array",OpenModule
(IndefFullUnitId
(ComponentId
"primitive-0.7.3.0-ca993c0684c5b48074dd2590184c6f06667d73290dfde50301aed62da070af56")
(fromList
[]))
(ModuleName
"Data.Primitive.Array")),(ModuleName
"Data.Primitive.ByteArray",OpenModule
(IndefFullUnitId
(ComponentId
"primitive-0.7.3.0-ca993c0684c5b48074dd2590184c6f06667d73290dfde50301aed62da070af56")
(fromList
[]))
(ModuleName
"Data.Primitive.ByteArray")),(ModuleName
"Data.Primitive.MVar",OpenModule
(IndefFullUnitId
(ComponentId
"primitive-0.7.3.0-ca993c0684c5b48074dd2590184c6f06667d73290dfde50301aed62da070af56")
(fromList
[]))
(ModuleName
"Data.Primitive.MVar")),(ModuleName
"Data.Primitive.MachDeps",OpenModule
(IndefFullUnitId
(ComponentId
"primitive-0.7.3.0-ca993c0684c5b48074dd2590184c6f06667d73290dfde50301aed62da070af56")
(fromList
[]))
(ModuleName
"Data.Primitive.MachDeps")),(ModuleName
"Data.Primitive.MutVar",OpenModule
(IndefFullUnitId
(ComponentId
"primitive-0.7.3.0-ca993c0684c5b48074dd2590184c6f06667d73290dfde50301aed62da070af56")
(fromList
[]))
(ModuleName
"Data.Primitive.MutVar")),(ModuleName
"Data.Primitive.PrimArray",OpenModule
(IndefFullUnitId
(ComponentId
"primitive-0.7.3.0-ca993c0684c5b48074dd2590184c6f06667d73290dfde50301aed62da070af56")
(fromList
[]))
(ModuleName
"Data.Primitive.PrimArray")),(ModuleName
"Data.Primitive.Ptr",OpenModule
(IndefFullUnitId
(ComponentId
"primitive-0.7.3.0-ca993c0684c5b48074dd2590184c6f06667d73290dfde50301aed62da070af56")
(fromList
[]))
(ModuleName
"Data.Primitive.Ptr")),(ModuleName
"Data.Primitive.SmallArray",OpenModule
(IndefFullUnitId
(ComponentId
"primitive-0.7.3.0-ca993c0684c5b48074dd2590184c6f06667d73290dfde50301aed62da070af56")
(fromList
[]))
(ModuleName
"Data.Primitive.SmallArray")),(ModuleName
"Data.Primitive.Types",OpenModule
(IndefFullUnitId
(ComponentId
"primitive-0.7.3.0-ca993c0684c5b48074dd2590184c6f06667d73290dfde50301aed62da070af56")
(fromList
[]))
(ModuleName
"Data.Primitive.Types"))],
modShapeRequires
=
fromList
[]},
elabFlagAssignment
=
fromList
[],
elabFlagDefaults
=
fromList
[],
elabPkgDescription
=
PackageDescription
{specVersion
=
CabalSpecV2_2,
package
=
PackageIdentifier
{pkgName
=
PackageName
"primitive",
pkgVersion
=
mkVersion
[0,7,3,0]},
licenseRaw
=
Left
(License
(ELicense
(ELicenseId
BSD_3_Clause)
Nothing)),
licenseFiles
=
[SymbolicPath
"LICENSE"],
copyright
=
"(c)
Roman
Leshchinskiy
2009-2012",
maintainer
=
"libraries@haskell.org",
author
=
"Roman
Leshchinskiy
<rl@cse.unsw.edu.au>",
stability
=
"",
testedWith
=
[(GHC,ThisVersion
(mkVersion
[7,10,3])),(GHC,ThisVersion
(mkVersion
[8,0,2])),(GHC,ThisVersion
(mkVersion
[8,2,2])),(GHC,ThisVersion
(mkVersion
[8,4,4])),(GHC,ThisVersion
(mkVersion
[8,6,5])),(GHC,ThisVersion
(mkVersion
[8,8,4])),(GHC,ThisVersion
(mkVersion
[8,10,7]))],
homepage
=
"https://github.com/haskell/primitive",
pkgUrl
=
"",
bugReports
=
"https://github.com/haskell/primitive/issues",
sourceRepos
=
[SourceRepo
{repoKind
=
RepoHead,
repoType
=
Just
(KnownRepoType
Git),
repoLocation
=
Just
"https://github.com/haskell/primitive",
repoModule
=
Nothing,
repoBranch
=
Nothing,
repoTag
=
Nothing,
repoSubdir
=
Nothing}],
synopsis
=
"Primitive
memory-related
operations",
description
=
"This
package
provides
various
primitive
memory-related
operations.",
category
=
"Data",
customFieldsPD
=
[],
buildTypeRaw
=
Just
Simple,
setupBuildInfo
=
Nothing,
library
=
Just
(Library
{libName
=
LMainLibName,
exposedModules
=
[ModuleName
"Control.Monad.Primitive",ModuleName
"Data.Primitive",ModuleName
"Data.Primitive.MachDeps",ModuleName
"Data.Primitive.Types",ModuleName
"Data.Primitive.Array",ModuleName
"Data.Primitive.ByteArray",ModuleName
"Data.Primitive.PrimArray",ModuleName
"Data.Primitive.SmallArray",ModuleName
"Data.Primitive.Ptr",ModuleName
"Data.Primitive.MutVar",ModuleName
"Data.Primitive.MVar"],
reexportedModules
=
[],
signatures
=
[],
libExposed
=
True,
libVisibility
=
LibraryVisibilityPublic,
libBuildInfo
=
BuildInfo
{buildable
=
True,
buildTools
=
[],
buildToolDepends
=
[],
cppOptions
=
[],
asmOptions
=
[],
cmmOptions
=
[],
ccOptions
=
["-ftree-vectorize","-msse2"],
cxxOptions
=
[],
ldOptions
=
[],
hsc2hsOptions
=
[],
pkgconfigDepends
=
[],
frameworks
=
[],
extraFrameworkDirs
=
[],
asmSources
=
[],
cmmSources
=
[],
cSources
=
["cbits/primitive-memops.c"],
cxxSources
=
[],
jsSources
=
[],
hsSourceDirs
=
[SymbolicPath
"."],
otherModules
=
[ModuleName
"Data.Primitive.Internal.Operations"],
virtualModules
=
[],
autogenModules
=
[],
defaultLanguage
=
Just
Haskell2010,
otherLanguages
=
[],
defaultExtensions
=
[],
otherExtensions
=
[EnableExtension
BangPatterns,EnableExtension
CPP,EnableExtension
DeriveDataTypeable,EnableExtension
MagicHash,EnableExtension
TypeFamilies,EnableExtension
UnboxedTuples,EnableExtension
UnliftedFFITypes],
oldExtensions
=
[],
extraLibs
=
[],
extraLibsStatic
=
[],
extraGHCiLibs
=
[],
extraBundledLibs
=
[],
extraLibFlavours
=
[],
extraDynLibFlavours
=
[],
extraLibDirs
=
[],
extraLibDirsStatic
=
[],
includeDirs
=
["cbits"],
includes
=
["primitive-memops.h"],
autogenIncludes
=
[],
installIncludes
=
["primitive-memops.h"],
options
=
PerCompilerFlavor
["-O2"]
[],
profOptions
=
PerCompilerFlavor
[]
[],
sharedOptions
=
PerCompilerFlavor
[]
[],
staticOptions
=
PerCompilerFlavor
[]
[],
customFieldsBI
=
[],
targetBuildDepends
=
[Dependency
(PackageName
"base")
(IntersectVersionRanges
(OrLaterVersion
(mkVersion
[4,8]))
(EarlierVersion
(mkVersion
[4,17])))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"deepseq")
(IntersectVersionRanges
(OrLaterVersion
(mkVersion
[1,1]))
(EarlierVersion
(mkVersion
[1,5])))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"transformers")
(IntersectVersionRanges
(OrLaterVersion
(mkVersion
[0,4,2]))
(EarlierVersion
(mkVersion
[0,7])))
(fromNonEmpty
(LMainLibName
:|
[]))],
mixins
=
[]}}),
subLibraries
=
[],
executables
=
[],
foreignLibs
=
[],
testSuites
=
[TestSuite
{testName
=
UnqualComponentName
"test-qc",
testInterface
=
TestSuiteExeV10
(mkVersion
[1,0])
"main.hs",
testBuildInfo
=
BuildInfo
{buildable
=
True,
buildTools
=
[],
buildToolDepends
=
[],
cppOptions
=
["-DHAVE_UNARY_LAWS"],
asmOptions
=
[],
cmmOptions
=
[],
ccOptions
=
[],
cxxOptions
=
[],
ldOptions
=
[],
hsc2hsOptions
=
[],
pkgconfigDepends
=
[],
frameworks
=
[],
extraFrameworkDirs
=
[],
asmSources
=
[],
cmmSources
=
[],
cSources
=
[],
cxxSources
=
[],
jsSources
=
[],
hsSourceDirs
=
[SymbolicPath
"test",SymbolicPath
"test/src"],
otherModules
=
[ModuleName
"PrimLaws"],
virtualModules
=
[],
autogenModules
=
[],
defaultLanguage
=
Just
Haskell2010,
otherLanguages
=
[],
defaultExtensions
=
[],
otherExtensions
=
[],
oldExtensions
=
[],
extraLibs
=
[],
extraLibsStatic
=
[],
extraGHCiLibs
=
[],
extraBundledLibs
=
[],
extraLibFlavours
=
[],
extraDynLibFlavours
=
[],
extraLibDirs
=
[],
extraLibDirsStatic
=
[],
includeDirs
=
[],
includes
=
[],
autogenIncludes
=
[],
installIncludes
=
[],
options
=
PerCompilerFlavor
["-O2"]
[],
profOptions
=
PerCompilerFlavor
[]
[],
sharedOptions
=
PerCompilerFlavor
[]
[],
staticOptions
=
PerCompilerFlavor
[]
[],
customFieldsBI
=
[],
targetBuildDepends
=
[Dependency
(PackageName
"QuickCheck")
(IntersectVersionRanges
(OrLaterVersion
(mkVersion
[2,13]))
(EarlierVersion
(mkVersion
[2,15])))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"base")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"base-orphans")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"ghc-prim")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"primitive")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"quickcheck-classes-base")
(IntersectVersionRanges
(OrLaterVersion
(mkVersion
[0,6]))
(EarlierVersion
(mkVersion
[0,7])))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"tagged")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"tasty")
(UnionVersionRanges
(MajorBoundVersion
(mkVersion
[1,2]))
(UnionVersionRanges
(MajorBoundVersion
(mkVersion
[1,3]))
(MajorBoundVersion
(mkVersion
[1,4]))))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"tasty-quickcheck")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"transformers")
(OrLaterVersion
(mkVersion
[0,4]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"transformers-compat")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[]))],
mixins
=
[]}}],
benchmarks
=
[Benchmark
{benchmarkName
=
UnqualComponentName
"bench",
benchmarkInterface
=
BenchmarkExeV10
(mkVersion
[1,0])
"main.hs",
benchmarkBuildInfo
=
BuildInfo
{buildable
=
True,
buildTools
=
[],
buildToolDepends
=
[],
cppOptions
=
[],
asmOptions
=
[],
cmmOptions
=
[],
ccOptions
=
[],
cxxOptions
=
[],
ldOptions
=
[],
hsc2hsOptions
=
[],
pkgconfigDepends
=
[],
frameworks
=
[],
extraFrameworkDirs
=
[],
asmSources
=
[],
cmmSources
=
[],
cSources
=
[],
cxxSources
=
[],
jsSources
=
[],
hsSourceDirs
=
[SymbolicPath
"bench"],
otherModules
=
[ModuleName
"Array.Traverse.Closure",ModuleName
"Array.Traverse.Unsafe",ModuleName
"ByteArray.Compare",ModuleName
"PrimArray.Compare",ModuleName
"PrimArray.Traverse"],
virtualModules
=
[],
autogenModules
=
[],
defaultLanguage
=
Just
Haskell2010,
otherLanguages
=
[],
defaultExtensions
=
[],
otherExtensions
=
[],
oldExtensions
=
[],
extraLibs
=
[],
extraLibsStatic
=
[],
extraGHCiLibs
=
[],
extraBundledLibs
=
[],
extraLibFlavours
=
[],
extraDynLibFlavours
=
[],
extraLibDirs
=
[],
extraLibDirsStatic
=
[],
includeDirs
=
[],
includes
=
[],
autogenIncludes
=
[],
installIncludes
=
[],
options
=
PerCompilerFlavor
["-O2"]
[],
profOptions
=
PerCompilerFlavor
[]
[],
sharedOptions
=
PerCompilerFlavor
[]
[],
staticOptions
=
PerCompilerFlavor
[]
[],
customFieldsBI
=
[],
targetBuildDepends
=
[Dependency
(PackageName
"base")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"deepseq")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"primitive")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"tasty-bench")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"transformers")
(OrLaterVersion
(mkVersion
[0,3]))
(fromNonEmpty
(LMainLibName
:|
[]))],
mixins
=
[]}}],
dataFiles
=
[],
dataDir
=
".",
extraSrcFiles
=
["changelog.md","test/*.hs","test/LICENSE"],
extraTmpFiles
=
[],
extraDocFiles
=
[]},
elabPkgSourceLocation
=
RepoTarballPackage
(RepoSecure
{repoRemote
=
RemoteRepo
{remoteRepoName
=
RepoName
"hackage.haskell.org",
remoteRepoURI
=
http://hackage.haskell.org/,
remoteRepoSecure
=
Just
True,
remoteRepoRootKeys
=
["fe331502606802feac15e514d9b9ea83fee8b6ffef71335479a2e68d84adc6b0","1ea9ba32c526d1cc91ab5e5bd364ec5e9e8cb67179a471872f6e26f0ae773d42","2c6c3627bd6c982990239487f1abd02e08a02e6cf16edb105a8012d444d870c3","0a5c7ea47cd1b15f01f5f51a33adda7e655bc0f0b0615baa8e271f4c3351e21d","51f0161b906011b52c6613376b1ae937670da69322113a246a09f807c62f6921"],
remoteRepoKeyThreshold
=
3,
remoteRepoShouldTryHttps
=
True},
repoLocalDir
=
"/home/michaels/.cabal/packages/hackage.haskell.org"})
(PackageIdentifier
{pkgName
=
PackageName
"primitive",
pkgVersion
=
mkVersion
[0,7,3,0]})
Nothing,
elabPkgSourceHash
=
Just
(HashValue
"<\f\253\166\DEL\RS\230\247\246Q\b\173o\151;[\187\&5\221\186\&4\179\200wF\167D\143xu\SOH\220"),
elabLocalToProject
=
False,
elabBuildStyle
=
BuildAndInstall,
elabEnabledSpec
=
ComponentRequestedSpec
{testsRequested
=
False,
benchmarksRequested
=
False},
elabStanzasAvailable
=
OptionalStanzaSet
0,
elabStanzasRequested
=
OptionalStanzaMap
Nothing
Nothing,
elabSetupPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db"],
elabBuildPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db"],
elabRegisterPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db"],
elabInplaceSetupPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db",SpecificPackageDB
"/home/michaels/repos/cabal/cabal-testsuite/PackageTests/Regression/T7893/dist-newstyle/packagedb/ghc-8.10.7"],
elabInplaceBuildPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db",SpecificPackageDB
"/home/michaels/repos/cabal/cabal-testsuite/PackageTests/Regression/T7893/dist-newstyle/packagedb/ghc-8.10.7"],
elabInplaceRegisterPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db",SpecificPackageDB
"/home/michaels/repos/cabal/cabal-testsuite/PackageTests/Regression/T7893/dist-newstyle/packagedb/ghc-8.10.7"],
elabPkgDescriptionOverride
=
Just
"Cabal-Version:

2.2\nName:










primitive\nVersion:







0.7.3.0\nLicense:







BSD-3-Clause\nLicense-File:


LICENSE\n\nAuthor:








Roman
Leshchinskiy
<rl@cse.unsw.edu.au>\nMaintainer:




libraries@haskell.org\nCopyright:





(c)
Roman
Leshchinskiy
2009-2012\nHomepage:






https://github.com/haskell/primitive\nBug-Reports:



https://github.com/haskell/primitive/issues\nCategory:






Data\nSynopsis:






Primitive
memory-related
operations\nBuild-Type:




Simple\nDescription:



This
package
provides
various
primitive
memory-related
operations.\n\nExtra-Source-Files:
changelog.md\n



















test/*.hs\n



















test/LICENSE\n\nTested-With:\n

GHC
==
7.10.3,\n

GHC
==
8.0.2,\n

GHC
==
8.2.2,\n

GHC
==
8.4.4,\n

GHC
==
8.6.5,\n

GHC
==
8.8.4,\n

GHC
==
8.10.7\n\nLibrary\n

Default-Language:
Haskell2010\n

Other-Extensions:\n







BangPatterns,
CPP,
DeriveDataTypeable,\n







MagicHash,
TypeFamilies,
UnboxedTuples,
UnliftedFFITypes\n\n

Exposed-Modules:\n







Control.Monad.Primitive\n







Data.Primitive\n







Data.Primitive.MachDeps\n







Data.Primitive.Types\n







Data.Primitive.Array\n







Data.Primitive.ByteArray\n







Data.Primitive.PrimArray\n







Data.Primitive.SmallArray\n







Data.Primitive.Ptr\n







Data.Primitive.MutVar\n







Data.Primitive.MVar\n\n

Other-Modules:\n







Data.Primitive.Internal.Operations\n\n

Build-Depends:
base
>=
4.8
&&
<
4.17\n














,
deepseq
>=
1.1
&&
<
1.5\n














,
transformers
>=
0.4.2
&&
<
0.7\n

if
!impl(ghc
>=
8.0)\n



Build-Depends:
fail
==
4.9.*\n\n

Ghc-Options:
-O2\n\n

Include-Dirs:
cbits\n

Install-Includes:
primitive-memops.h\n

includes:
primitive-memops.h\n

c-sources:
cbits/primitive-memops.c\n

if
!os(solaris)\n





cc-options:
-ftree-vectorize\n

if
arch(i386)
||
arch(x86_64)\n





cc-options:
-msse2\n\ntest-suite
test-qc\n

Default-Language:
Haskell2010\n

hs-source-dirs:
test\n

















test/src\n

main-is:
main.hs\n

Other-Modules:
PrimLaws\n

type:
exitcode-stdio-1.0\n

build-depends:
base\n














,
base-orphans\n














,
ghc-prim\n














,
primitive\n














,
quickcheck-classes-base
>=
0.6
&&
<0.7\n














,
QuickCheck
>=
2.13
&&
<
2.15\n














,
tasty
^>=
1.2
||
^>=
1.3
||
^>=
1.4\n














,
tasty-quickcheck\n














,
tagged\n














,
transformers
>=
0.4\n














,
transformers-compat\n

if
!impl(ghc
>=
8.0)\n



build-depends:
semigroups\n\n

cpp-options:
-DHAVE_UNARY_LAWS\n

ghc-options:
-O2\n\nbenchmark
bench\n

Default-Language:
Haskell2010\n

hs-source-dirs:
bench\n

main-is:
main.hs\n

type:
exitcode-stdio-1.0\n

ghc-options:
-O2\n

other-modules:\n



Array.Traverse.Closure\n



Array.Traverse.Unsafe\n



ByteArray.Compare\n



PrimArray.Compare\n



PrimArray.Traverse\n

build-depends:\n





base\n



,
primitive\n



,
deepseq\n



,
tasty-bench\n



,
transformers
>=
0.3\n\nsource-repository
head\n

type:




git\n

location:
https://github.com/haskell/primitive\n",
elabVanillaLib
=
True,
elabSharedLib
=
True,
elabStaticLib
=
False,
elabDynExe
=
False,
elabFullyStaticExe
=
False,
elabGHCiLib
=
False,
elabProfLib
=
False,
elabProfExe
=
False,
elabProfLibDetail
=
ProfDetailDefault,
elabProfExeDetail
=
ProfDetailDefault,
elabCoverage
=
False,
elabOptimization
=
NormalOptimisation,
elabSplitObjs
=
False,
elabSplitSections
=
False,
elabStripLibs
=
False,
elabStripExes
=
False,
elabDebugInfo
=
NoDebugInfo,
elabDumpBuildInfo
=
NoDumpBuildInfo,
elabProgramPaths
=
fromList
[("ghc","/nix/store/lrwichshmxvlqnbbym9yg4bxqsrvc88j-ghc-8.10.7/bin/ghc"),("ghc-pkg","/nix/store/lrwichshmxvlqnbbym9yg4bxqsrvc88j-ghc-8.10.7/bin/ghc-pkg-8.10.7")],
elabProgramArgs
=
fromList
[],
elabProgramPathExtra
=
["/home/michaels/.cabal/bin"],
elabConfigureScriptArgs
=
[],
elabExtraLibDirs
=
[],
elabExtraLibDirsStatic
=
[],
elabExtraFrameworkDirs
=
[],
elabExtraIncludeDirs
=
[],
elabProgPrefix
=
Nothing,
elabProgSuffix
=
Nothing,
elabInstallDirs
=
InstallDirs
{prefix
=
"/home/michaels/.cabal/store/ghc-8.10.7/primitive-0.7.3.0-e7272e060bbb33c881ddd90785223bdb89c5382ff66cea5affe80c2d7bc33d6c",
bindir
=
"/home/michaels/.cabal/store/ghc-8.10.7/primitive-0.7.3.0-e7272e060bbb33c881ddd90785223bdb89c5382ff66cea5affe80c2d7bc33d6c/bin",
libdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/primitive-0.7.3.0-e7272e060bbb33c881ddd90785223bdb89c5382ff66cea5affe80c2d7bc33d6c/lib",
libsubdir
=
"",
dynlibdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/primitive-0.7.3.0-e7272e060bbb33c881ddd90785223bdb89c5382ff66cea5affe80c2d7bc33d6c/lib",
flibdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/primitive-0.7.3.0-e7272e060bbb33c881ddd90785223bdb89c5382ff66cea5affe80c2d7bc33d6c/lib",
libexecdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/primitive-0.7.3.0-e7272e060bbb33c881ddd90785223bdb89c5382ff66cea5affe80c2d7bc33d6c/libexec",
libexecsubdir
=
"",
includedir
=
"/home/michaels/.cabal/store/ghc-8.10.7/primitive-0.7.3.0-e7272e060bbb33c881ddd90785223bdb89c5382ff66cea5affe80c2d7bc33d6c/lib/include",
datadir
=
"/home/michaels/.cabal/store/ghc-8.10.7/primitive-0.7.3.0-e7272e060bbb33c881ddd90785223bdb89c5382ff66cea5affe80c2d7bc33d6c/share",
datasubdir
=
"",
docdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/primitive-0.7.3.0-e7272e060bbb33c881ddd90785223bdb89c5382ff66cea5affe80c2d7bc33d6c/share/doc",
mandir
=
"/home/michaels/.cabal/store/ghc-8.10.7/primitive-0.7.3.0-e7272e060bbb33c881ddd90785223bdb89c5382ff66cea5affe80c2d7bc33d6c/share/man",
htmldir
=
"/home/michaels/.cabal/store/ghc-8.10.7/primitive-0.7.3.0-e7272e060bbb33c881ddd90785223bdb89c5382ff66cea5affe80c2d7bc33d6c/share/doc/html",
haddockdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/primitive-0.7.3.0-e7272e060bbb33c881ddd90785223bdb89c5382ff66cea5affe80c2d7bc33d6c/share/doc/html",
sysconfdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/primitive-0.7.3.0-e7272e060bbb33c881ddd90785223bdb89c5382ff66cea5affe80c2d7bc33d6c/etc"},
elabHaddockHoogle
=
False,
elabHaddockHtml
=
False,
elabHaddockHtmlLocation
=
Nothing,
elabHaddockForeignLibs
=
False,
elabHaddockForHackage
=
ForDevelopment,
elabHaddockExecutables
=
False,
elabHaddockTestSuites
=
False,
elabHaddockBenchmarks
=
False,
elabHaddockInternal
=
False,
elabHaddockCss
=
Nothing,
elabHaddockLinkedSource
=
False,
elabHaddockQuickJump
=
False,
elabHaddockHscolourCss
=
Nothing,
elabHaddockContents
=
Nothing,
elabTestMachineLog
=
Just
"$pkgid.log",
elabTestHumanLog
=
Just
"$pkgid-$test-suite.log",
elabTestShowDetails
=
Just
Failures,
elabTestKeepTix
=
False,
elabTestWrapper
=
Nothing,
elabTestFailWhenNoTestSuites
=
False,
elabTestTestOptions
=
[],
elabBenchmarkOptions
=
[],
elabSetupScriptStyle
=
SetupNonCustomInternalLib,
elabSetupScriptCliVersion
=
mkVersion
[3,7,0,0],
elabConfigureTargets
=
[],
elabBuildTargets
=
[],
elabTestTargets
=
[],
elabBenchTargets
=
[],
elabReplTarget
=
Nothing,
elabHaddockTargets
=
[],
elabBuildHaddocks
=
False,
elabPkgOrComp
=
ElabPackage
(ElaboratedPackage
{pkgInstalledId
=
ComponentId
"primitive-0.7.3.0-e7272e060bbb33c881ddd90785223bdb89c5382ff66cea5affe80c2d7bc33d6c",
pkgLibDependencies
=
ComponentDeps
{unComponentDeps
=
fromList
[(ComponentLib,[ComponentId
"base-4.14.3.0",ComponentId
"deepseq-1.4.4.0",ComponentId
"transformers-0.5.6.2"])]},
pkgDependsOnSelfLib
=
ComponentDeps
{unComponentDeps
=
fromList
[(ComponentLib,[()])]},
pkgExeDependencies
=
ComponentDeps
{unComponentDeps
=
fromList
[(ComponentLib,[])]},
pkgExeDependencyPaths
=
ComponentDeps
{unComponentDeps
=
fromList
[(ComponentLib,[])]},
pkgPkgConfigDependencies
=
[],
pkgStanzasEnabled
=
OptionalStanzaSet
0})}
ElaboratedConfiguredPackage
{elabUnitId
=
UnitId
"ansi-terminal-0.11.1-ccdc4a91bdd57ce2ec2452be889b1dd5d622f8d41443cdfccb02b094dc23dba3",
elabComponentId
=
ComponentId
"ansi-terminal-0.11.1-ccdc4a91bdd57ce2ec2452be889b1dd5d622f8d41443cdfccb02b094dc23dba3",
elabInstantiatedWith
=
fromList
[],
elabLinkedInstantiatedWith
=
fromList
[],
elabIsCanonical
=
True,
elabPkgSourceId
=
PackageIdentifier
{pkgName
=
PackageName
"ansi-terminal",
pkgVersion
=
mkVersion
[0,11,1]},
elabModuleShape
=
ModuleShape
{modShapeProvides
=
fromList
[(ModuleName
"System.Console.ANSI",OpenModule
(IndefFullUnitId
(ComponentId
"ansi-terminal-0.11.1-1542b03933a5026b2a88bc7df24840ce726750559f965db1bb816bb52d7a0cdb")
(fromList
[]))
(ModuleName
"System.Console.ANSI")),(ModuleName
"System.Console.ANSI.Codes",OpenModule
(IndefFullUnitId
(ComponentId
"ansi-terminal-0.11.1-1542b03933a5026b2a88bc7df24840ce726750559f965db1bb816bb52d7a0cdb")
(fromList
[]))
(ModuleName
"System.Console.ANSI.Codes")),(ModuleName
"System.Console.ANSI.Types",OpenModule
(IndefFullUnitId
(ComponentId
"ansi-terminal-0.11.1-1542b03933a5026b2a88bc7df24840ce726750559f965db1bb816bb52d7a0cdb")
(fromList
[]))
(ModuleName
"System.Console.ANSI.Types"))],
modShapeRequires
=
fromList
[]},
elabFlagAssignment
=
fromList
[(FlagName
"example",(1,False))],
elabFlagDefaults
=
fromList
[(FlagName
"example",(1,False))],
elabPkgDescription
=
PackageDescription
{specVersion
=
CabalSpecV1_10,
package
=
PackageIdentifier
{pkgName
=
PackageName
"ansi-terminal",
pkgVersion
=
mkVersion
[0,11,1]},
licenseRaw
=
Right
BSD3,
licenseFiles
=
[SymbolicPath
"LICENSE"],
copyright
=
"",
maintainer
=
"Mike
Pilgrem
<public@pilgrem.com>,
Roman
Cheplyaka
<roma@ro-che.info>",
author
=
"Max
Bolingbroke",
stability
=
"",
testedWith
=
[],
homepage
=
"https://github.com/UnkindPartition/ansi-terminal",
pkgUrl
=
"",
bugReports
=
"",
sourceRepos
=
[SourceRepo
{repoKind
=
RepoHead,
repoType
=
Just
(KnownRepoType
Git),
repoLocation
=
Just
"git://github.com/UnkindPartition/ansi-terminal.git",
repoModule
=
Nothing,
repoBranch
=
Nothing,
repoTag
=
Nothing,
repoSubdir
=
Nothing}],
synopsis
=
"Simple
ANSI
terminal
support,
with
Windows
compatibility",
description
=
"ANSI
terminal
support
for
Haskell:
allows
cursor
movement,\nscreen
clearing,
color
output,
showing
or
hiding
the\ncursor,
and
changing
the
title.
Works
on
UNIX
and
Windows.",
category
=
"User
Interfaces",
customFieldsPD
=
[],
buildTypeRaw
=
Just
Simple,
setupBuildInfo
=
Nothing,
library
=
Just
(Library
{libName
=
LMainLibName,
exposedModules
=
[ModuleName
"System.Console.ANSI",ModuleName
"System.Console.ANSI.Types",ModuleName
"System.Console.ANSI.Codes"],
reexportedModules
=
[],
signatures
=
[],
libExposed
=
True,
libVisibility
=
LibraryVisibilityPublic,
libBuildInfo
=
BuildInfo
{buildable
=
True,
buildTools
=
[],
buildToolDepends
=
[],
cppOptions
=
["-DUNIX"],
asmOptions
=
[],
cmmOptions
=
[],
ccOptions
=
[],
cxxOptions
=
[],
ldOptions
=
[],
hsc2hsOptions
=
[],
pkgconfigDepends
=
[],
frameworks
=
[],
extraFrameworkDirs
=
[],
asmSources
=
[],
cmmSources
=
[],
cSources
=
[],
cxxSources
=
[],
jsSources
=
[],
hsSourceDirs
=
[SymbolicPath
"src"],
otherModules
=
[ModuleName
"System.Console.ANSI.Unix"],
virtualModules
=
[],
autogenModules
=
[],
defaultLanguage
=
Just
Haskell2010,
otherLanguages
=
[],
defaultExtensions
=
[EnableExtension
CPP,EnableExtension
ForeignFunctionInterface],
otherExtensions
=
[],
oldExtensions
=
[],
extraLibs
=
[],
extraLibsStatic
=
[],
extraGHCiLibs
=
[],
extraBundledLibs
=
[],
extraLibFlavours
=
[],
extraDynLibFlavours
=
[],
extraLibDirs
=
[],
extraLibDirsStatic
=
[],
includeDirs
=
["src/includes"],
includes
=
[],
autogenIncludes
=
[],
installIncludes
=
[],
options
=
PerCompilerFlavor
["-Wall"]
[],
profOptions
=
PerCompilerFlavor
[]
[],
sharedOptions
=
PerCompilerFlavor
[]
[],
staticOptions
=
PerCompilerFlavor
[]
[],
customFieldsBI
=
[],
targetBuildDepends
=
[Dependency
(PackageName
"base")
(IntersectVersionRanges
(OrLaterVersion
(mkVersion
[4,3,0,0]))
(EarlierVersion
(mkVersion
[5])))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"colour")
(OrLaterVersion
(mkVersion
[2,1,0]))
(fromNonEmpty
(LMainLibName
:|
[]))],
mixins
=
[]}}),
subLibraries
=
[],
executables
=
[Executable
{exeName
=
UnqualComponentName
"ansi-terminal-example",
modulePath
=
"Example.hs",
exeScope
=
ExecutablePublic,
buildInfo
=
BuildInfo
{buildable
=
False,
buildTools
=
[],
buildToolDepends
=
[],
cppOptions
=
[],
asmOptions
=
[],
cmmOptions
=
[],
ccOptions
=
[],
cxxOptions
=
[],
ldOptions
=
[],
hsc2hsOptions
=
[],
pkgconfigDepends
=
[],
frameworks
=
[],
extraFrameworkDirs
=
[],
asmSources
=
[],
cmmSources
=
[],
cSources
=
[],
cxxSources
=
[],
jsSources
=
[],
hsSourceDirs
=
[SymbolicPath
"app"],
otherModules
=
[],
virtualModules
=
[],
autogenModules
=
[],
defaultLanguage
=
Just
Haskell2010,
otherLanguages
=
[],
defaultExtensions
=
[],
otherExtensions
=
[],
oldExtensions
=
[],
extraLibs
=
[],
extraLibsStatic
=
[],
extraGHCiLibs
=
[],
extraBundledLibs
=
[],
extraLibFlavours
=
[],
extraDynLibFlavours
=
[],
extraLibDirs
=
[],
extraLibDirsStatic
=
[],
includeDirs
=
[],
includes
=
[],
autogenIncludes
=
[],
installIncludes
=
[],
options
=
PerCompilerFlavor
["-Wall"]
[],
profOptions
=
PerCompilerFlavor
[]
[],
sharedOptions
=
PerCompilerFlavor
[]
[],
staticOptions
=
PerCompilerFlavor
[]
[],
customFieldsBI
=
[],
targetBuildDepends
=
[],
mixins
=
[]}}],
foreignLibs
=
[],
testSuites
=
[],
benchmarks
=
[],
dataFiles
=
[],
dataDir
=
".",
extraSrcFiles
=
["src/includes/Common-Include.hs","src/includes/Common-Include-Emulator.hs","src/includes/Common-Include-Enabled.hs","src/includes/Common-Safe-Haskell.hs","src/includes/Exports-Include.hs","CHANGELOG.md","README.md"],
extraTmpFiles
=
[],
extraDocFiles
=
[]},
elabPkgSourceLocation
=
RepoTarballPackage
(RepoSecure
{repoRemote
=
RemoteRepo
{remoteRepoName
=
RepoName
"hackage.haskell.org",
remoteRepoURI
=
http://hackage.haskell.org/,
remoteRepoSecure
=
Just
True,
remoteRepoRootKeys
=
["fe331502606802feac15e514d9b9ea83fee8b6ffef71335479a2e68d84adc6b0","1ea9ba32c526d1cc91ab5e5bd364ec5e9e8cb67179a471872f6e26f0ae773d42","2c6c3627bd6c982990239487f1abd02e08a02e6cf16edb105a8012d444d870c3","0a5c7ea47cd1b15f01f5f51a33adda7e655bc0f0b0615baa8e271f4c3351e21d","51f0161b906011b52c6613376b1ae937670da69322113a246a09f807c62f6921"],
remoteRepoKeyThreshold
=
3,
remoteRepoShouldTryHttps
=
True},
repoLocalDir
=
"/home/michaels/.cabal/packages/hackage.haskell.org"})
(PackageIdentifier
{pkgName
=
PackageName
"ansi-terminal",
pkgVersion
=
mkVersion
[0,11,1]})
Nothing,
elabPkgSourceHash
=
Just
(HashValue
"\174T\218\ACKd\147tpY\193(\236f\176\n\177f\141\243\CANF\r\DC37\206\194\139DD\219r+"),
elabLocalToProject
=
False,
elabBuildStyle
=
BuildAndInstall,
elabEnabledSpec
=
ComponentRequestedSpec
{testsRequested
=
False,
benchmarksRequested
=
False},
elabStanzasAvailable
=
OptionalStanzaSet
0,
elabStanzasRequested
=
OptionalStanzaMap
Nothing
Nothing,
elabSetupPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db"],
elabBuildPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db"],
elabRegisterPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db"],
elabInplaceSetupPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db",SpecificPackageDB
"/home/michaels/repos/cabal/cabal-testsuite/PackageTests/Regression/T7893/dist-newstyle/packagedb/ghc-8.10.7"],
elabInplaceBuildPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db",SpecificPackageDB
"/home/michaels/repos/cabal/cabal-testsuite/PackageTests/Regression/T7893/dist-newstyle/packagedb/ghc-8.10.7"],
elabInplaceRegisterPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db",SpecificPackageDB
"/home/michaels/repos/cabal/cabal-testsuite/PackageTests/Regression/T7893/dist-newstyle/packagedb/ghc-8.10.7"],
elabPkgDescriptionOverride
=
Just
"Name:















ansi-terminal\r\nVersion:












0.11.1\r\nCabal-Version:






>=
1.10\r\nCategory:











User
Interfaces\r\nSynopsis:











Simple
ANSI
terminal
support,
with
Windows
compatibility\r\nDescription:








ANSI
terminal
support
for
Haskell:
allows
cursor
movement,\r\n




















screen
clearing,
color
output,
showing
or
hiding
the\r\n




















cursor,
and
changing
the
title.
Works
on
UNIX
and
Windows.\r\nLicense:












BSD3\r\nLicense-File:







LICENSE\r\nAuthor:













Max
Bolingbroke\r\nMaintainer:









Mike
Pilgrem
<public@pilgrem.com>,
Roman
Cheplyaka
<roma@ro-che.info>\r\nHomepage:











https://github.com/UnkindPartition/ansi-terminal\r\nBuild-Type:









Simple\r\n\r\nExtra-Source-Files:




src/includes/Common-Include.hs\r\n























src/includes/Common-Include-Emulator.hs\r\n























src/includes/Common-Include-Enabled.hs\r\n























src/includes/Common-Safe-Haskell.hs\r\n























src/includes/Exports-Include.hs\r\n























CHANGELOG.md\r\n























README.md\r\n\r\nSource-repository
head\r\n

type:




git\r\n

location:
git://github.com/UnkindPartition/ansi-terminal.git\r\n\r\nFlag
Example\r\n







Description:



Build
the
example
application\r\n







Default:







False\r\n\r\nLibrary\r\n







Hs-Source-Dirs:








src\r\n







Exposed-Modules:







System.Console.ANSI\r\n































System.Console.ANSI.Types\r\n































System.Console.ANSI.Codes\r\n\r\n







Include-Dirs:










src/includes\r\n\r\n







Build-Depends:









base
>=
4.3.0.0
&&
<
5\r\n





























,
colour
>=2.1.0\r\n







if
os(windows)\r\n















Build-Depends:









containers
>=
0.5.0.0\r\n





































,
mintty\r\n





































,
Win32
>=
2.0\r\n















Cpp-Options:











-DWINDOWS\r\n















Other-Modules:









System.Console.ANSI.Windows\r\n







































System.Console.ANSI.Windows.Detect\r\n







































System.Console.ANSI.Windows.Emulator\r\n







































System.Console.ANSI.Windows.Emulator.Codes\r\n







































System.Console.ANSI.Windows.Foreign\r\n







































--
NB:
used
for
fallback
by
the
emulator\r\n







































System.Console.ANSI.Unix\r\n







































System.Win32.Compat\r\n







else\r\n















--
We
assume
any
non-Windows
platform
is
Unix\r\n















Cpp-Options:











-DUNIX\r\n















Other-Modules:









System.Console.ANSI.Unix\r\n\r\n







Default-Extensions:




CPP\r\n































ForeignFunctionInterface\r\n\r\n







Ghc-Options:











-Wall\r\n







Default-Language:






Haskell2010\r\n\r\nExecutable
ansi-terminal-example\r\n







Hs-Source-Dirs:








app\r\n







Main-Is:















Example.hs\r\n







Build-Depends:









base
>=
4.3.0.0
&&
<
5\r\n





























,
ansi-terminal\r\n





























,
colour\r\n







Ghc-Options:











-Wall\r\n







if
!flag(example)\r\n















Buildable:













False\r\n







Default-Language:






Haskell2010\r\n",
elabVanillaLib
=
True,
elabSharedLib
=
True,
elabStaticLib
=
False,
elabDynExe
=
False,
elabFullyStaticExe
=
False,
elabGHCiLib
=
False,
elabProfLib
=
False,
elabProfExe
=
False,
elabProfLibDetail
=
ProfDetailDefault,
elabProfExeDetail
=
ProfDetailDefault,
elabCoverage
=
False,
elabOptimization
=
NormalOptimisation,
elabSplitObjs
=
False,
elabSplitSections
=
False,
elabStripLibs
=
False,
elabStripExes
=
False,
elabDebugInfo
=
NoDebugInfo,
elabDumpBuildInfo
=
NoDumpBuildInfo,
elabProgramPaths
=
fromList
[("ghc","/nix/store/lrwichshmxvlqnbbym9yg4bxqsrvc88j-ghc-8.10.7/bin/ghc"),("ghc-pkg","/nix/store/lrwichshmxvlqnbbym9yg4bxqsrvc88j-ghc-8.10.7/bin/ghc-pkg-8.10.7")],
elabProgramArgs
=
fromList
[],
elabProgramPathExtra
=
["/home/michaels/.cabal/bin"],
elabConfigureScriptArgs
=
[],
elabExtraLibDirs
=
[],
elabExtraLibDirsStatic
=
[],
elabExtraFrameworkDirs
=
[],
elabExtraIncludeDirs
=
[],
elabProgPrefix
=
Nothing,
elabProgSuffix
=
Nothing,
elabInstallDirs
=
InstallDirs
{prefix
=
"/home/michaels/.cabal/store/ghc-8.10.7/ansi-terminal-0.11.1-ccdc4a91bdd57ce2ec2452be889b1dd5d622f8d41443cdfccb02b094dc23dba3",
bindir
=
"/home/michaels/.cabal/store/ghc-8.10.7/ansi-terminal-0.11.1-ccdc4a91bdd57ce2ec2452be889b1dd5d622f8d41443cdfccb02b094dc23dba3/bin",
libdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/ansi-terminal-0.11.1-ccdc4a91bdd57ce2ec2452be889b1dd5d622f8d41443cdfccb02b094dc23dba3/lib",
libsubdir
=
"",
dynlibdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/ansi-terminal-0.11.1-ccdc4a91bdd57ce2ec2452be889b1dd5d622f8d41443cdfccb02b094dc23dba3/lib",
flibdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/ansi-terminal-0.11.1-ccdc4a91bdd57ce2ec2452be889b1dd5d622f8d41443cdfccb02b094dc23dba3/lib",
libexecdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/ansi-terminal-0.11.1-ccdc4a91bdd57ce2ec2452be889b1dd5d622f8d41443cdfccb02b094dc23dba3/libexec",
libexecsubdir
=
"",
includedir
=
"/home/michaels/.cabal/store/ghc-8.10.7/ansi-terminal-0.11.1-ccdc4a91bdd57ce2ec2452be889b1dd5d622f8d41443cdfccb02b094dc23dba3/lib/include",
datadir
=
"/home/michaels/.cabal/store/ghc-8.10.7/ansi-terminal-0.11.1-ccdc4a91bdd57ce2ec2452be889b1dd5d622f8d41443cdfccb02b094dc23dba3/share",
datasubdir
=
"",
docdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/ansi-terminal-0.11.1-ccdc4a91bdd57ce2ec2452be889b1dd5d622f8d41443cdfccb02b094dc23dba3/share/doc",
mandir
=
"/home/michaels/.cabal/store/ghc-8.10.7/ansi-terminal-0.11.1-ccdc4a91bdd57ce2ec2452be889b1dd5d622f8d41443cdfccb02b094dc23dba3/share/man",
htmldir
=
"/home/michaels/.cabal/store/ghc-8.10.7/ansi-terminal-0.11.1-ccdc4a91bdd57ce2ec2452be889b1dd5d622f8d41443cdfccb02b094dc23dba3/share/doc/html",
haddockdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/ansi-terminal-0.11.1-ccdc4a91bdd57ce2ec2452be889b1dd5d622f8d41443cdfccb02b094dc23dba3/share/doc/html",
sysconfdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/ansi-terminal-0.11.1-ccdc4a91bdd57ce2ec2452be889b1dd5d622f8d41443cdfccb02b094dc23dba3/etc"},
elabHaddockHoogle
=
False,
elabHaddockHtml
=
False,
elabHaddockHtmlLocation
=
Nothing,
elabHaddockForeignLibs
=
False,
elabHaddockForHackage
=
ForDevelopment,
elabHaddockExecutables
=
False,
elabHaddockTestSuites
=
False,
elabHaddockBenchmarks
=
False,
elabHaddockInternal
=
False,
elabHaddockCss
=
Nothing,
elabHaddockLinkedSource
=
False,
elabHaddockQuickJump
=
False,
elabHaddockHscolourCss
=
Nothing,
elabHaddockContents
=
Nothing,
elabTestMachineLog
=
Just
"$pkgid.log",
elabTestHumanLog
=
Just
"$pkgid-$test-suite.log",
elabTestShowDetails
=
Just
Failures,
elabTestKeepTix
=
False,
elabTestWrapper
=
Nothing,
elabTestFailWhenNoTestSuites
=
False,
elabTestTestOptions
=
[],
elabBenchmarkOptions
=
[],
elabSetupScriptStyle
=
SetupNonCustomInternalLib,
elabSetupScriptCliVersion
=
mkVersion
[3,7,0,0],
elabConfigureTargets
=
[],
elabBuildTargets
=
[],
elabTestTargets
=
[],
elabBenchTargets
=
[],
elabReplTarget
=
Nothing,
elabHaddockTargets
=
[],
elabBuildHaddocks
=
False,
elabPkgOrComp
=
ElabPackage
(ElaboratedPackage
{pkgInstalledId
=
ComponentId
"ansi-terminal-0.11.1-ccdc4a91bdd57ce2ec2452be889b1dd5d622f8d41443cdfccb02b094dc23dba3",
pkgLibDependencies
=
ComponentDeps
{unComponentDeps
=
fromList
[(ComponentLib,[ComponentId
"base-4.14.3.0",ComponentId
"colour-2.3.6-555181482708844ff63ca12e01988cc74d9d7bd572786ef9451ec8c68468dee6"])]},
pkgDependsOnSelfLib
=
ComponentDeps
{unComponentDeps
=
fromList
[(ComponentLib,[()])]},
pkgExeDependencies
=
ComponentDeps
{unComponentDeps
=
fromList
[(ComponentLib,[])]},
pkgExeDependencyPaths
=
ComponentDeps
{unComponentDeps
=
fromList
[(ComponentLib,[])]},
pkgPkgConfigDependencies
=
[],
pkgStanzasEnabled
=
OptionalStanzaSet
0})}
ElaboratedConfiguredPackage
{elabUnitId
=
UnitId
"clock-0.8.2-bad1a52c8edcc778b58bea7d979a4dad7d64bef55e047512de6b0a2c5b64dcf3",
elabComponentId
=
ComponentId
"clock-0.8.2-bad1a52c8edcc778b58bea7d979a4dad7d64bef55e047512de6b0a2c5b64dcf3",
elabInstantiatedWith
=
fromList
[],
elabLinkedInstantiatedWith
=
fromList
[],
elabIsCanonical
=
True,
elabPkgSourceId
=
PackageIdentifier
{pkgName
=
PackageName
"clock",
pkgVersion
=
mkVersion
[0,8,2]},
elabModuleShape
=
ModuleShape
{modShapeProvides
=
fromList
[(ModuleName
"System.Clock",OpenModule
(IndefFullUnitId
(ComponentId
"clock-0.8.2-d0dc2384503c95726509e70e7531bd527ee2a618757ad555267b66af6639fd46")
(fromList
[]))
(ModuleName
"System.Clock"))],
modShapeRequires
=
fromList
[]},
elabFlagAssignment
=
fromList
[(FlagName
"llvm",(1,False))],
elabFlagDefaults
=
fromList
[(FlagName
"llvm",(1,False))],
elabPkgDescription
=
PackageDescription
{specVersion
=
CabalSpecV1_10,
package
=
PackageIdentifier
{pkgName
=
PackageName
"clock",
pkgVersion
=
mkVersion
[0,8,2]},
licenseRaw
=
Right
BSD3,
licenseFiles
=
[SymbolicPath
"LICENSE"],
copyright
=
"Copyright
\169
Cetin
Sert
2009-2016,
Eugene
Kirpichov
2010,
Finn
Espen
Gundersen
2013,
Gerolf
Seitz
2013,
Mathieu
Boespflug
2014
2015,
Chris
Done
2015,
Dimitri
Sabadie
2015,
Christian
Burger
2015,
Mario
Longobardi
2016,
Alexander
Vershilov
2021.",
maintainer
=
"Cetin
Sert
<cetin@sert.works>,
Corsis
Research",
author
=
"Cetin
Sert
<cetin@sert.works>,
Corsis
Research",
stability
=
"stable",
testedWith
=
[(GHC,ThisVersion
(mkVersion
[8,10,3])),(GHC,ThisVersion
(mkVersion
[8,8,4])),(GHC,ThisVersion
(mkVersion
[8,6,5]))],
homepage
=
"https://github.com/corsis/clock",
pkgUrl
=
"",
bugReports
=
"https://github.com/corsis/clock/issues",
sourceRepos
=
[SourceRepo
{repoKind
=
RepoHead,
repoType
=
Just
(KnownRepoType
Git),
repoLocation
=
Just
"git://github.com/corsis/clock.git",
repoModule
=
Nothing,
repoBranch
=
Nothing,
repoTag
=
Nothing,
repoSubdir
=
Nothing}],
synopsis
=
"High-resolution
clock
functions:
monotonic,
realtime,
cputime.",
description
=
"A
package
for
convenient
access
to
high-resolution
clock
and\ntimer
functions
of
different
operating
systems
via
a
unified
API.\n\nPOSIX
code
and
surface
API
was
developed
by
Cetin
Sert
in
2009.\n\nWindows
code
was
contributed
by
Eugene
Kirpichov
in
2010.\n\nFreeBSD
code
was
contributed
by
Finn
Espen
Gundersen
on
2013-10-14.\n\nOS
X
code
was
contributed
by
Gerolf
Seitz
on
2013-10-15.\n\nDerived
@Generic@,
@Typeable@
and
other
instances
for
@Clock@
and
@TimeSpec@
was
contributed
by
Mathieu
Boespflug
on
2014-09-17.\n\nCorrected
dependency
listing
for
@GHC
<
7.6@
was
contributed
by
Brian
McKenna
on
2014-09-30.\n\nWindows
code
corrected
by
Dimitri
Sabadie
on
2015-02-09.\n\nAdded
@timeSpecAsNanoSecs@
as
observed
widely-used
by
Chris
Done
on
2015-01-06,
exported
correctly
on
2015-04-20.\n\nImported
Control.Applicative
operators
correctly
for
Haskell
Platform
on
Windows
on
2015-04-21.\n\nUnit
tests
and
instance
fixes
by
Christian
Burger
on
2015-06-25.\n\nRemoval
of
fromInteger
:
Integer
->
TimeSpec
by
Cetin
Sert
on
2015-12-15.\n\nNew
Linux-specific
Clocks:
MonotonicRaw,
Boottime,
MonotonicCoarse,
RealtimeCoarse
by
Cetin
Sert
on
2015-12-15.\n\nReintroduction
fromInteger
:
Integer
->
TimeSpec
by
Cetin
Sert
on
2016-04-05.\n\nFixes
for
older
Linux
build
failures
introduced
by
new
Linux-specific
clocks
by
Mario
Longobardi
on
2016-04-18.\n\nRefreshment
release
in
2019-04
after
numerous
contributions.\n\nRefactoring
for
Windows,
Mac
implementation
consistence
by
Alexander
Vershilov
on
2021-01-16.\n\n[Version
Scheme]\nMajor-@/R/@-ewrite
.
New-@/F/@-unctionality
.
@/I/@-mprovementAndBugFixes
.
@/P/@-ackagingOnly\n\n*
@PackagingOnly@
changes
are
made
for
quality
assurance
reasons.",
category
=
"System",
customFieldsPD
=
[],
buildTypeRaw
=
Just
Simple,
setupBuildInfo
=
Nothing,
library
=
Just
(Library
{libName
=
LMainLibName,
exposedModules
=
[ModuleName
"System.Clock"],
reexportedModules
=
[],
signatures
=
[],
libExposed
=
True,
libVisibility
=
LibraryVisibilityPublic,
libBuildInfo
=
BuildInfo
{buildable
=
True,
buildTools
=
[],
buildToolDepends
=
[],
cppOptions
=
[],
asmOptions
=
[],
cmmOptions
=
[],
ccOptions
=
[],
cxxOptions
=
[],
ldOptions
=
[],
hsc2hsOptions
=
[],
pkgconfigDepends
=
[],
frameworks
=
[],
extraFrameworkDirs
=
[],
asmSources
=
[],
cmmSources
=
[],
cSources
=
[],
cxxSources
=
[],
jsSources
=
[],
hsSourceDirs
=
[SymbolicPath
"."],
otherModules
=
[],
virtualModules
=
[],
autogenModules
=
[],
defaultLanguage
=
Just
Haskell2010,
otherLanguages
=
[],
defaultExtensions
=
[EnableExtension
DeriveGeneric,EnableExtension
DeriveDataTypeable,EnableExtension
ForeignFunctionInterface,EnableExtension
ScopedTypeVariables,EnableExtension
ViewPatterns],
otherExtensions
=
[],
oldExtensions
=
[],
extraLibs
=
[],
extraLibsStatic
=
[],
extraGHCiLibs
=
[],
extraBundledLibs
=
[],
extraLibFlavours
=
[],
extraDynLibFlavours
=
[],
extraLibDirs
=
[],
extraLibDirsStatic
=
[],
includeDirs
=
["cbits"],
includes
=
[],
autogenIncludes
=
[],
installIncludes
=
[],
options
=
PerCompilerFlavor
["-O3","-Wall"]
[],
profOptions
=
PerCompilerFlavor
[]
[],
sharedOptions
=
PerCompilerFlavor
[]
[],
staticOptions
=
PerCompilerFlavor
[]
[],
customFieldsBI
=
[],
targetBuildDepends
=
[Dependency
(PackageName
"base")
(IntersectVersionRanges
(OrLaterVersion
(mkVersion
[2]))
(OrEarlierVersion
(mkVersion
[5])))
(fromNonEmpty
(LMainLibName
:|
[]))],
mixins
=
[]}}),
subLibraries
=
[],
executables
=
[],
foreignLibs
=
[],
testSuites
=
[TestSuite
{testName
=
UnqualComponentName
"test",
testInterface
=
TestSuiteExeV10
(mkVersion
[1,0])
"test.hs",
testBuildInfo
=
BuildInfo
{buildable
=
True,
buildTools
=
[],
buildToolDepends
=
[],
cppOptions
=
[],
asmOptions
=
[],
cmmOptions
=
[],
ccOptions
=
[],
cxxOptions
=
[],
ldOptions
=
[],
hsc2hsOptions
=
[],
pkgconfigDepends
=
[],
frameworks
=
[],
extraFrameworkDirs
=
[],
asmSources
=
[],
cmmSources
=
[],
cSources
=
[],
cxxSources
=
[],
jsSources
=
[],
hsSourceDirs
=
[SymbolicPath
"tests"],
otherModules
=
[],
virtualModules
=
[],
autogenModules
=
[],
defaultLanguage
=
Just
Haskell2010,
otherLanguages
=
[],
defaultExtensions
=
[],
otherExtensions
=
[],
oldExtensions
=
[],
extraLibs
=
[],
extraLibsStatic
=
[],
extraGHCiLibs
=
[],
extraBundledLibs
=
[],
extraLibFlavours
=
[],
extraDynLibFlavours
=
[],
extraLibDirs
=
[],
extraLibDirsStatic
=
[],
includeDirs
=
[],
includes
=
[],
autogenIncludes
=
[],
installIncludes
=
[],
options
=
PerCompilerFlavor
[]
[],
profOptions
=
PerCompilerFlavor
[]
[],
sharedOptions
=
PerCompilerFlavor
[]
[],
staticOptions
=
PerCompilerFlavor
[]
[],
customFieldsBI
=
[],
targetBuildDepends
=
[Dependency
(PackageName
"base")
(IntersectVersionRanges
(OrLaterVersion
(mkVersion
[4]))
(EarlierVersion
(mkVersion
[5])))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"clock")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"tasty")
(OrLaterVersion
(mkVersion
[0,10]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"tasty-quickcheck")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[]))],
mixins
=
[]}}],
benchmarks
=
[Benchmark
{benchmarkName
=
UnqualComponentName
"benchmarks",
benchmarkInterface
=
BenchmarkExeV10
(mkVersion
[1,0])
"benchmarks.hs",
benchmarkBuildInfo
=
BuildInfo
{buildable
=
True,
buildTools
=
[],
buildToolDepends
=
[],
cppOptions
=
[],
asmOptions
=
[],
cmmOptions
=
[],
ccOptions
=
[],
cxxOptions
=
[],
ldOptions
=
[],
hsc2hsOptions
=
[],
pkgconfigDepends
=
[],
frameworks
=
[],
extraFrameworkDirs
=
[],
asmSources
=
[],
cmmSources
=
[],
cSources
=
[],
cxxSources
=
[],
jsSources
=
[],
hsSourceDirs
=
[SymbolicPath
"bench"],
otherModules
=
[],
virtualModules
=
[],
autogenModules
=
[],
defaultLanguage
=
Just
Haskell2010,
otherLanguages
=
[],
defaultExtensions
=
[],
otherExtensions
=
[],
oldExtensions
=
[],
extraLibs
=
[],
extraLibsStatic
=
[],
extraGHCiLibs
=
[],
extraBundledLibs
=
[],
extraLibFlavours
=
[],
extraDynLibFlavours
=
[],
extraLibDirs
=
[],
extraLibDirsStatic
=
[],
includeDirs
=
[],
includes
=
[],
autogenIncludes
=
[],
installIncludes
=
[],
options
=
PerCompilerFlavor
[]
[],
profOptions
=
PerCompilerFlavor
[]
[],
sharedOptions
=
PerCompilerFlavor
[]
[],
staticOptions
=
PerCompilerFlavor
[]
[],
customFieldsBI
=
[],
targetBuildDepends
=
[Dependency
(PackageName
"base")
(IntersectVersionRanges
(OrLaterVersion
(mkVersion
[4]))
(EarlierVersion
(mkVersion
[5])))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"clock")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"criterion")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[]))],
mixins
=
[]}}],
dataFiles
=
[],
dataDir
=
".",
extraSrcFiles
=
[],
extraTmpFiles
=
[],
extraDocFiles
=
[]},
elabPkgSourceLocation
=
RepoTarballPackage
(RepoSecure
{repoRemote
=
RemoteRepo
{remoteRepoName
=
RepoName
"hackage.haskell.org",
remoteRepoURI
=
http://hackage.haskell.org/,
remoteRepoSecure
=
Just
True,
remoteRepoRootKeys
=
["fe331502606802feac15e514d9b9ea83fee8b6ffef71335479a2e68d84adc6b0","1ea9ba32c526d1cc91ab5e5bd364ec5e9e8cb67179a471872f6e26f0ae773d42","2c6c3627bd6c982990239487f1abd02e08a02e6cf16edb105a8012d444d870c3","0a5c7ea47cd1b15f01f5f51a33adda7e655bc0f0b0615baa8e271f4c3351e21d","51f0161b906011b52c6613376b1ae937670da69322113a246a09f807c62f6921"],
remoteRepoKeyThreshold
=
3,
remoteRepoShouldTryHttps
=
True},
repoLocalDir
=
"/home/michaels/.cabal/packages/hackage.haskell.org"})
(PackageIdentifier
{pkgName
=
PackageName
"clock",
pkgVersion
=
mkVersion
[0,8,2]})
Nothing,
elabPkgSourceHash
=
Just
(HashValue
"\v]\177\DLE\199\ETX\230\139%\GSX\131%:\147K\SOH!\DLE\180S\147\252e\223\ESC\t^\185\164\228a"),
elabLocalToProject
=
False,
elabBuildStyle
=
BuildAndInstall,
elabEnabledSpec
=
ComponentRequestedSpec
{testsRequested
=
False,
benchmarksRequested
=
False},
elabStanzasAvailable
=
OptionalStanzaSet
0,
elabStanzasRequested
=
OptionalStanzaMap
Nothing
Nothing,
elabSetupPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db"],
elabBuildPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db"],
elabRegisterPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db"],
elabInplaceSetupPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db",SpecificPackageDB
"/home/michaels/repos/cabal/cabal-testsuite/PackageTests/Regression/T7893/dist-newstyle/packagedb/ghc-8.10.7"],
elabInplaceBuildPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db",SpecificPackageDB
"/home/michaels/repos/cabal/cabal-testsuite/PackageTests/Regression/T7893/dist-newstyle/packagedb/ghc-8.10.7"],
elabInplaceRegisterPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db",SpecificPackageDB
"/home/michaels/repos/cabal/cabal-testsuite/PackageTests/Regression/T7893/dist-newstyle/packagedb/ghc-8.10.7"],
elabPkgDescriptionOverride
=
Just
"cabal-version:
>=
1.10\nname:









clock\nversion:






0.8.2\nstability:




stable\nsynopsis:





High-resolution
clock
functions:
monotonic,
realtime,
cputime.\ndescription:


A
package
for
convenient
access
to
high-resolution
clock
and\n














timer
functions
of
different
operating
systems
via
a
unified
API.\n














.\n














POSIX
code
and
surface
API
was
developed
by
Cetin
Sert
in
2009.\n














.\n














Windows
code
was
contributed
by
Eugene
Kirpichov
in
2010.\n














.\n














FreeBSD
code
was
contributed
by
Finn
Espen
Gundersen
on
2013-10-14.\n














.\n














OS
X
code
was
contributed
by
Gerolf
Seitz
on
2013-10-15.\n














.\n














Derived
@Generic@,
@Typeable@
and
other
instances
for
@Clock@
and
@TimeSpec@
was
contributed
by
Mathieu
Boespflug
on
2014-09-17.\n














.\n














Corrected
dependency
listing
for
@GHC
<
7.6@
was
contributed
by
Brian
McKenna
on
2014-09-30.\n














.\n














Windows
code
corrected
by
Dimitri
Sabadie
on
2015-02-09.\n














.\n














Added
@timeSpecAsNanoSecs@
as
observed
widely-used
by
Chris
Done
on
2015-01-06,
exported
correctly
on
2015-04-20.\n














.\n














Imported
Control.Applicative
operators
correctly
for
Haskell
Platform
on
Windows
on
2015-04-21.\n














.\n














Unit
tests
and
instance
fixes
by
Christian
Burger
on
2015-06-25.\n














.\n














Removal
of
fromInteger
:
Integer
->
TimeSpec
by
Cetin
Sert
on
2015-12-15.\n














.\n














New
Linux-specific
Clocks:
MonotonicRaw,
Boottime,
MonotonicCoarse,
RealtimeCoarse
by
Cetin
Sert
on
2015-12-15.\n














.\n














Reintroduction
fromInteger
:
Integer
->
TimeSpec
by
Cetin
Sert
on
2016-04-05.\n














.\n














Fixes
for
older
Linux
build
failures
introduced
by
new
Linux-specific
clocks
by
Mario
Longobardi
on
2016-04-18.\n














.\n














Refreshment
release
in
2019-04
after
numerous
contributions.\n














.\n














Refactoring
for
Windows,
Mac
implementation
consistence
by
Alexander
Vershilov
on
2021-01-16.\n














.\n














[Version
Scheme]\n














Major-@/R/@-ewrite
.
New-@/F/@-unctionality
.
@/I/@-mprovementAndBugFixes
.
@/P/@-ackagingOnly\n














.\n














*
@PackagingOnly@
changes
are
made
for
quality
assurance
reasons.\n\ncopyright:




Copyright
\194\169
Cetin
Sert
2009-2016,
Eugene
Kirpichov
2010,
Finn
Espen
Gundersen
2013,
Gerolf
Seitz
2013,
Mathieu
Boespflug
2014
2015,
Chris
Done
2015,
Dimitri
Sabadie
2015,
Christian
Burger
2015,
Mario
Longobardi
2016,
Alexander
Vershilov
2021.\nlicense:






BSD3\nlicense-file:

LICENSE\nauthor:







Cetin
Sert
<cetin@sert.works>,
Corsis
Research\nmaintainer:



Cetin
Sert
<cetin@sert.works>,
Corsis
Research\nhomepage:





https://github.com/corsis/clock\nbug-reports:


https://github.com/corsis/clock/issues\ncategory:





System\nbuild-type:



Simple\ntested-with:
GHC==8.10.3,
GHC==8.8.4,
GHC==8.6.5\n\n\nsource-repository
head\n



type:





git\n



location:

git://github.com/corsis/clock.git\n\n\nflag
llvm\n



description:
compile
via
LLVM\n



default



:
False\n\n\nlibrary\n



default-language:
Haskell2010\n



if
impl
(ghc
<
7.6)\n





build-depends:






base
>=
4.4
&&
<=
5,
ghc-prim\n



build-depends:






base
>=
2
&&
<=
5\n



exposed-modules:




System.Clock\n



default-extensions:









DeriveGeneric\n
























DeriveDataTypeable\n
























ForeignFunctionInterface\n
























ScopedTypeVariables\n
























ViewPatterns\n



if
os(windows)\n





c-sources:








cbits/hs_clock_win32.c\n



include-dirs:







cbits\n



ghc-options:








-O3
-Wall\n\n



if
flag(llvm)\n





ghc-options:






-fllvm
-optlo-O3\n\n\ntest-suite
test\n



default-language:
Haskell2010\n



type:\n





exitcode-stdio-1.0\n



hs-source-dirs:\n





tests\n



main-is:\n





test.hs\n



build-depends:\n







base
>=
4
&&
<
5\n





,
tasty
>=
0.10\n





,
tasty-quickcheck\n





,
clock\n\nbenchmark
benchmarks\n



default-language:
Haskell2010\n



type:\n





exitcode-stdio-1.0\n



hs-source-dirs:\n





bench\n



main-is:\n





benchmarks.hs\n



build-depends:\n







base
>=
4
&&
<
5\n





,
criterion\n





,
clock\n",
elabVanillaLib
=
True,
elabSharedLib
=
True,
elabStaticLib
=
False,
elabDynExe
=
False,
elabFullyStaticExe
=
False,
elabGHCiLib
=
False,
elabProfLib
=
False,
elabProfExe
=
False,
elabProfLibDetail
=
ProfDetailDefault,
elabProfExeDetail
=
ProfDetailDefault,
elabCoverage
=
False,
elabOptimization
=
NormalOptimisation,
elabSplitObjs
=
False,
elabSplitSections
=
False,
elabStripLibs
=
False,
elabStripExes
=
False,
elabDebugInfo
=
NoDebugInfo,
elabDumpBuildInfo
=
NoDumpBuildInfo,
elabProgramPaths
=
fromList
[("ghc","/nix/store/lrwichshmxvlqnbbym9yg4bxqsrvc88j-ghc-8.10.7/bin/ghc"),("ghc-pkg","/nix/store/lrwichshmxvlqnbbym9yg4bxqsrvc88j-ghc-8.10.7/bin/ghc-pkg-8.10.7")],
elabProgramArgs
=
fromList
[],
elabProgramPathExtra
=
["/home/michaels/.cabal/bin"],
elabConfigureScriptArgs
=
[],
elabExtraLibDirs
=
[],
elabExtraLibDirsStatic
=
[],
elabExtraFrameworkDirs
=
[],
elabExtraIncludeDirs
=
[],
elabProgPrefix
=
Nothing,
elabProgSuffix
=
Nothing,
elabInstallDirs
=
InstallDirs
{prefix
=
"/home/michaels/.cabal/store/ghc-8.10.7/clock-0.8.2-bad1a52c8edcc778b58bea7d979a4dad7d64bef55e047512de6b0a2c5b64dcf3",
bindir
=
"/home/michaels/.cabal/store/ghc-8.10.7/clock-0.8.2-bad1a52c8edcc778b58bea7d979a4dad7d64bef55e047512de6b0a2c5b64dcf3/bin",
libdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/clock-0.8.2-bad1a52c8edcc778b58bea7d979a4dad7d64bef55e047512de6b0a2c5b64dcf3/lib",
libsubdir
=
"",
dynlibdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/clock-0.8.2-bad1a52c8edcc778b58bea7d979a4dad7d64bef55e047512de6b0a2c5b64dcf3/lib",
flibdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/clock-0.8.2-bad1a52c8edcc778b58bea7d979a4dad7d64bef55e047512de6b0a2c5b64dcf3/lib",
libexecdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/clock-0.8.2-bad1a52c8edcc778b58bea7d979a4dad7d64bef55e047512de6b0a2c5b64dcf3/libexec",
libexecsubdir
=
"",
includedir
=
"/home/michaels/.cabal/store/ghc-8.10.7/clock-0.8.2-bad1a52c8edcc778b58bea7d979a4dad7d64bef55e047512de6b0a2c5b64dcf3/lib/include",
datadir
=
"/home/michaels/.cabal/store/ghc-8.10.7/clock-0.8.2-bad1a52c8edcc778b58bea7d979a4dad7d64bef55e047512de6b0a2c5b64dcf3/share",
datasubdir
=
"",
docdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/clock-0.8.2-bad1a52c8edcc778b58bea7d979a4dad7d64bef55e047512de6b0a2c5b64dcf3/share/doc",
mandir
=
"/home/michaels/.cabal/store/ghc-8.10.7/clock-0.8.2-bad1a52c8edcc778b58bea7d979a4dad7d64bef55e047512de6b0a2c5b64dcf3/share/man",
htmldir
=
"/home/michaels/.cabal/store/ghc-8.10.7/clock-0.8.2-bad1a52c8edcc778b58bea7d979a4dad7d64bef55e047512de6b0a2c5b64dcf3/share/doc/html",
haddockdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/clock-0.8.2-bad1a52c8edcc778b58bea7d979a4dad7d64bef55e047512de6b0a2c5b64dcf3/share/doc/html",
sysconfdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/clock-0.8.2-bad1a52c8edcc778b58bea7d979a4dad7d64bef55e047512de6b0a2c5b64dcf3/etc"},
elabHaddockHoogle
=
False,
elabHaddockHtml
=
False,
elabHaddockHtmlLocation
=
Nothing,
elabHaddockForeignLibs
=
False,
elabHaddockForHackage
=
ForDevelopment,
elabHaddockExecutables
=
False,
elabHaddockTestSuites
=
False,
elabHaddockBenchmarks
=
False,
elabHaddockInternal
=
False,
elabHaddockCss
=
Nothing,
elabHaddockLinkedSource
=
False,
elabHaddockQuickJump
=
False,
elabHaddockHscolourCss
=
Nothing,
elabHaddockContents
=
Nothing,
elabTestMachineLog
=
Just
"$pkgid.log",
elabTestHumanLog
=
Just
"$pkgid-$test-suite.log",
elabTestShowDetails
=
Just
Failures,
elabTestKeepTix
=
False,
elabTestWrapper
=
Nothing,
elabTestFailWhenNoTestSuites
=
False,
elabTestTestOptions
=
[],
elabBenchmarkOptions
=
[],
elabSetupScriptStyle
=
SetupNonCustomInternalLib,
elabSetupScriptCliVersion
=
mkVersion
[3,7,0,0],
elabConfigureTargets
=
[],
elabBuildTargets
=
[],
elabTestTargets
=
[],
elabBenchTargets
=
[],
elabReplTarget
=
Nothing,
elabHaddockTargets
=
[],
elabBuildHaddocks
=
False,
elabPkgOrComp
=
ElabPackage
(ElaboratedPackage
{pkgInstalledId
=
ComponentId
"clock-0.8.2-bad1a52c8edcc778b58bea7d979a4dad7d64bef55e047512de6b0a2c5b64dcf3",
pkgLibDependencies
=
ComponentDeps
{unComponentDeps
=
fromList
[(ComponentLib,[ComponentId
"base-4.14.3.0"])]},
pkgDependsOnSelfLib
=
ComponentDeps
{unComponentDeps
=
fromList
[(ComponentLib,[()])]},
pkgExeDependencies
=
ComponentDeps
{unComponentDeps
=
fromList
[(ComponentLib,[])]},
pkgExeDependencyPaths
=
ComponentDeps
{unComponentDeps
=
fromList
[(ComponentLib,[])]},
pkgPkgConfigDependencies
=
[],
pkgStanzasEnabled
=
OptionalStanzaSet
0})}
ElaboratedConfiguredPackage
{elabUnitId
=
UnitId
"hspec-expectations-0.8.2-c8aba5312eea257134f10ea7aad0a0fcd091fffbc14c4da551072b2fa727e86e",
elabComponentId
=
ComponentId
"hspec-expectations-0.8.2-c8aba5312eea257134f10ea7aad0a0fcd091fffbc14c4da551072b2fa727e86e",
elabInstantiatedWith
=
fromList
[],
elabLinkedInstantiatedWith
=
fromList
[],
elabIsCanonical
=
True,
elabPkgSourceId
=
PackageIdentifier
{pkgName
=
PackageName
"hspec-expectations",
pkgVersion
=
mkVersion
[0,8,2]},
elabModuleShape
=
ModuleShape
{modShapeProvides
=
fromList
[(ModuleName
"Test.Hspec.Expectations",OpenModule
(IndefFullUnitId
(ComponentId
"hspec-expectations-0.8.2-4b32409dce7c0b11ffbb8fbd69aa13a0bca7c73112366bcb34d3caa4d8685672")
(fromList
[]))
(ModuleName
"Test.Hspec.Expectations")),(ModuleName
"Test.Hspec.Expectations.Contrib",OpenModule
(IndefFullUnitId
(ComponentId
"hspec-expectations-0.8.2-4b32409dce7c0b11ffbb8fbd69aa13a0bca7c73112366bcb34d3caa4d8685672")
(fromList
[]))
(ModuleName
"Test.Hspec.Expectations.Contrib"))],
modShapeRequires
=
fromList
[]},
elabFlagAssignment
=
fromList
[],
elabFlagDefaults
=
fromList
[],
elabPkgDescription
=
PackageDescription
{specVersion
=
CabalSpecV1_10,
package
=
PackageIdentifier
{pkgName
=
PackageName
"hspec-expectations",
pkgVersion
=
mkVersion
[0,8,2]},
licenseRaw
=
Right
MIT,
licenseFiles
=
[SymbolicPath
"LICENSE"],
copyright
=
"(c)
2011-2015
Simon
Hengel",
maintainer
=
"Simon
Hengel
<sol@typeful.net>",
author
=
"Simon
Hengel
<sol@typeful.net>",
stability
=
"",
testedWith
=
[],
homepage
=
"https://github.com/hspec/hspec-expectations#readme",
pkgUrl
=
"",
bugReports
=
"https://github.com/hspec/hspec-expectations/issues",
sourceRepos
=
[SourceRepo
{repoKind
=
RepoHead,
repoType
=
Just
(KnownRepoType
Git),
repoLocation
=
Just
"https://github.com/hspec/hspec-expectations",
repoModule
=
Nothing,
repoBranch
=
Nothing,
repoTag
=
Nothing,
repoSubdir
=
Nothing}],
synopsis
=
"Catchy
combinators
for
HUnit",
description
=
"Catchy
combinators
for
HUnit:
<https://github.com/hspec/hspec-expectations#readme>",
category
=
"Testing",
customFieldsPD
=
[],
buildTypeRaw
=
Just
Simple,
setupBuildInfo
=
Nothing,
library
=
Just
(Library
{libName
=
LMainLibName,
exposedModules
=
[ModuleName
"Test.Hspec.Expectations",ModuleName
"Test.Hspec.Expectations.Contrib"],
reexportedModules
=
[],
signatures
=
[],
libExposed
=
True,
libVisibility
=
LibraryVisibilityPublic,
libBuildInfo
=
BuildInfo
{buildable
=
True,
buildTools
=
[],
buildToolDepends
=
[],
cppOptions
=
[],
asmOptions
=
[],
cmmOptions
=
[],
ccOptions
=
[],
cxxOptions
=
[],
ldOptions
=
[],
hsc2hsOptions
=
[],
pkgconfigDepends
=
[],
frameworks
=
[],
extraFrameworkDirs
=
[],
asmSources
=
[],
cmmSources
=
[],
cSources
=
[],
cxxSources
=
[],
jsSources
=
[],
hsSourceDirs
=
[SymbolicPath
"src"],
otherModules
=
[ModuleName
"Test.Hspec.Expectations.Matcher",ModuleName
"Paths_hspec_expectations"],
virtualModules
=
[],
autogenModules
=
[],
defaultLanguage
=
Just
Haskell2010,
otherLanguages
=
[],
defaultExtensions
=
[],
otherExtensions
=
[],
oldExtensions
=
[],
extraLibs
=
[],
extraLibsStatic
=
[],
extraGHCiLibs
=
[],
extraBundledLibs
=
[],
extraLibFlavours
=
[],
extraDynLibFlavours
=
[],
extraLibDirs
=
[],
extraLibDirsStatic
=
[],
includeDirs
=
[],
includes
=
[],
autogenIncludes
=
[],
installIncludes
=
[],
options
=
PerCompilerFlavor
["-Wall"]
[],
profOptions
=
PerCompilerFlavor
[]
[],
sharedOptions
=
PerCompilerFlavor
[]
[],
staticOptions
=
PerCompilerFlavor
[]
[],
customFieldsBI
=
[],
targetBuildDepends
=
[Dependency
(PackageName
"HUnit")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"base")
(IntersectVersionRanges
(OrLaterVersion
(mkVersion
[4]))
(EarlierVersion
(mkVersion
[5])))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"call-stack")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[]))],
mixins
=
[]}}),
subLibraries
=
[],
executables
=
[],
foreignLibs
=
[],
testSuites
=
[TestSuite
{testName
=
UnqualComponentName
"spec",
testInterface
=
TestSuiteExeV10
(mkVersion
[1,0])
"Spec.hs",
testBuildInfo
=
BuildInfo
{buildable
=
True,
buildTools
=
[],
buildToolDepends
=
[],
cppOptions
=
[],
asmOptions
=
[],
cmmOptions
=
[],
ccOptions
=
[],
cxxOptions
=
[],
ldOptions
=
[],
hsc2hsOptions
=
[],
pkgconfigDepends
=
[],
frameworks
=
[],
extraFrameworkDirs
=
[],
asmSources
=
[],
cmmSources
=
[],
cSources
=
[],
cxxSources
=
[],
jsSources
=
[],
hsSourceDirs
=
[SymbolicPath
"test",SymbolicPath
"src"],
otherModules
=
[ModuleName
"Test.Hspec.Expectations.MatcherSpec",ModuleName
"Test.Hspec.ExpectationsSpec",ModuleName
"Test.Hspec.Expectations",ModuleName
"Test.Hspec.Expectations.Contrib",ModuleName
"Test.Hspec.Expectations.Matcher"],
virtualModules
=
[],
autogenModules
=
[],
defaultLanguage
=
Just
Haskell2010,
otherLanguages
=
[],
defaultExtensions
=
[],
otherExtensions
=
[],
oldExtensions
=
[],
extraLibs
=
[],
extraLibsStatic
=
[],
extraGHCiLibs
=
[],
extraBundledLibs
=
[],
extraLibFlavours
=
[],
extraDynLibFlavours
=
[],
extraLibDirs
=
[],
extraLibDirsStatic
=
[],
includeDirs
=
[],
includes
=
[],
autogenIncludes
=
[],
installIncludes
=
[],
options
=
PerCompilerFlavor
["-Wall"]
[],
profOptions
=
PerCompilerFlavor
[]
[],
sharedOptions
=
PerCompilerFlavor
[]
[],
staticOptions
=
PerCompilerFlavor
[]
[],
customFieldsBI
=
[],
targetBuildDepends
=
[Dependency
(PackageName
"HUnit")
(OrLaterVersion
(mkVersion
[1,5,0,0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"base")
(IntersectVersionRanges
(OrLaterVersion
(mkVersion
[4]))
(EarlierVersion
(mkVersion
[5])))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"call-stack")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"nanospec")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[]))],
mixins
=
[]}}],
benchmarks
=
[],
dataFiles
=
[],
dataDir
=
".",
extraSrcFiles
=
[],
extraTmpFiles
=
[],
extraDocFiles
=
[]},
elabPkgSourceLocation
=
RepoTarballPackage
(RepoSecure
{repoRemote
=
RemoteRepo
{remoteRepoName
=
RepoName
"hackage.haskell.org",
remoteRepoURI
=
http://hackage.haskell.org/,
remoteRepoSecure
=
Just
True,
remoteRepoRootKeys
=
["fe331502606802feac15e514d9b9ea83fee8b6ffef71335479a2e68d84adc6b0","1ea9ba32c526d1cc91ab5e5bd364ec5e9e8cb67179a471872f6e26f0ae773d42","2c6c3627bd6c982990239487f1abd02e08a02e6cf16edb105a8012d444d870c3","0a5c7ea47cd1b15f01f5f51a33adda7e655bc0f0b0615baa8e271f4c3351e21d","51f0161b906011b52c6613376b1ae937670da69322113a246a09f807c62f6921"],
remoteRepoKeyThreshold
=
3,
remoteRepoShouldTryHttps
=
True},
repoLocalDir
=
"/home/michaels/.cabal/packages/hackage.haskell.org"})
(PackageIdentifier
{pkgName
=
PackageName
"hspec-expectations",
pkgVersion
=
mkVersion
[0,8,2]})
Nothing,
elabPkgSourceHash
=
Just
(HashValue
"\129\150\a\234\US\175\&5\206[\227K\230\FSoP\243\&8\158\164\&8\146\213o\178\140W\169\245\213O\180\239"),
elabLocalToProject
=
False,
elabBuildStyle
=
BuildAndInstall,
elabEnabledSpec
=
ComponentRequestedSpec
{testsRequested
=
False,
benchmarksRequested
=
False},
elabStanzasAvailable
=
OptionalStanzaSet
0,
elabStanzasRequested
=
OptionalStanzaMap
Nothing
Nothing,
elabSetupPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db"],
elabBuildPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db"],
elabRegisterPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db"],
elabInplaceSetupPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db",SpecificPackageDB
"/home/michaels/repos/cabal/cabal-testsuite/PackageTests/Regression/T7893/dist-newstyle/packagedb/ghc-8.10.7"],
elabInplaceBuildPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db",SpecificPackageDB
"/home/michaels/repos/cabal/cabal-testsuite/PackageTests/Regression/T7893/dist-newstyle/packagedb/ghc-8.10.7"],
elabInplaceRegisterPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db",SpecificPackageDB
"/home/michaels/repos/cabal/cabal-testsuite/PackageTests/Regression/T7893/dist-newstyle/packagedb/ghc-8.10.7"],
elabPkgDescriptionOverride
=
Just
"--
This
file
has
been
generated
from
package.yaml
by
hpack
version
0.15.0.\n--\n--
see:
https://github.com/sol/hpack\n\nname:












hspec-expectations\nversion:









0.8.2\nsynopsis:








Catchy
combinators
for
HUnit\ndescription:





Catchy
combinators
for
HUnit:
<https://github.com/hspec/hspec-expectations#readme>\nbug-reports:





https://github.com/hspec/hspec-expectations/issues\nlicense:









MIT\nlicense-file:




LICENSE\ncopyright:







(c)
2011-2015
Simon
Hengel\nauthor:










Simon
Hengel
<sol@typeful.net>\nmaintainer:






Simon
Hengel
<sol@typeful.net>\nbuild-type:






Simple\ncategory:








Testing\ncabal-version:



>=
1.10\nhomepage:








https://github.com/hspec/hspec-expectations#readme\n\nsource-repository
head\n

type:
git\n

location:
https://github.com/hspec/hspec-expectations\n\nlibrary\n

hs-source-dirs:\n





src\n

ghc-options:
-Wall\n

build-depends:\n





base
==
4.*\n



,
call-stack\n



,
HUnit\n

exposed-modules:\n





Test.Hspec.Expectations\n





Test.Hspec.Expectations.Contrib\n

other-modules:\n





Test.Hspec.Expectations.Matcher\n





Paths_hspec_expectations\n

default-language:
Haskell2010\n\ntest-suite
spec\n

type:
exitcode-stdio-1.0\n

main-is:
Spec.hs\n

hs-source-dirs:\n





test\n





src\n

ghc-options:
-Wall\n

build-depends:\n





base
==
4.*\n



,
call-stack\n



,
nanospec\n



,
HUnit
>=
1.5.0.0\n

other-modules:\n





Test.Hspec.Expectations.MatcherSpec\n





Test.Hspec.ExpectationsSpec\n





Test.Hspec.Expectations\n





Test.Hspec.Expectations.Contrib\n





Test.Hspec.Expectations.Matcher\n

default-language:
Haskell2010\n",
elabVanillaLib
=
True,
elabSharedLib
=
True,
elabStaticLib
=
False,
elabDynExe
=
False,
elabFullyStaticExe
=
False,
elabGHCiLib
=
False,
elabProfLib
=
False,
elabProfExe
=
False,
elabProfLibDetail
=
ProfDetailDefault,
elabProfExeDetail
=
ProfDetailDefault,
elabCoverage
=
False,
elabOptimization
=
NormalOptimisation,
elabSplitObjs
=
False,
elabSplitSections
=
False,
elabStripLibs
=
False,
elabStripExes
=
False,
elabDebugInfo
=
NoDebugInfo,
elabDumpBuildInfo
=
NoDumpBuildInfo,
elabProgramPaths
=
fromList
[("ghc","/nix/store/lrwichshmxvlqnbbym9yg4bxqsrvc88j-ghc-8.10.7/bin/ghc"),("ghc-pkg","/nix/store/lrwichshmxvlqnbbym9yg4bxqsrvc88j-ghc-8.10.7/bin/ghc-pkg-8.10.7")],
elabProgramArgs
=
fromList
[],
elabProgramPathExtra
=
["/home/michaels/.cabal/bin"],
elabConfigureScriptArgs
=
[],
elabExtraLibDirs
=
[],
elabExtraLibDirsStatic
=
[],
elabExtraFrameworkDirs
=
[],
elabExtraIncludeDirs
=
[],
elabProgPrefix
=
Nothing,
elabProgSuffix
=
Nothing,
elabInstallDirs
=
InstallDirs
{prefix
=
"/home/michaels/.cabal/store/ghc-8.10.7/hspec-expectations-0.8.2-c8aba5312eea257134f10ea7aad0a0fcd091fffbc14c4da551072b2fa727e86e",
bindir
=
"/home/michaels/.cabal/store/ghc-8.10.7/hspec-expectations-0.8.2-c8aba5312eea257134f10ea7aad0a0fcd091fffbc14c4da551072b2fa727e86e/bin",
libdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/hspec-expectations-0.8.2-c8aba5312eea257134f10ea7aad0a0fcd091fffbc14c4da551072b2fa727e86e/lib",
libsubdir
=
"",
dynlibdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/hspec-expectations-0.8.2-c8aba5312eea257134f10ea7aad0a0fcd091fffbc14c4da551072b2fa727e86e/lib",
flibdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/hspec-expectations-0.8.2-c8aba5312eea257134f10ea7aad0a0fcd091fffbc14c4da551072b2fa727e86e/lib",
libexecdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/hspec-expectations-0.8.2-c8aba5312eea257134f10ea7aad0a0fcd091fffbc14c4da551072b2fa727e86e/libexec",
libexecsubdir
=
"",
includedir
=
"/home/michaels/.cabal/store/ghc-8.10.7/hspec-expectations-0.8.2-c8aba5312eea257134f10ea7aad0a0fcd091fffbc14c4da551072b2fa727e86e/lib/include",
datadir
=
"/home/michaels/.cabal/store/ghc-8.10.7/hspec-expectations-0.8.2-c8aba5312eea257134f10ea7aad0a0fcd091fffbc14c4da551072b2fa727e86e/share",
datasubdir
=
"",
docdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/hspec-expectations-0.8.2-c8aba5312eea257134f10ea7aad0a0fcd091fffbc14c4da551072b2fa727e86e/share/doc",
mandir
=
"/home/michaels/.cabal/store/ghc-8.10.7/hspec-expectations-0.8.2-c8aba5312eea257134f10ea7aad0a0fcd091fffbc14c4da551072b2fa727e86e/share/man",
htmldir
=
"/home/michaels/.cabal/store/ghc-8.10.7/hspec-expectations-0.8.2-c8aba5312eea257134f10ea7aad0a0fcd091fffbc14c4da551072b2fa727e86e/share/doc/html",
haddockdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/hspec-expectations-0.8.2-c8aba5312eea257134f10ea7aad0a0fcd091fffbc14c4da551072b2fa727e86e/share/doc/html",
sysconfdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/hspec-expectations-0.8.2-c8aba5312eea257134f10ea7aad0a0fcd091fffbc14c4da551072b2fa727e86e/etc"},
elabHaddockHoogle
=
False,
elabHaddockHtml
=
False,
elabHaddockHtmlLocation
=
Nothing,
elabHaddockForeignLibs
=
False,
elabHaddockForHackage
=
ForDevelopment,
elabHaddockExecutables
=
False,
elabHaddockTestSuites
=
False,
elabHaddockBenchmarks
=
False,
elabHaddockInternal
=
False,
elabHaddockCss
=
Nothing,
elabHaddockLinkedSource
=
False,
elabHaddockQuickJump
=
False,
elabHaddockHscolourCss
=
Nothing,
elabHaddockContents
=
Nothing,
elabTestMachineLog
=
Just
"$pkgid.log",
elabTestHumanLog
=
Just
"$pkgid-$test-suite.log",
elabTestShowDetails
=
Just
Failures,
elabTestKeepTix
=
False,
elabTestWrapper
=
Nothing,
elabTestFailWhenNoTestSuites
=
False,
elabTestTestOptions
=
[],
elabBenchmarkOptions
=
[],
elabSetupScriptStyle
=
SetupNonCustomInternalLib,
elabSetupScriptCliVersion
=
mkVersion
[3,7,0,0],
elabConfigureTargets
=
[],
elabBuildTargets
=
[],
elabTestTargets
=
[],
elabBenchTargets
=
[],
elabReplTarget
=
Nothing,
elabHaddockTargets
=
[],
elabBuildHaddocks
=
False,
elabPkgOrComp
=
ElabPackage
(ElaboratedPackage
{pkgInstalledId
=
ComponentId
"hspec-expectations-0.8.2-c8aba5312eea257134f10ea7aad0a0fcd091fffbc14c4da551072b2fa727e86e",
pkgLibDependencies
=
ComponentDeps
{unComponentDeps
=
fromList
[(ComponentLib,[ComponentId
"HUnit-1.6.2.0-b2b2674ec87a7c61b7fa473d0252e2cfb0d432bf08667e1be5fe2f2320acc1c9",ComponentId
"base-4.14.3.0",ComponentId
"call-stack-0.4.0-f11e257c261917655af9abd68f4615a74d2e5e33c9a7c093558f78d94ffb5166"])]},
pkgDependsOnSelfLib
=
ComponentDeps
{unComponentDeps
=
fromList
[(ComponentLib,[()])]},
pkgExeDependencies
=
ComponentDeps
{unComponentDeps
=
fromList
[(ComponentLib,[])]},
pkgExeDependencyPaths
=
ComponentDeps
{unComponentDeps
=
fromList
[(ComponentLib,[])]},
pkgPkgConfigDependencies
=
[],
pkgStanzasEnabled
=
OptionalStanzaSet
0})}
ElaboratedConfiguredPackage
{elabUnitId
=
UnitId
"quickcheck-io-0.2.0-e8a92f5e175b4decd0294e72dce91c0adad46069f81db299bdebc3b566e550ec",
elabComponentId
=
ComponentId
"quickcheck-io-0.2.0-e8a92f5e175b4decd0294e72dce91c0adad46069f81db299bdebc3b566e550ec",
elabInstantiatedWith
=
fromList
[],
elabLinkedInstantiatedWith
=
fromList
[],
elabIsCanonical
=
True,
elabPkgSourceId
=
PackageIdentifier
{pkgName
=
PackageName
"quickcheck-io",
pkgVersion
=
mkVersion
[0,2,0]},
elabModuleShape
=
ModuleShape
{modShapeProvides
=
fromList
[(ModuleName
"Test.QuickCheck.IO",OpenModule
(IndefFullUnitId
(ComponentId
"quickcheck-io-0.2.0-1ae3942b5e4b7417ad5bc86fecaecaa50abb66904eda8f69c2ab337ed42d66d5")
(fromList
[]))
(ModuleName
"Test.QuickCheck.IO"))],
modShapeRequires
=
fromList
[]},
elabFlagAssignment
=
fromList
[],
elabFlagDefaults
=
fromList
[],
elabPkgDescription
=
PackageDescription
{specVersion
=
CabalSpecV1_10,
package
=
PackageIdentifier
{pkgName
=
PackageName
"quickcheck-io",
pkgVersion
=
mkVersion
[0,2,0]},
licenseRaw
=
Right
MIT,
licenseFiles
=
[SymbolicPath
"LICENSE"],
copyright
=
"(c)
2013-2017
Simon
Hengel",
maintainer
=
"Simon
Hengel
<sol@typeful.net>",
author
=
"Simon
Hengel
<sol@typeful.net>",
stability
=
"",
testedWith
=
[],
homepage
=
"https://github.com/hspec/quickcheck-io#readme",
pkgUrl
=
"",
bugReports
=
"https://github.com/hspec/quickcheck-io/issues",
sourceRepos
=
[SourceRepo
{repoKind
=
RepoHead,
repoType
=
Just
(KnownRepoType
Git),
repoLocation
=
Just
"https://github.com/hspec/quickcheck-io",
repoModule
=
Nothing,
repoBranch
=
Nothing,
repoTag
=
Nothing,
repoSubdir
=
Nothing}],
synopsis
=
"Use
HUnit
assertions
as
QuickCheck
properties",
description
=
"This
package
provides
an
orphan
instance
that
allows
you
to\nuse
HUnit
assertions
as
QuickCheck
properties.",
category
=
"Testing",
customFieldsPD
=
[],
buildTypeRaw
=
Just
Simple,
setupBuildInfo
=
Nothing,
library
=
Just
(Library
{libName
=
LMainLibName,
exposedModules
=
[ModuleName
"Test.QuickCheck.IO"],
reexportedModules
=
[],
signatures
=
[],
libExposed
=
True,
libVisibility
=
LibraryVisibilityPublic,
libBuildInfo
=
BuildInfo
{buildable
=
True,
buildTools
=
[],
buildToolDepends
=
[],
cppOptions
=
[],
asmOptions
=
[],
cmmOptions
=
[],
ccOptions
=
[],
cxxOptions
=
[],
ldOptions
=
[],
hsc2hsOptions
=
[],
pkgconfigDepends
=
[],
frameworks
=
[],
extraFrameworkDirs
=
[],
asmSources
=
[],
cmmSources
=
[],
cSources
=
[],
cxxSources
=
[],
jsSources
=
[],
hsSourceDirs
=
[SymbolicPath
"src"],
otherModules
=
[ModuleName
"Paths_quickcheck_io"],
virtualModules
=
[],
autogenModules
=
[],
defaultLanguage
=
Just
Haskell2010,
otherLanguages
=
[],
defaultExtensions
=
[],
otherExtensions
=
[],
oldExtensions
=
[],
extraLibs
=
[],
extraLibsStatic
=
[],
extraGHCiLibs
=
[],
extraBundledLibs
=
[],
extraLibFlavours
=
[],
extraDynLibFlavours
=
[],
extraLibDirs
=
[],
extraLibDirsStatic
=
[],
includeDirs
=
[],
includes
=
[],
autogenIncludes
=
[],
installIncludes
=
[],
options
=
PerCompilerFlavor
["-Wall"]
[],
profOptions
=
PerCompilerFlavor
[]
[],
sharedOptions
=
PerCompilerFlavor
[]
[],
staticOptions
=
PerCompilerFlavor
[]
[],
customFieldsBI
=
[],
targetBuildDepends
=
[Dependency
(PackageName
"HUnit")
(OrLaterVersion
(mkVersion
[1,2,5]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"QuickCheck")
(OrLaterVersion
(mkVersion
[2,7]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"base")
(IntersectVersionRanges
(OrLaterVersion
(mkVersion
[4]))
(EarlierVersion
(mkVersion
[5])))
(fromNonEmpty
(LMainLibName
:|
[]))],
mixins
=
[]}}),
subLibraries
=
[],
executables
=
[],
foreignLibs
=
[],
testSuites
=
[],
benchmarks
=
[],
dataFiles
=
[],
dataDir
=
".",
extraSrcFiles
=
[],
extraTmpFiles
=
[],
extraDocFiles
=
[]},
elabPkgSourceLocation
=
RepoTarballPackage
(RepoSecure
{repoRemote
=
RemoteRepo
{remoteRepoName
=
RepoName
"hackage.haskell.org",
remoteRepoURI
=
http://hackage.haskell.org/,
remoteRepoSecure
=
Just
True,
remoteRepoRootKeys
=
["fe331502606802feac15e514d9b9ea83fee8b6ffef71335479a2e68d84adc6b0","1ea9ba32c526d1cc91ab5e5bd364ec5e9e8cb67179a471872f6e26f0ae773d42","2c6c3627bd6c982990239487f1abd02e08a02e6cf16edb105a8012d444d870c3","0a5c7ea47cd1b15f01f5f51a33adda7e655bc0f0b0615baa8e271f4c3351e21d","51f0161b906011b52c6613376b1ae937670da69322113a246a09f807c62f6921"],
remoteRepoKeyThreshold
=
3,
remoteRepoShouldTryHttps
=
True},
repoLocalDir
=
"/home/michaels/.cabal/packages/hackage.haskell.org"})
(PackageIdentifier
{pkgName
=
PackageName
"quickcheck-io",
pkgVersion
=
mkVersion
[0,2,0]})
Nothing,
elabPkgSourceHash
=
Just
(HashValue
"\251w\145\EM\215\159\224\143\244\213\STX\251hi\167\f\154\141_\216\174\tY\246\ENQ\195\201\&7\239\217d\""),
elabLocalToProject
=
False,
elabBuildStyle
=
BuildAndInstall,
elabEnabledSpec
=
ComponentRequestedSpec
{testsRequested
=
False,
benchmarksRequested
=
False},
elabStanzasAvailable
=
OptionalStanzaSet
0,
elabStanzasRequested
=
OptionalStanzaMap
Nothing
Nothing,
elabSetupPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db"],
elabBuildPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db"],
elabRegisterPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db"],
elabInplaceSetupPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db",SpecificPackageDB
"/home/michaels/repos/cabal/cabal-testsuite/PackageTests/Regression/T7893/dist-newstyle/packagedb/ghc-8.10.7"],
elabInplaceBuildPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db",SpecificPackageDB
"/home/michaels/repos/cabal/cabal-testsuite/PackageTests/Regression/T7893/dist-newstyle/packagedb/ghc-8.10.7"],
elabInplaceRegisterPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db",SpecificPackageDB
"/home/michaels/repos/cabal/cabal-testsuite/PackageTests/Regression/T7893/dist-newstyle/packagedb/ghc-8.10.7"],
elabPkgDescriptionOverride
=
Just
"--
This
file
has
been
generated
from
package.yaml
by
hpack
version
0.18.0.\n--\n--
see:
https://github.com/sol/hpack\n\nname:












quickcheck-io\nversion:









0.2.0\nsynopsis:








Use
HUnit
assertions
as
QuickCheck
properties\ndescription:





This
package
provides
an
orphan
instance
that
allows
you
to\n

















use
HUnit
assertions
as
QuickCheck
properties.\ncategory:








Testing\nhomepage:








https://github.com/hspec/quickcheck-io#readme\nbug-reports:





https://github.com/hspec/quickcheck-io/issues\nlicense:









MIT\nlicense-file:




LICENSE\ncopyright:







(c)
2013-2017
Simon
Hengel\nauthor:










Simon
Hengel
<sol@typeful.net>\nmaintainer:






Simon
Hengel
<sol@typeful.net>\nbuild-type:






Simple\ncabal-version:



>=
1.10\n\nsource-repository
head\n

type:
git\n

location:
https://github.com/hspec/quickcheck-io\n\nlibrary\n

hs-source-dirs:\n





src\n

ghc-options:
-Wall\n

build-depends:\n





QuickCheck

>=
2.7\n



,
HUnit






>=
1.2.5\n



,
base







==
4.*\n

exposed-modules:\n





Test.QuickCheck.IO\n

other-modules:\n





Paths_quickcheck_io\n

default-language:
Haskell2010\n",
elabVanillaLib
=
True,
elabSharedLib
=
True,
elabStaticLib
=
False,
elabDynExe
=
False,
elabFullyStaticExe
=
False,
elabGHCiLib
=
False,
elabProfLib
=
False,
elabProfExe
=
False,
elabProfLibDetail
=
ProfDetailDefault,
elabProfExeDetail
=
ProfDetailDefault,
elabCoverage
=
False,
elabOptimization
=
NormalOptimisation,
elabSplitObjs
=
False,
elabSplitSections
=
False,
elabStripLibs
=
False,
elabStripExes
=
False,
elabDebugInfo
=
NoDebugInfo,
elabDumpBuildInfo
=
NoDumpBuildInfo,
elabProgramPaths
=
fromList
[("ghc","/nix/store/lrwichshmxvlqnbbym9yg4bxqsrvc88j-ghc-8.10.7/bin/ghc"),("ghc-pkg","/nix/store/lrwichshmxvlqnbbym9yg4bxqsrvc88j-ghc-8.10.7/bin/ghc-pkg-8.10.7")],
elabProgramArgs
=
fromList
[],
elabProgramPathExtra
=
["/home/michaels/.cabal/bin"],
elabConfigureScriptArgs
=
[],
elabExtraLibDirs
=
[],
elabExtraLibDirsStatic
=
[],
elabExtraFrameworkDirs
=
[],
elabExtraIncludeDirs
=
[],
elabProgPrefix
=
Nothing,
elabProgSuffix
=
Nothing,
elabInstallDirs
=
InstallDirs
{prefix
=
"/home/michaels/.cabal/store/ghc-8.10.7/quickcheck-io-0.2.0-e8a92f5e175b4decd0294e72dce91c0adad46069f81db299bdebc3b566e550ec",
bindir
=
"/home/michaels/.cabal/store/ghc-8.10.7/quickcheck-io-0.2.0-e8a92f5e175b4decd0294e72dce91c0adad46069f81db299bdebc3b566e550ec/bin",
libdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/quickcheck-io-0.2.0-e8a92f5e175b4decd0294e72dce91c0adad46069f81db299bdebc3b566e550ec/lib",
libsubdir
=
"",
dynlibdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/quickcheck-io-0.2.0-e8a92f5e175b4decd0294e72dce91c0adad46069f81db299bdebc3b566e550ec/lib",
flibdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/quickcheck-io-0.2.0-e8a92f5e175b4decd0294e72dce91c0adad46069f81db299bdebc3b566e550ec/lib",
libexecdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/quickcheck-io-0.2.0-e8a92f5e175b4decd0294e72dce91c0adad46069f81db299bdebc3b566e550ec/libexec",
libexecsubdir
=
"",
includedir
=
"/home/michaels/.cabal/store/ghc-8.10.7/quickcheck-io-0.2.0-e8a92f5e175b4decd0294e72dce91c0adad46069f81db299bdebc3b566e550ec/lib/include",
datadir
=
"/home/michaels/.cabal/store/ghc-8.10.7/quickcheck-io-0.2.0-e8a92f5e175b4decd0294e72dce91c0adad46069f81db299bdebc3b566e550ec/share",
datasubdir
=
"",
docdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/quickcheck-io-0.2.0-e8a92f5e175b4decd0294e72dce91c0adad46069f81db299bdebc3b566e550ec/share/doc",
mandir
=
"/home/michaels/.cabal/store/ghc-8.10.7/quickcheck-io-0.2.0-e8a92f5e175b4decd0294e72dce91c0adad46069f81db299bdebc3b566e550ec/share/man",
htmldir
=
"/home/michaels/.cabal/store/ghc-8.10.7/quickcheck-io-0.2.0-e8a92f5e175b4decd0294e72dce91c0adad46069f81db299bdebc3b566e550ec/share/doc/html",
haddockdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/quickcheck-io-0.2.0-e8a92f5e175b4decd0294e72dce91c0adad46069f81db299bdebc3b566e550ec/share/doc/html",
sysconfdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/quickcheck-io-0.2.0-e8a92f5e175b4decd0294e72dce91c0adad46069f81db299bdebc3b566e550ec/etc"},
elabHaddockHoogle
=
False,
elabHaddockHtml
=
False,
elabHaddockHtmlLocation
=
Nothing,
elabHaddockForeignLibs
=
False,
elabHaddockForHackage
=
ForDevelopment,
elabHaddockExecutables
=
False,
elabHaddockTestSuites
=
False,
elabHaddockBenchmarks
=
False,
elabHaddockInternal
=
False,
elabHaddockCss
=
Nothing,
elabHaddockLinkedSource
=
False,
elabHaddockQuickJump
=
False,
elabHaddockHscolourCss
=
Nothing,
elabHaddockContents
=
Nothing,
elabTestMachineLog
=
Just
"$pkgid.log",
elabTestHumanLog
=
Just
"$pkgid-$test-suite.log",
elabTestShowDetails
=
Just
Failures,
elabTestKeepTix
=
False,
elabTestWrapper
=
Nothing,
elabTestFailWhenNoTestSuites
=
False,
elabTestTestOptions
=
[],
elabBenchmarkOptions
=
[],
elabSetupScriptStyle
=
SetupNonCustomInternalLib,
elabSetupScriptCliVersion
=
mkVersion
[3,7,0,0],
elabConfigureTargets
=
[],
elabBuildTargets
=
[],
elabTestTargets
=
[],
elabBenchTargets
=
[],
elabReplTarget
=
Nothing,
elabHaddockTargets
=
[],
elabBuildHaddocks
=
False,
elabPkgOrComp
=
ElabPackage
(ElaboratedPackage
{pkgInstalledId
=
ComponentId
"quickcheck-io-0.2.0-e8a92f5e175b4decd0294e72dce91c0adad46069f81db299bdebc3b566e550ec",
pkgLibDependencies
=
ComponentDeps
{unComponentDeps
=
fromList
[(ComponentLib,[ComponentId
"HUnit-1.6.2.0-b2b2674ec87a7c61b7fa473d0252e2cfb0d432bf08667e1be5fe2f2320acc1c9",ComponentId
"QuickCheck-2.14.2-6467e0fb8e4c059a4b4a73f2bd7b7056d024e00a5bfbdcc6e27253b020fc4af3",ComponentId
"base-4.14.3.0"])]},
pkgDependsOnSelfLib
=
ComponentDeps
{unComponentDeps
=
fromList
[(ComponentLib,[()])]},
pkgExeDependencies
=
ComponentDeps
{unComponentDeps
=
fromList
[(ComponentLib,[])]},
pkgExeDependencyPaths
=
ComponentDeps
{unComponentDeps
=
fromList
[(ComponentLib,[])]},
pkgPkgConfigDependencies
=
[],
pkgStanzasEnabled
=
OptionalStanzaSet
0})}
ElaboratedConfiguredPackage
{elabUnitId
=
UnitId
"setenv-0.1.1.3-d1fd3b5f229df08f0097e8e4849ce67ab229678abf3d63267e574da8b30191dc",
elabComponentId
=
ComponentId
"setenv-0.1.1.3-d1fd3b5f229df08f0097e8e4849ce67ab229678abf3d63267e574da8b30191dc",
elabInstantiatedWith
=
fromList
[],
elabLinkedInstantiatedWith
=
fromList
[],
elabIsCanonical
=
True,
elabPkgSourceId
=
PackageIdentifier
{pkgName
=
PackageName
"setenv",
pkgVersion
=
mkVersion
[0,1,1,3]},
elabModuleShape
=
ModuleShape
{modShapeProvides
=
fromList
[(ModuleName
"System.SetEnv",OpenModule
(IndefFullUnitId
(ComponentId
"setenv-0.1.1.3-4c9cb3ff8736d5b6235b392c3f686901755257f13ab45ee248eddb475de7b805")
(fromList
[]))
(ModuleName
"System.SetEnv"))],
modShapeRequires
=
fromList
[]},
elabFlagAssignment
=
fromList
[],
elabFlagDefaults
=
fromList
[],
elabPkgDescription
=
PackageDescription
{specVersion
=
CabalSpecV1_8,
package
=
PackageIdentifier
{pkgName
=
PackageName
"setenv",
pkgVersion
=
mkVersion
[0,1,1,3]},
licenseRaw
=
Right
MIT,
licenseFiles
=
[SymbolicPath
"LICENSE"],
copyright
=
"(c)
2012-2015
Simon
Hengel",
maintainer
=
"Simon
Hengel
<sol@typeful.net>",
author
=
"Simon
Hengel
<sol@typeful.net>",
stability
=
"",
testedWith
=
[],
homepage
=
"",
pkgUrl
=
"",
bugReports
=
"",
sourceRepos
=
[SourceRepo
{repoKind
=
RepoHead,
repoType
=
Just
(KnownRepoType
Git),
repoLocation
=
Just
"https://github.com/sol/setenv",
repoModule
=
Nothing,
repoBranch
=
Nothing,
repoTag
=
Nothing,
repoSubdir
=
Nothing}],
synopsis
=
"A
cross-platform
library
for
setting
environment
variables",
description
=
"A
cross-platform
library
for
setting
environment
variables\n\nNote:
Since
@base-4.7.0.0@
the
functions
@setEnv@
and\n@unsetEnv@
are
provided
by
@System.Environment@.\n@System.SetEnv@
merily
re-exports
those
functions
when
built\nwith
@base
>=
4.7@.",
category
=
"System",
customFieldsPD
=
[("x-revision","1")],
buildTypeRaw
=
Just
Simple,
setupBuildInfo
=
Nothing,
library
=
Just
(Library
{libName
=
LMainLibName,
exposedModules
=
[ModuleName
"System.SetEnv"],
reexportedModules
=
[],
signatures
=
[],
libExposed
=
True,
libVisibility
=
LibraryVisibilityPublic,
libBuildInfo
=
BuildInfo
{buildable
=
True,
buildTools
=
[],
buildToolDepends
=
[],
cppOptions
=
[],
asmOptions
=
[],
cmmOptions
=
[],
ccOptions
=
[],
cxxOptions
=
[],
ldOptions
=
[],
hsc2hsOptions
=
[],
pkgconfigDepends
=
[],
frameworks
=
[],
extraFrameworkDirs
=
[],
asmSources
=
[],
cmmSources
=
[],
cSources
=
[],
cxxSources
=
[],
jsSources
=
[],
hsSourceDirs
=
[SymbolicPath
"src"],
otherModules
=
[],
virtualModules
=
[],
autogenModules
=
[],
defaultLanguage
=
Nothing,
otherLanguages
=
[],
defaultExtensions
=
[],
otherExtensions
=
[],
oldExtensions
=
[],
extraLibs
=
[],
extraLibsStatic
=
[],
extraGHCiLibs
=
[],
extraBundledLibs
=
[],
extraLibFlavours
=
[],
extraDynLibFlavours
=
[],
extraLibDirs
=
[],
extraLibDirsStatic
=
[],
includeDirs
=
[],
includes
=
[],
autogenIncludes
=
[],
installIncludes
=
[],
options
=
PerCompilerFlavor
["-Wall"]
[],
profOptions
=
PerCompilerFlavor
[]
[],
sharedOptions
=
PerCompilerFlavor
[]
[],
staticOptions
=
PerCompilerFlavor
[]
[],
customFieldsBI
=
[],
targetBuildDepends
=
[Dependency
(PackageName
"base")
(IntersectVersionRanges
(OrLaterVersion
(mkVersion
[4]))
(EarlierVersion
(mkVersion
[5])))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"unix")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[]))],
mixins
=
[]}}),
subLibraries
=
[],
executables
=
[],
foreignLibs
=
[],
testSuites
=
[],
benchmarks
=
[],
dataFiles
=
[],
dataDir
=
".",
extraSrcFiles
=
[],
extraTmpFiles
=
[],
extraDocFiles
=
[]},
elabPkgSourceLocation
=
RepoTarballPackage
(RepoSecure
{repoRemote
=
RemoteRepo
{remoteRepoName
=
RepoName
"hackage.haskell.org",
remoteRepoURI
=
http://hackage.haskell.org/,
remoteRepoSecure
=
Just
True,
remoteRepoRootKeys
=
["fe331502606802feac15e514d9b9ea83fee8b6ffef71335479a2e68d84adc6b0","1ea9ba32c526d1cc91ab5e5bd364ec5e9e8cb67179a471872f6e26f0ae773d42","2c6c3627bd6c982990239487f1abd02e08a02e6cf16edb105a8012d444d870c3","0a5c7ea47cd1b15f01f5f51a33adda7e655bc0f0b0615baa8e271f4c3351e21d","51f0161b906011b52c6613376b1ae937670da69322113a246a09f807c62f6921"],
remoteRepoKeyThreshold
=
3,
remoteRepoShouldTryHttps
=
True},
repoLocalDir
=
"/home/michaels/.cabal/packages/hackage.haskell.org"})
(PackageIdentifier
{pkgName
=
PackageName
"setenv",
pkgVersion
=
mkVersion
[0,1,1,3]})
Nothing,
elabPkgSourceHash
=
Just
(HashValue
"\227X\223\&9\175\192=Z9\226\236e\ACKR\216E\200\\\128\204\152\254\&3\SYNT\222\175\180v~\203\&2"),
elabLocalToProject
=
False,
elabBuildStyle
=
BuildAndInstall,
elabEnabledSpec
=
ComponentRequestedSpec
{testsRequested
=
False,
benchmarksRequested
=
False},
elabStanzasAvailable
=
OptionalStanzaSet
0,
elabStanzasRequested
=
OptionalStanzaMap
Nothing
Nothing,
elabSetupPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db"],
elabBuildPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db"],
elabRegisterPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db"],
elabInplaceSetupPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db",SpecificPackageDB
"/home/michaels/repos/cabal/cabal-testsuite/PackageTests/Regression/T7893/dist-newstyle/packagedb/ghc-8.10.7"],
elabInplaceBuildPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db",SpecificPackageDB
"/home/michaels/repos/cabal/cabal-testsuite/PackageTests/Regression/T7893/dist-newstyle/packagedb/ghc-8.10.7"],
elabInplaceRegisterPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db",SpecificPackageDB
"/home/michaels/repos/cabal/cabal-testsuite/PackageTests/Regression/T7893/dist-newstyle/packagedb/ghc-8.10.7"],
elabPkgDescriptionOverride
=
Just
"name:












setenv\r\nversion:









0.1.1.3\r\nx-revision:
1\r\nlicense:









MIT\r\nlicense-file:




LICENSE\r\ncopyright:







(c)
2012-2015
Simon
Hengel\r\nauthor:










Simon
Hengel
<sol@typeful.net>\r\nmaintainer:






Simon
Hengel
<sol@typeful.net>\r\ncategory:








System\r\nsynopsis:








A
cross-platform
library
for
setting
environment
variables\r\ndescription:





A
cross-platform
library
for
setting
environment
variables\r\n

















.\r\n

















Note:
Since
@base-4.7.0.0@
the
functions
@setEnv@
and\r\n

















@unsetEnv@
are
provided
by
@System.Environment@.\r\n

















@System.SetEnv@
merily
re-exports
those
functions
when
built\r\n

















with
@base
>=
4.7@.\r\nbuild-type:






Simple\r\ncabal-version:



>=
1.8\r\n\r\nsource-repository
head\r\n

type:
git\r\n

location:
https://github.com/sol/setenv\r\n\r\nlibrary\r\n

ghc-options:\r\n





-Wall\r\n

hs-source-dirs:\r\n





src\r\n

exposed-modules:\r\n





System.SetEnv\r\n

build-depends:\r\n





base
==
4.*\r\n

if
!os(windows)\r\n



build-depends:
unix\r\n",
elabVanillaLib
=
True,
elabSharedLib
=
True,
elabStaticLib
=
False,
elabDynExe
=
False,
elabFullyStaticExe
=
False,
elabGHCiLib
=
False,
elabProfLib
=
False,
elabProfExe
=
False,
elabProfLibDetail
=
ProfDetailDefault,
elabProfExeDetail
=
ProfDetailDefault,
elabCoverage
=
False,
elabOptimization
=
NormalOptimisation,
elabSplitObjs
=
False,
elabSplitSections
=
False,
elabStripLibs
=
False,
elabStripExes
=
False,
elabDebugInfo
=
NoDebugInfo,
elabDumpBuildInfo
=
NoDumpBuildInfo,
elabProgramPaths
=
fromList
[("ghc","/nix/store/lrwichshmxvlqnbbym9yg4bxqsrvc88j-ghc-8.10.7/bin/ghc"),("ghc-pkg","/nix/store/lrwichshmxvlqnbbym9yg4bxqsrvc88j-ghc-8.10.7/bin/ghc-pkg-8.10.7")],
elabProgramArgs
=
fromList
[],
elabProgramPathExtra
=
["/home/michaels/.cabal/bin"],
elabConfigureScriptArgs
=
[],
elabExtraLibDirs
=
[],
elabExtraLibDirsStatic
=
[],
elabExtraFrameworkDirs
=
[],
elabExtraIncludeDirs
=
[],
elabProgPrefix
=
Nothing,
elabProgSuffix
=
Nothing,
elabInstallDirs
=
InstallDirs
{prefix
=
"/home/michaels/.cabal/store/ghc-8.10.7/setenv-0.1.1.3-d1fd3b5f229df08f0097e8e4849ce67ab229678abf3d63267e574da8b30191dc",
bindir
=
"/home/michaels/.cabal/store/ghc-8.10.7/setenv-0.1.1.3-d1fd3b5f229df08f0097e8e4849ce67ab229678abf3d63267e574da8b30191dc/bin",
libdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/setenv-0.1.1.3-d1fd3b5f229df08f0097e8e4849ce67ab229678abf3d63267e574da8b30191dc/lib",
libsubdir
=
"",
dynlibdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/setenv-0.1.1.3-d1fd3b5f229df08f0097e8e4849ce67ab229678abf3d63267e574da8b30191dc/lib",
flibdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/setenv-0.1.1.3-d1fd3b5f229df08f0097e8e4849ce67ab229678abf3d63267e574da8b30191dc/lib",
libexecdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/setenv-0.1.1.3-d1fd3b5f229df08f0097e8e4849ce67ab229678abf3d63267e574da8b30191dc/libexec",
libexecsubdir
=
"",
includedir
=
"/home/michaels/.cabal/store/ghc-8.10.7/setenv-0.1.1.3-d1fd3b5f229df08f0097e8e4849ce67ab229678abf3d63267e574da8b30191dc/lib/include",
datadir
=
"/home/michaels/.cabal/store/ghc-8.10.7/setenv-0.1.1.3-d1fd3b5f229df08f0097e8e4849ce67ab229678abf3d63267e574da8b30191dc/share",
datasubdir
=
"",
docdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/setenv-0.1.1.3-d1fd3b5f229df08f0097e8e4849ce67ab229678abf3d63267e574da8b30191dc/share/doc",
mandir
=
"/home/michaels/.cabal/store/ghc-8.10.7/setenv-0.1.1.3-d1fd3b5f229df08f0097e8e4849ce67ab229678abf3d63267e574da8b30191dc/share/man",
htmldir
=
"/home/michaels/.cabal/store/ghc-8.10.7/setenv-0.1.1.3-d1fd3b5f229df08f0097e8e4849ce67ab229678abf3d63267e574da8b30191dc/share/doc/html",
haddockdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/setenv-0.1.1.3-d1fd3b5f229df08f0097e8e4849ce67ab229678abf3d63267e574da8b30191dc/share/doc/html",
sysconfdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/setenv-0.1.1.3-d1fd3b5f229df08f0097e8e4849ce67ab229678abf3d63267e574da8b30191dc/etc"},
elabHaddockHoogle
=
False,
elabHaddockHtml
=
False,
elabHaddockHtmlLocation
=
Nothing,
elabHaddockForeignLibs
=
False,
elabHaddockForHackage
=
ForDevelopment,
elabHaddockExecutables
=
False,
elabHaddockTestSuites
=
False,
elabHaddockBenchmarks
=
False,
elabHaddockInternal
=
False,
elabHaddockCss
=
Nothing,
elabHaddockLinkedSource
=
False,
elabHaddockQuickJump
=
False,
elabHaddockHscolourCss
=
Nothing,
elabHaddockContents
=
Nothing,
elabTestMachineLog
=
Just
"$pkgid.log",
elabTestHumanLog
=
Just
"$pkgid-$test-suite.log",
elabTestShowDetails
=
Just
Failures,
elabTestKeepTix
=
False,
elabTestWrapper
=
Nothing,
elabTestFailWhenNoTestSuites
=
False,
elabTestTestOptions
=
[],
elabBenchmarkOptions
=
[],
elabSetupScriptStyle
=
SetupNonCustomInternalLib,
elabSetupScriptCliVersion
=
mkVersion
[3,7,0,0],
elabConfigureTargets
=
[],
elabBuildTargets
=
[],
elabTestTargets
=
[],
elabBenchTargets
=
[],
elabReplTarget
=
Nothing,
elabHaddockTargets
=
[],
elabBuildHaddocks
=
False,
elabPkgOrComp
=
ElabPackage
(ElaboratedPackage
{pkgInstalledId
=
ComponentId
"setenv-0.1.1.3-d1fd3b5f229df08f0097e8e4849ce67ab229678abf3d63267e574da8b30191dc",
pkgLibDependencies
=
ComponentDeps
{unComponentDeps
=
fromList
[(ComponentLib,[ComponentId
"base-4.14.3.0",ComponentId
"unix-2.7.2.2"])]},
pkgDependsOnSelfLib
=
ComponentDeps
{unComponentDeps
=
fromList
[(ComponentLib,[()])]},
pkgExeDependencies
=
ComponentDeps
{unComponentDeps
=
fromList
[(ComponentLib,[])]},
pkgExeDependencyPaths
=
ComponentDeps
{unComponentDeps
=
fromList
[(ComponentLib,[])]},
pkgPkgConfigDependencies
=
[],
pkgStanzasEnabled
=
OptionalStanzaSet
0})}
ElaboratedConfiguredPackage
{elabUnitId
=
UnitId
"tf-random-0.5-cd8809b61a1ad8da508a56288493f3a6523b34b0ebee5c1bf4003864d856bac4",
elabComponentId
=
ComponentId
"tf-random-0.5-cd8809b61a1ad8da508a56288493f3a6523b34b0ebee5c1bf4003864d856bac4",
elabInstantiatedWith
=
fromList
[],
elabLinkedInstantiatedWith
=
fromList
[],
elabIsCanonical
=
True,
elabPkgSourceId
=
PackageIdentifier
{pkgName
=
PackageName
"tf-random",
pkgVersion
=
mkVersion
[0,5]},
elabModuleShape
=
ModuleShape
{modShapeProvides
=
fromList
[(ModuleName
"System.Random.TF",OpenModule
(IndefFullUnitId
(ComponentId
"tf-random-0.5-3175501bd74e51fd0487cb5eb723ce8d1ff73f75b1ca7e002db8efb85f9b7a78")
(fromList
[]))
(ModuleName
"System.Random.TF")),(ModuleName
"System.Random.TF.Gen",OpenModule
(IndefFullUnitId
(ComponentId
"tf-random-0.5-3175501bd74e51fd0487cb5eb723ce8d1ff73f75b1ca7e002db8efb85f9b7a78")
(fromList
[]))
(ModuleName
"System.Random.TF.Gen")),(ModuleName
"System.Random.TF.Init",OpenModule
(IndefFullUnitId
(ComponentId
"tf-random-0.5-3175501bd74e51fd0487cb5eb723ce8d1ff73f75b1ca7e002db8efb85f9b7a78")
(fromList
[]))
(ModuleName
"System.Random.TF.Init")),(ModuleName
"System.Random.TF.Instances",OpenModule
(IndefFullUnitId
(ComponentId
"tf-random-0.5-3175501bd74e51fd0487cb5eb723ce8d1ff73f75b1ca7e002db8efb85f9b7a78")
(fromList
[]))
(ModuleName
"System.Random.TF.Instances"))],
modShapeRequires
=
fromList
[]},
elabFlagAssignment
=
fromList
[],
elabFlagDefaults
=
fromList
[],
elabPkgDescription
=
PackageDescription
{specVersion
=
CabalSpecV1_8,
package
=
PackageIdentifier
{pkgName
=
PackageName
"tf-random",
pkgVersion
=
mkVersion
[0,5]},
licenseRaw
=
Right
BSD3,
licenseFiles
=
[SymbolicPath
"LICENSE"],
copyright
=
"",
maintainer
=
"Micha\322
Pa\322ka
<michal.palka@chalmers.se>",
author
=
"Micha\322
Pa\322ka
<michal.palka@chalmers.se>",
stability
=
"",
testedWith
=
[],
homepage
=
"",
pkgUrl
=
"",
bugReports
=
"",
sourceRepos
=
[SourceRepo
{repoKind
=
RepoHead,
repoType
=
Just
(KnownRepoType
Darcs),
repoLocation
=
Just
"http://hub.darcs.net/michal.palka/tf-random",
repoModule
=
Nothing,
repoBranch
=
Nothing,
repoTag
=
Nothing,
repoSubdir
=
Nothing}],
synopsis
=
"High-quality
splittable
pseudorandom
number
generator",
description
=
"This
package
contains
an
implementation
of
a
high-quality
splittable
pseudorandom
number
generator.
The
generator
is
based
on
a
cryptographic
hash
function
built
on
top
of
the
ThreeFish
block
cipher.
See
the
paper
/Splittable
Pseudorandom
Number
Generators
Using
Cryptographic
Hashing/
by
Claessen,
Pa\322ka
for
details
and
the
rationale
of
the
design.\n\nThe
package
provides
the
following:\n\n*
A
splittable
PRNG
that
implements
the
standard
'System.Random.RandomGen'
class.\n\n*
The
generator
also
implements
an
alternative
version
of
the
'System.Random.TF.Gen.RandomGen'
class
(exported
from
\"System.Random.TF.Gen\"),
which
requires
the
generator
to
return
pseudorandom
integers
from
the
full
32-bit
range,
and
contains
an
n-way
split
function.\n\n*
An
alternative
version
of
the
@Random@
class
is
provided,
which
is
linked
to
the
new
@RandomGen@
class,
together
with
@Random@
instances
for
some
integral
types.\n\n*
Two
functions
for
initialising
the
generator
with
a
non-deterministic
seed:
one
using
the
system
time,
and
one
using
the
@\\/dev\\/urandom@
UNIX
special
file.\n\nThe
package
uses
an
adapted
version
of
the
reference
C
implementation
of
ThreeFish
from
the
reference
package
of
the
Skein
hash
function
(<https://www.schneier.com/skein.html>),
originally
written
by
Doug
Whiting.\n\nPlease
note
that
even
though
the
generator
provides
very
high-quality
pseudorandom
numbers,
it
has
not
been
designed
with
cryptographic
applications
in
mind.",
category
=
"Random",
customFieldsPD
=
[],
buildTypeRaw
=
Just
Simple,
setupBuildInfo
=
Nothing,
library
=
Just
(Library
{libName
=
LMainLibName,
exposedModules
=
[ModuleName
"System.Random.TF",ModuleName
"System.Random.TF.Gen",ModuleName
"System.Random.TF.Init",ModuleName
"System.Random.TF.Instances"],
reexportedModules
=
[],
signatures
=
[],
libExposed
=
True,
libVisibility
=
LibraryVisibilityPublic,
libBuildInfo
=
BuildInfo
{buildable
=
True,
buildTools
=
[],
buildToolDepends
=
[],
cppOptions
=
[],
asmOptions
=
[],
cmmOptions
=
[],
ccOptions
=
[],
cxxOptions
=
[],
ldOptions
=
[],
hsc2hsOptions
=
[],
pkgconfigDepends
=
[],
frameworks
=
[],
extraFrameworkDirs
=
[],
asmSources
=
[],
cmmSources
=
[],
cSources
=
["cbits/threefish_block.c"],
cxxSources
=
[],
jsSources
=
[],
hsSourceDirs
=
[SymbolicPath
"src"],
otherModules
=
[],
virtualModules
=
[],
autogenModules
=
[],
defaultLanguage
=
Nothing,
otherLanguages
=
[],
defaultExtensions
=
[],
otherExtensions
=
[],
oldExtensions
=
[],
extraLibs
=
[],
extraLibsStatic
=
[],
extraGHCiLibs
=
[],
extraBundledLibs
=
[],
extraLibFlavours
=
[],
extraDynLibFlavours
=
[],
extraLibDirs
=
[],
extraLibDirsStatic
=
[],
includeDirs
=
[],
includes
=
[],
autogenIncludes
=
[],
installIncludes
=
[],
options
=
PerCompilerFlavor
[]
[],
profOptions
=
PerCompilerFlavor
[]
[],
sharedOptions
=
PerCompilerFlavor
[]
[],
staticOptions
=
PerCompilerFlavor
[]
[],
customFieldsBI
=
[],
targetBuildDepends
=
[Dependency
(PackageName
"base")
(IntersectVersionRanges
(OrLaterVersion
(mkVersion
[4,2]))
(EarlierVersion
(mkVersion
[5])))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"primitive")
(OrLaterVersion
(mkVersion
[0,3]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"random")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"time")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[]))],
mixins
=
[]}}),
subLibraries
=
[],
executables
=
[],
foreignLibs
=
[],
testSuites
=
[],
benchmarks
=
[],
dataFiles
=
[],
dataDir
=
".",
extraSrcFiles
=
["ChangeLog","LICENSE.brg","LICENSE.tf","cbits/brg_types.h","cbits/skein_debug.c","cbits/skein_debug.h","cbits/threefish.h","cbits/threefish_port.h"],
extraTmpFiles
=
[],
extraDocFiles
=
[]},
elabPkgSourceLocation
=
RepoTarballPackage
(RepoSecure
{repoRemote
=
RemoteRepo
{remoteRepoName
=
RepoName
"hackage.haskell.org",
remoteRepoURI
=
http://hackage.haskell.org/,
remoteRepoSecure
=
Just
True,
remoteRepoRootKeys
=
["fe331502606802feac15e514d9b9ea83fee8b6ffef71335479a2e68d84adc6b0","1ea9ba32c526d1cc91ab5e5bd364ec5e9e8cb67179a471872f6e26f0ae773d42","2c6c3627bd6c982990239487f1abd02e08a02e6cf16edb105a8012d444d870c3","0a5c7ea47cd1b15f01f5f51a33adda7e655bc0f0b0615baa8e271f4c3351e21d","51f0161b906011b52c6613376b1ae937670da69322113a246a09f807c62f6921"],
remoteRepoKeyThreshold
=
3,
remoteRepoShouldTryHttps
=
True},
repoLocalDir
=
"/home/michaels/.cabal/packages/hackage.haskell.org"})
(PackageIdentifier
{pkgName
=
PackageName
"tf-random",
pkgVersion
=
mkVersion
[0,5]})
Nothing,
elabPkgSourceHash
=
Just
(HashValue
".0\206\192'\179\DC3\201\225yM2f5\216\252_y\182\191nu\128\171K\NUL\CANm\173\200\133\DLE"),
elabLocalToProject
=
False,
elabBuildStyle
=
BuildAndInstall,
elabEnabledSpec
=
ComponentRequestedSpec
{testsRequested
=
False,
benchmarksRequested
=
False},
elabStanzasAvailable
=
OptionalStanzaSet
0,
elabStanzasRequested
=
OptionalStanzaMap
Nothing
Nothing,
elabSetupPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db"],
elabBuildPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db"],
elabRegisterPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db"],
elabInplaceSetupPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db",SpecificPackageDB
"/home/michaels/repos/cabal/cabal-testsuite/PackageTests/Regression/T7893/dist-newstyle/packagedb/ghc-8.10.7"],
elabInplaceBuildPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db",SpecificPackageDB
"/home/michaels/repos/cabal/cabal-testsuite/PackageTests/Regression/T7893/dist-newstyle/packagedb/ghc-8.10.7"],
elabInplaceRegisterPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db",SpecificPackageDB
"/home/michaels/repos/cabal/cabal-testsuite/PackageTests/Regression/T7893/dist-newstyle/packagedb/ghc-8.10.7"],
elabPkgDescriptionOverride
=
Just
"--
Initial
tf-random.cabal
generated
by
cabal
init.

For
further\n--
documentation,
see
http://haskell.org/cabal/users-guide/\n\n--
The
name
of
the
package.\nname:















tf-random\n\n--
The
package
version.

See
the
Haskell
package
versioning
policy
(PVP)\n--
for
standards
guiding
when
and
how
versions
should
be
incremented.\n--
http://www.haskell.org/haskellwiki/Package_versioning_policy\n--
PVP
summary:





+-+-------
breaking
API
changes\n--


















|
|
+-----
non-breaking
API
additions\n--


















|
|
|
+---
code
changes
with
no
API
change\nversion:












0.5\n\n--
A
short
(one-line)
description
of
the
package.\nsynopsis:











High-quality
splittable
pseudorandom
number
generator\n\n--
A
longer
description
of
the
package.\ndescription:








This
package
contains
an
implementation
of
a
high-quality
splittable
pseudorandom
number
generator.
The
generator
is
based
on
a
cryptographic
hash
function
built
on
top
of
the
ThreeFish
block
cipher.
See
the
paper
/Splittable
Pseudorandom
Number
Generators
Using
Cryptographic
Hashing/
by
Claessen,
Pa\197\130ka
for
details
and
the
rationale
of
the
design.\n




















.\n




















The
package
provides
the
following:\n




















.\n






















*
A
splittable
PRNG
that
implements
the
standard
'System.Random.RandomGen'
class.\n




















.\n






















*
The
generator
also
implements
an
alternative
version
of
the
'System.Random.TF.Gen.RandomGen'
class
(exported
from
\"System.Random.TF.Gen\"),
which
requires
the
generator
to
return
pseudorandom
integers
from
the
full
32-bit
range,
and
contains
an
n-way
split
function.\n




















.\n






















*
An
alternative
version
of
the
@Random@
class
is
provided,
which
is
linked
to
the
new
@RandomGen@
class,
together
with
@Random@
instances
for
some
integral
types.\n




















.\n






















*
Two
functions
for
initialising
the
generator
with
a
non-deterministic
seed:
one
using
the
system
time,
and
one
using
the
@\\/dev\\/urandom@
UNIX
special
file.\n




















.\n




















The
package
uses
an
adapted
version
of
the
reference
C
implementation
of
ThreeFish
from
the
reference
package
of
the
Skein
hash
function
(<https://www.schneier.com/skein.html>),
originally
written
by
Doug
Whiting.\n




















.\n




















Please
note
that
even
though
the
generator
provides
very
high-quality
pseudorandom
numbers,
it
has
not
been
designed
with
cryptographic
applications
in
mind.\n\n--
URL
for
the
project
homepage
or
repository.\n--homepage:











http://no.home.page/\n\n--
The
license
under
which
the
package
is
released.\nlicense:












BSD3\n\n--
The
file
containing
the
license
text.\nlicense-file:







LICENSE\n\n--
The
package
author(s).\nauthor:













Micha\197\130
Pa\197\130ka
<michal.palka@chalmers.se>\n\n--
An
email
address
to
which
users
can
send
suggestions,
bug
reports,
and\n--
patches.\nmaintainer:









Micha\197\130
Pa\197\130ka
<michal.palka@chalmers.se>\n\n--
A
copyright
notice.\n--
copyright:










\n\ncategory:











Random\n\nbuild-type:









Simple\n\n--
Constraint
on
the
version
of
Cabal
needed
to
build
this
package.\ncabal-version:






>=1.8\n\nextra-source-files:\n

ChangeLog,\n

LICENSE.brg,\n

LICENSE.tf,\n

cbits/brg_types.h,\n

cbits/skein_debug.c,\n

cbits/skein_debug.h,\n

cbits/threefish.h,\n

cbits/threefish_port.h\n\nsource-repository
head\n

type:













darcs\n

location:









http://hub.darcs.net/michal.palka/tf-random\n\nlibrary\n

Hs-Source-Dirs:
src\n

C-Sources:\n



cbits/threefish_block.c\n\n

--GHC-options:
-O\n\n

--
Modules
exported
by
the
library.\n

exposed-modules:




System.Random.TF,
System.Random.TF.Gen,
System.Random.TF.Init,
System.Random.TF.Instances\n\n

--
Modules
included
in
this
library
but
not
exported.\n

--
other-modules:






\n\n

--
Other
library
packages
from
which
modules
are
imported.\n

build-depends:\n



base
>=
4.2
&&
<
5,\n



primitive
>=
0.3,\n



random,\n



time\n\n",
elabVanillaLib
=
True,
elabSharedLib
=
True,
elabStaticLib
=
False,
elabDynExe
=
False,
elabFullyStaticExe
=
False,
elabGHCiLib
=
False,
elabProfLib
=
False,
elabProfExe
=
False,
elabProfLibDetail
=
ProfDetailDefault,
elabProfExeDetail
=
ProfDetailDefault,
elabCoverage
=
False,
elabOptimization
=
NormalOptimisation,
elabSplitObjs
=
False,
elabSplitSections
=
False,
elabStripLibs
=
False,
elabStripExes
=
False,
elabDebugInfo
=
NoDebugInfo,
elabDumpBuildInfo
=
NoDumpBuildInfo,
elabProgramPaths
=
fromList
[("ghc","/nix/store/lrwichshmxvlqnbbym9yg4bxqsrvc88j-ghc-8.10.7/bin/ghc"),("ghc-pkg","/nix/store/lrwichshmxvlqnbbym9yg4bxqsrvc88j-ghc-8.10.7/bin/ghc-pkg-8.10.7")],
elabProgramArgs
=
fromList
[],
elabProgramPathExtra
=
["/home/michaels/.cabal/bin"],
elabConfigureScriptArgs
=
[],
elabExtraLibDirs
=
[],
elabExtraLibDirsStatic
=
[],
elabExtraFrameworkDirs
=
[],
elabExtraIncludeDirs
=
[],
elabProgPrefix
=
Nothing,
elabProgSuffix
=
Nothing,
elabInstallDirs
=
InstallDirs
{prefix
=
"/home/michaels/.cabal/store/ghc-8.10.7/tf-random-0.5-cd8809b61a1ad8da508a56288493f3a6523b34b0ebee5c1bf4003864d856bac4",
bindir
=
"/home/michaels/.cabal/store/ghc-8.10.7/tf-random-0.5-cd8809b61a1ad8da508a56288493f3a6523b34b0ebee5c1bf4003864d856bac4/bin",
libdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/tf-random-0.5-cd8809b61a1ad8da508a56288493f3a6523b34b0ebee5c1bf4003864d856bac4/lib",
libsubdir
=
"",
dynlibdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/tf-random-0.5-cd8809b61a1ad8da508a56288493f3a6523b34b0ebee5c1bf4003864d856bac4/lib",
flibdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/tf-random-0.5-cd8809b61a1ad8da508a56288493f3a6523b34b0ebee5c1bf4003864d856bac4/lib",
libexecdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/tf-random-0.5-cd8809b61a1ad8da508a56288493f3a6523b34b0ebee5c1bf4003864d856bac4/libexec",
libexecsubdir
=
"",
includedir
=
"/home/michaels/.cabal/store/ghc-8.10.7/tf-random-0.5-cd8809b61a1ad8da508a56288493f3a6523b34b0ebee5c1bf4003864d856bac4/lib/include",
datadir
=
"/home/michaels/.cabal/store/ghc-8.10.7/tf-random-0.5-cd8809b61a1ad8da508a56288493f3a6523b34b0ebee5c1bf4003864d856bac4/share",
datasubdir
=
"",
docdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/tf-random-0.5-cd8809b61a1ad8da508a56288493f3a6523b34b0ebee5c1bf4003864d856bac4/share/doc",
mandir
=
"/home/michaels/.cabal/store/ghc-8.10.7/tf-random-0.5-cd8809b61a1ad8da508a56288493f3a6523b34b0ebee5c1bf4003864d856bac4/share/man",
htmldir
=
"/home/michaels/.cabal/store/ghc-8.10.7/tf-random-0.5-cd8809b61a1ad8da508a56288493f3a6523b34b0ebee5c1bf4003864d856bac4/share/doc/html",
haddockdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/tf-random-0.5-cd8809b61a1ad8da508a56288493f3a6523b34b0ebee5c1bf4003864d856bac4/share/doc/html",
sysconfdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/tf-random-0.5-cd8809b61a1ad8da508a56288493f3a6523b34b0ebee5c1bf4003864d856bac4/etc"},
elabHaddockHoogle
=
False,
elabHaddockHtml
=
False,
elabHaddockHtmlLocation
=
Nothing,
elabHaddockForeignLibs
=
False,
elabHaddockForHackage
=
ForDevelopment,
elabHaddockExecutables
=
False,
elabHaddockTestSuites
=
False,
elabHaddockBenchmarks
=
False,
elabHaddockInternal
=
False,
elabHaddockCss
=
Nothing,
elabHaddockLinkedSource
=
False,
elabHaddockQuickJump
=
False,
elabHaddockHscolourCss
=
Nothing,
elabHaddockContents
=
Nothing,
elabTestMachineLog
=
Just
"$pkgid.log",
elabTestHumanLog
=
Just
"$pkgid-$test-suite.log",
elabTestShowDetails
=
Just
Failures,
elabTestKeepTix
=
False,
elabTestWrapper
=
Nothing,
elabTestFailWhenNoTestSuites
=
False,
elabTestTestOptions
=
[],
elabBenchmarkOptions
=
[],
elabSetupScriptStyle
=
SetupNonCustomInternalLib,
elabSetupScriptCliVersion
=
mkVersion
[3,7,0,0],
elabConfigureTargets
=
[],
elabBuildTargets
=
[],
elabTestTargets
=
[],
elabBenchTargets
=
[],
elabReplTarget
=
Nothing,
elabHaddockTargets
=
[],
elabBuildHaddocks
=
False,
elabPkgOrComp
=
ElabPackage
(ElaboratedPackage
{pkgInstalledId
=
ComponentId
"tf-random-0.5-cd8809b61a1ad8da508a56288493f3a6523b34b0ebee5c1bf4003864d856bac4",
pkgLibDependencies
=
ComponentDeps
{unComponentDeps
=
fromList
[(ComponentLib,[ComponentId
"base-4.14.3.0",ComponentId
"primitive-0.7.3.0-e7272e060bbb33c881ddd90785223bdb89c5382ff66cea5affe80c2d7bc33d6c",ComponentId
"random-1.2.1-27f75c738ff56dde673ff6b8730ddcf155b7971f3e93018daa2185a2407a7278",ComponentId
"time-1.9.3"])]},
pkgDependsOnSelfLib
=
ComponentDeps
{unComponentDeps
=
fromList
[(ComponentLib,[()])]},
pkgExeDependencies
=
ComponentDeps
{unComponentDeps
=
fromList
[(ComponentLib,[])]},
pkgExeDependencyPaths
=
ComponentDeps
{unComponentDeps
=
fromList
[(ComponentLib,[])]},
pkgPkgConfigDependencies
=
[],
pkgStanzasEnabled
=
OptionalStanzaSet
0})}
ElaboratedConfiguredPackage
{elabUnitId
=
UnitId
"hspec-core-2.9.4-a4b6df4a102da64bc1df3c51d1089b813efc927f4a5c926b7c9206839d67b032",
elabComponentId
=
ComponentId
"hspec-core-2.9.4-a4b6df4a102da64bc1df3c51d1089b813efc927f4a5c926b7c9206839d67b032",
elabInstantiatedWith
=
fromList
[],
elabLinkedInstantiatedWith
=
fromList
[],
elabIsCanonical
=
True,
elabPkgSourceId
=
PackageIdentifier
{pkgName
=
PackageName
"hspec-core",
pkgVersion
=
mkVersion
[2,9,4]},
elabModuleShape
=
ModuleShape
{modShapeProvides
=
fromList
[(ModuleName
"Test.Hspec.Core.Format",OpenModule
(IndefFullUnitId
(ComponentId
"hspec-core-2.9.4-02ef0e0123488c70ad4faaa311f2580cafb0d3bf66af75767fad9b9f8ad85dc5")
(fromList
[]))
(ModuleName
"Test.Hspec.Core.Format")),(ModuleName
"Test.Hspec.Core.Formatters",OpenModule
(IndefFullUnitId
(ComponentId
"hspec-core-2.9.4-02ef0e0123488c70ad4faaa311f2580cafb0d3bf66af75767fad9b9f8ad85dc5")
(fromList
[]))
(ModuleName
"Test.Hspec.Core.Formatters")),(ModuleName
"Test.Hspec.Core.Formatters.V1",OpenModule
(IndefFullUnitId
(ComponentId
"hspec-core-2.9.4-02ef0e0123488c70ad4faaa311f2580cafb0d3bf66af75767fad9b9f8ad85dc5")
(fromList
[]))
(ModuleName
"Test.Hspec.Core.Formatters.V1")),(ModuleName
"Test.Hspec.Core.Formatters.V2",OpenModule
(IndefFullUnitId
(ComponentId
"hspec-core-2.9.4-02ef0e0123488c70ad4faaa311f2580cafb0d3bf66af75767fad9b9f8ad85dc5")
(fromList
[]))
(ModuleName
"Test.Hspec.Core.Formatters.V2")),(ModuleName
"Test.Hspec.Core.Hooks",OpenModule
(IndefFullUnitId
(ComponentId
"hspec-core-2.9.4-02ef0e0123488c70ad4faaa311f2580cafb0d3bf66af75767fad9b9f8ad85dc5")
(fromList
[]))
(ModuleName
"Test.Hspec.Core.Hooks")),(ModuleName
"Test.Hspec.Core.QuickCheck",OpenModule
(IndefFullUnitId
(ComponentId
"hspec-core-2.9.4-02ef0e0123488c70ad4faaa311f2580cafb0d3bf66af75767fad9b9f8ad85dc5")
(fromList
[]))
(ModuleName
"Test.Hspec.Core.QuickCheck")),(ModuleName
"Test.Hspec.Core.Runner",OpenModule
(IndefFullUnitId
(ComponentId
"hspec-core-2.9.4-02ef0e0123488c70ad4faaa311f2580cafb0d3bf66af75767fad9b9f8ad85dc5")
(fromList
[]))
(ModuleName
"Test.Hspec.Core.Runner")),(ModuleName
"Test.Hspec.Core.Spec",OpenModule
(IndefFullUnitId
(ComponentId
"hspec-core-2.9.4-02ef0e0123488c70ad4faaa311f2580cafb0d3bf66af75767fad9b9f8ad85dc5")
(fromList
[]))
(ModuleName
"Test.Hspec.Core.Spec")),(ModuleName
"Test.Hspec.Core.Util",OpenModule
(IndefFullUnitId
(ComponentId
"hspec-core-2.9.4-02ef0e0123488c70ad4faaa311f2580cafb0d3bf66af75767fad9b9f8ad85dc5")
(fromList
[]))
(ModuleName
"Test.Hspec.Core.Util"))],
modShapeRequires
=
fromList
[]},
elabFlagAssignment
=
fromList
[],
elabFlagDefaults
=
fromList
[],
elabPkgDescription
=
PackageDescription
{specVersion
=
CabalSpecV1_12,
package
=
PackageIdentifier
{pkgName
=
PackageName
"hspec-core",
pkgVersion
=
mkVersion
[2,9,4]},
licenseRaw
=
Right
MIT,
licenseFiles
=
[SymbolicPath
"LICENSE"],
copyright
=
"(c)
2011-2021
Simon
Hengel,\n(c)
2011-2012
Trystan
Spangler,\n(c)
2011
Greg
Weber",
maintainer
=
"Simon
Hengel
<sol@typeful.net>",
author
=
"",
stability
=
"experimental",
testedWith
=
[],
homepage
=
"http://hspec.github.io/",
pkgUrl
=
"",
bugReports
=
"https://github.com/hspec/hspec/issues",
sourceRepos
=
[SourceRepo
{repoKind
=
RepoHead,
repoType
=
Just
(KnownRepoType
Git),
repoLocation
=
Just
"https://github.com/hspec/hspec",
repoModule
=
Nothing,
repoBranch
=
Nothing,
repoTag
=
Nothing,
repoSubdir
=
Just
"hspec-core"}],
synopsis
=
"A
Testing
Framework
for
Haskell",
description
=
"This
package
exposes
internal
types
and
functions
that
can
be
used
to
extend
Hspec's
functionality.",
category
=
"Testing",
customFieldsPD
=
[],
buildTypeRaw
=
Just
Simple,
setupBuildInfo
=
Nothing,
library
=
Just
(Library
{libName
=
LMainLibName,
exposedModules
=
[ModuleName
"Test.Hspec.Core.Spec",ModuleName
"Test.Hspec.Core.Hooks",ModuleName
"Test.Hspec.Core.Runner",ModuleName
"Test.Hspec.Core.Format",ModuleName
"Test.Hspec.Core.Formatters",ModuleName
"Test.Hspec.Core.Formatters.V1",ModuleName
"Test.Hspec.Core.Formatters.V2",ModuleName
"Test.Hspec.Core.QuickCheck",ModuleName
"Test.Hspec.Core.Util"],
reexportedModules
=
[],
signatures
=
[],
libExposed
=
True,
libVisibility
=
LibraryVisibilityPublic,
libBuildInfo
=
BuildInfo
{buildable
=
True,
buildTools
=
[],
buildToolDepends
=
[],
cppOptions
=
[],
asmOptions
=
[],
cmmOptions
=
[],
ccOptions
=
[],
cxxOptions
=
[],
ldOptions
=
[],
hsc2hsOptions
=
[],
pkgconfigDepends
=
[],
frameworks
=
[],
extraFrameworkDirs
=
[],
asmSources
=
[],
cmmSources
=
[],
cSources
=
[],
cxxSources
=
[],
jsSources
=
[],
hsSourceDirs
=
[SymbolicPath
"src",SymbolicPath
"vendor"],
otherModules
=
[ModuleName
"GetOpt.Declarative",ModuleName
"GetOpt.Declarative.Environment",ModuleName
"GetOpt.Declarative.Interpret",ModuleName
"GetOpt.Declarative.Types",ModuleName
"GetOpt.Declarative.Util",ModuleName
"Test.Hspec.Core.Clock",ModuleName
"Test.Hspec.Core.Compat",ModuleName
"Test.Hspec.Core.Config",ModuleName
"Test.Hspec.Core.Config.Definition",ModuleName
"Test.Hspec.Core.Config.Options",ModuleName
"Test.Hspec.Core.Example",ModuleName
"Test.Hspec.Core.Example.Location",ModuleName
"Test.Hspec.Core.FailureReport",ModuleName
"Test.Hspec.Core.Formatters.Diff",ModuleName
"Test.Hspec.Core.Formatters.Internal",ModuleName
"Test.Hspec.Core.Formatters.Pretty",ModuleName
"Test.Hspec.Core.Formatters.Pretty.Parser",ModuleName
"Test.Hspec.Core.Formatters.Pretty.Parser.Types",ModuleName
"Test.Hspec.Core.Formatters.Pretty.Unicode",ModuleName
"Test.Hspec.Core.Formatters.V1.Free",ModuleName
"Test.Hspec.Core.Formatters.V1.Monad",ModuleName
"Test.Hspec.Core.QuickCheckUtil",ModuleName
"Test.Hspec.Core.Runner.Eval",ModuleName
"Test.Hspec.Core.Runner.PrintSlowSpecItems",ModuleName
"Test.Hspec.Core.Shuffle",ModuleName
"Test.Hspec.Core.Spec.Monad",ModuleName
"Test.Hspec.Core.Timer",ModuleName
"Test.Hspec.Core.Tree",ModuleName
"Control.Concurrent.Async",ModuleName
"Data.Algorithm.Diff",ModuleName
"Paths_hspec_core"],
virtualModules
=
[],
autogenModules
=
[],
defaultLanguage
=
Just
Haskell2010,
otherLanguages
=
[],
defaultExtensions
=
[],
otherExtensions
=
[],
oldExtensions
=
[],
extraLibs
=
[],
extraLibsStatic
=
[],
extraGHCiLibs
=
[],
extraBundledLibs
=
[],
extraLibFlavours
=
[],
extraDynLibFlavours
=
[],
extraLibDirs
=
[],
extraLibDirsStatic
=
[],
includeDirs
=
[],
includes
=
[],
autogenIncludes
=
[],
installIncludes
=
[],
options
=
PerCompilerFlavor
["-Wall","-fno-warn-incomplete-uni-patterns"]
[],
profOptions
=
PerCompilerFlavor
[]
[],
sharedOptions
=
PerCompilerFlavor
[]
[],
staticOptions
=
PerCompilerFlavor
[]
[],
customFieldsBI
=
[],
targetBuildDepends
=
[Dependency
(PackageName
"HUnit")
(IntersectVersionRanges
(OrLaterVersion
(mkVersion
[1,6]))
(EarlierVersion
(mkVersion
[1,7])))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"QuickCheck")
(OrLaterVersion
(mkVersion
[2,13,1]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"ansi-terminal")
(OrLaterVersion
(mkVersion
[0,6,2]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"array")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"base")
(IntersectVersionRanges
(OrLaterVersion
(mkVersion
[4,5,0,0]))
(EarlierVersion
(mkVersion
[5])))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"call-stack")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"clock")
(OrLaterVersion
(mkVersion
[0,7,1]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"deepseq")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"directory")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"filepath")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"ghc")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"ghc-boot-th")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"hspec-expectations")
(IntersectVersionRanges
(OrLaterVersion
(mkVersion
[0,8,2]))
(EarlierVersion
(mkVersion
[0,8,3])))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"quickcheck-io")
(OrLaterVersion
(mkVersion
[0,2,0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"random")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"setenv")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"stm")
(OrLaterVersion
(mkVersion
[2,2]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"tf-random")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"transformers")
(OrLaterVersion
(mkVersion
[0,2,2,0]))
(fromNonEmpty
(LMainLibName
:|
[]))],
mixins
=
[]}}),
subLibraries
=
[],
executables
=
[],
foreignLibs
=
[],
testSuites
=
[TestSuite
{testName
=
UnqualComponentName
"spec",
testInterface
=
TestSuiteExeV10
(mkVersion
[1,0])
"Spec.hs",
testBuildInfo
=
BuildInfo
{buildable
=
True,
buildTools
=
[],
buildToolDepends
=
[ExeDependency
(PackageName
"hspec-meta")
(UnqualComponentName
"hspec-meta-discover")
(OrLaterVersion
(mkVersion
[0]))],
cppOptions
=
["-DTEST"],
asmOptions
=
[],
cmmOptions
=
[],
ccOptions
=
[],
cxxOptions
=
[],
ldOptions
=
[],
hsc2hsOptions
=
[],
pkgconfigDepends
=
[],
frameworks
=
[],
extraFrameworkDirs
=
[],
asmSources
=
[],
cmmSources
=
[],
cSources
=
[],
cxxSources
=
[],
jsSources
=
[],
hsSourceDirs
=
[SymbolicPath
"src",SymbolicPath
"vendor",SymbolicPath
"test"],
otherModules
=
[ModuleName
"GetOpt.Declarative",ModuleName
"GetOpt.Declarative.Environment",ModuleName
"GetOpt.Declarative.Interpret",ModuleName
"GetOpt.Declarative.Types",ModuleName
"GetOpt.Declarative.Util",ModuleName
"Test.Hspec.Core.Clock",ModuleName
"Test.Hspec.Core.Compat",ModuleName
"Test.Hspec.Core.Config",ModuleName
"Test.Hspec.Core.Config.Definition",ModuleName
"Test.Hspec.Core.Config.Options",ModuleName
"Test.Hspec.Core.Example",ModuleName
"Test.Hspec.Core.Example.Location",ModuleName
"Test.Hspec.Core.FailureReport",ModuleName
"Test.Hspec.Core.Format",ModuleName
"Test.Hspec.Core.Formatters",ModuleName
"Test.Hspec.Core.Formatters.Diff",ModuleName
"Test.Hspec.Core.Formatters.Internal",ModuleName
"Test.Hspec.Core.Formatters.Pretty",ModuleName
"Test.Hspec.Core.Formatters.Pretty.Parser",ModuleName
"Test.Hspec.Core.Formatters.Pretty.Parser.Types",ModuleName
"Test.Hspec.Core.Formatters.Pretty.Unicode",ModuleName
"Test.Hspec.Core.Formatters.V1",ModuleName
"Test.Hspec.Core.Formatters.V1.Free",ModuleName
"Test.Hspec.Core.Formatters.V1.Monad",ModuleName
"Test.Hspec.Core.Formatters.V2",ModuleName
"Test.Hspec.Core.Hooks",ModuleName
"Test.Hspec.Core.QuickCheck",ModuleName
"Test.Hspec.Core.QuickCheckUtil",ModuleName
"Test.Hspec.Core.Runner",ModuleName
"Test.Hspec.Core.Runner.Eval",ModuleName
"Test.Hspec.Core.Runner.PrintSlowSpecItems",ModuleName
"Test.Hspec.Core.Shuffle",ModuleName
"Test.Hspec.Core.Spec",ModuleName
"Test.Hspec.Core.Spec.Monad",ModuleName
"Test.Hspec.Core.Timer",ModuleName
"Test.Hspec.Core.Tree",ModuleName
"Test.Hspec.Core.Util",ModuleName
"Control.Concurrent.Async",ModuleName
"Data.Algorithm.Diff",ModuleName
"All",ModuleName
"GetOpt.Declarative.EnvironmentSpec",ModuleName
"GetOpt.Declarative.UtilSpec",ModuleName
"Helper",ModuleName
"Mock",ModuleName
"Test.Hspec.Core.ClockSpec",ModuleName
"Test.Hspec.Core.CompatSpec",ModuleName
"Test.Hspec.Core.Config.DefinitionSpec",ModuleName
"Test.Hspec.Core.Config.OptionsSpec",ModuleName
"Test.Hspec.Core.ConfigSpec",ModuleName
"Test.Hspec.Core.Example.LocationSpec",ModuleName
"Test.Hspec.Core.ExampleSpec",ModuleName
"Test.Hspec.Core.FailureReportSpec",ModuleName
"Test.Hspec.Core.FormatSpec",ModuleName
"Test.Hspec.Core.Formatters.DiffSpec",ModuleName
"Test.Hspec.Core.Formatters.InternalSpec",ModuleName
"Test.Hspec.Core.Formatters.Pretty.ParserSpec",ModuleName
"Test.Hspec.Core.Formatters.Pretty.UnicodeSpec",ModuleName
"Test.Hspec.Core.Formatters.PrettySpec",ModuleName
"Test.Hspec.Core.Formatters.V1Spec",ModuleName
"Test.Hspec.Core.Formatters.V2Spec",ModuleName
"Test.Hspec.Core.HooksSpec",ModuleName
"Test.Hspec.Core.QuickCheckUtilSpec",ModuleName
"Test.Hspec.Core.Runner.EvalSpec",ModuleName
"Test.Hspec.Core.Runner.PrintSlowSpecItemsSpec",ModuleName
"Test.Hspec.Core.RunnerSpec",ModuleName
"Test.Hspec.Core.ShuffleSpec",ModuleName
"Test.Hspec.Core.SpecSpec",ModuleName
"Test.Hspec.Core.TimerSpec",ModuleName
"Test.Hspec.Core.UtilSpec",ModuleName
"Paths_hspec_core"],
virtualModules
=
[],
autogenModules
=
[],
defaultLanguage
=
Just
Haskell2010,
otherLanguages
=
[],
defaultExtensions
=
[],
otherExtensions
=
[],
oldExtensions
=
[],
extraLibs
=
[],
extraLibsStatic
=
[],
extraGHCiLibs
=
[],
extraBundledLibs
=
[],
extraLibFlavours
=
[],
extraDynLibFlavours
=
[],
extraLibDirs
=
[],
extraLibDirsStatic
=
[],
includeDirs
=
[],
includes
=
[],
autogenIncludes
=
[],
installIncludes
=
[],
options
=
PerCompilerFlavor
["-Wall","-fno-warn-incomplete-uni-patterns"]
[],
profOptions
=
PerCompilerFlavor
[]
[],
sharedOptions
=
PerCompilerFlavor
[]
[],
staticOptions
=
PerCompilerFlavor
[]
[],
customFieldsBI
=
[],
targetBuildDepends
=
[Dependency
(PackageName
"HUnit")
(IntersectVersionRanges
(OrLaterVersion
(mkVersion
[1,6]))
(EarlierVersion
(mkVersion
[1,7])))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"QuickCheck")
(OrLaterVersion
(mkVersion
[2,14]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"ansi-terminal")
(OrLaterVersion
(mkVersion
[0,6,2]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"array")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"base")
(IntersectVersionRanges
(OrLaterVersion
(mkVersion
[4,5,0,0]))
(EarlierVersion
(mkVersion
[5])))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"base-orphans")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"call-stack")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"clock")
(OrLaterVersion
(mkVersion
[0,7,1]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"deepseq")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"directory")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"filepath")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"ghc")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"ghc-boot-th")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"hspec-expectations")
(IntersectVersionRanges
(OrLaterVersion
(mkVersion
[0,8,2]))
(EarlierVersion
(mkVersion
[0,8,3])))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"hspec-meta")
(ThisVersion
(mkVersion
[2,9,3]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"process")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"quickcheck-io")
(OrLaterVersion
(mkVersion
[0,2,0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"random")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"setenv")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"silently")
(OrLaterVersion
(mkVersion
[1,2,4]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"stm")
(OrLaterVersion
(mkVersion
[2,2]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"temporary")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"tf-random")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"transformers")
(OrLaterVersion
(mkVersion
[0,2,2,0]))
(fromNonEmpty
(LMainLibName
:|
[]))],
mixins
=
[]}}],
benchmarks
=
[],
dataFiles
=
[],
dataDir
=
".",
extraSrcFiles
=
["version.yaml","help.txt"],
extraTmpFiles
=
[],
extraDocFiles
=
[]},
elabPkgSourceLocation
=
RepoTarballPackage
(RepoSecure
{repoRemote
=
RemoteRepo
{remoteRepoName
=
RepoName
"hackage.haskell.org",
remoteRepoURI
=
http://hackage.haskell.org/,
remoteRepoSecure
=
Just
True,
remoteRepoRootKeys
=
["fe331502606802feac15e514d9b9ea83fee8b6ffef71335479a2e68d84adc6b0","1ea9ba32c526d1cc91ab5e5bd364ec5e9e8cb67179a471872f6e26f0ae773d42","2c6c3627bd6c982990239487f1abd02e08a02e6cf16edb105a8012d444d870c3","0a5c7ea47cd1b15f01f5f51a33adda7e655bc0f0b0615baa8e271f4c3351e21d","51f0161b906011b52c6613376b1ae937670da69322113a246a09f807c62f6921"],
remoteRepoKeyThreshold
=
3,
remoteRepoShouldTryHttps
=
True},
repoLocalDir
=
"/home/michaels/.cabal/packages/hackage.haskell.org"})
(PackageIdentifier
{pkgName
=
PackageName
"hspec-core",
pkgVersion
=
mkVersion
[2,9,4]})
Nothing,
elabPkgSourceHash
=
Just
(HashValue
"\132\131|\"\240\136\139\183:\131\SOH\201Yb\152\v
\160Hs\175\USq\179\247\\\209\202=\DC4y."),
elabLocalToProject
=
False,
elabBuildStyle
=
BuildAndInstall,
elabEnabledSpec
=
ComponentRequestedSpec
{testsRequested
=
False,
benchmarksRequested
=
False},
elabStanzasAvailable
=
OptionalStanzaSet
0,
elabStanzasRequested
=
OptionalStanzaMap
Nothing
Nothing,
elabSetupPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db"],
elabBuildPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db"],
elabRegisterPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db"],
elabInplaceSetupPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db",SpecificPackageDB
"/home/michaels/repos/cabal/cabal-testsuite/PackageTests/Regression/T7893/dist-newstyle/packagedb/ghc-8.10.7"],
elabInplaceBuildPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db",SpecificPackageDB
"/home/michaels/repos/cabal/cabal-testsuite/PackageTests/Regression/T7893/dist-newstyle/packagedb/ghc-8.10.7"],
elabInplaceRegisterPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db",SpecificPackageDB
"/home/michaels/repos/cabal/cabal-testsuite/PackageTests/Regression/T7893/dist-newstyle/packagedb/ghc-8.10.7"],
elabPkgDescriptionOverride
=
Just
"cabal-version:
1.12\n\n--
This
file
has
been
generated
from
package.yaml
by
hpack
version
0.34.6.\n--\n--
see:
https://github.com/sol/hpack\n\nname:












hspec-core\nversion:









2.9.4\nlicense:









MIT\nlicense-file:




LICENSE\ncopyright:







(c)
2011-2021
Simon
Hengel,\n

















(c)
2011-2012
Trystan
Spangler,\n

















(c)
2011
Greg
Weber\nmaintainer:






Simon
Hengel
<sol@typeful.net>\nbuild-type:






Simple\nextra-source-files:\n



version.yaml\n



help.txt\ncategory:








Testing\nstability:







experimental\nbug-reports:





https://github.com/hspec/hspec/issues\nhomepage:








http://hspec.github.io/\nsynopsis:








A
Testing
Framework
for
Haskell\ndescription:





This
package
exposes
internal
types
and
functions
that
can
be
used
to
extend
Hspec's
functionality.\n\nsource-repository
head\n

type:
git\n

location:
https://github.com/hspec/hspec\n

subdir:
hspec-core\n\nlibrary\n

hs-source-dirs:\n





src\n





vendor\n

ghc-options:
-Wall
-fno-warn-incomplete-uni-patterns\n

build-depends:\n





HUnit
==1.6.*\n



,
QuickCheck
>=2.13.1\n



,
ansi-terminal
>=0.6.2\n



,
array\n



,
base
>=4.5.0.0
&&
<5\n



,
call-stack\n



,
clock
>=0.7.1\n



,
deepseq\n



,
directory\n



,
filepath\n



,
hspec-expectations
==0.8.2.*\n



,
quickcheck-io
>=0.2.0\n



,
random\n



,
setenv\n



,
tf-random\n



,
transformers
>=0.2.2.0\n

if
impl(ghc
>=
8.2.1)\n



build-depends:\n







ghc\n





,
ghc-boot-th\n

if
impl(ghc
>=
8.4.1)\n



build-depends:\n







stm
>=2.2\n

else\n



other-modules:\n







Control.Concurrent.STM.TMVar\n



hs-source-dirs:\n







vendor/stm-2.5.0.1/\n

exposed-modules:\n





Test.Hspec.Core.Spec\n





Test.Hspec.Core.Hooks\n





Test.Hspec.Core.Runner\n





Test.Hspec.Core.Format\n





Test.Hspec.Core.Formatters\n





Test.Hspec.Core.Formatters.V1\n





Test.Hspec.Core.Formatters.V2\n





Test.Hspec.Core.QuickCheck\n





Test.Hspec.Core.Util\n

other-modules:\n





GetOpt.Declarative\n





GetOpt.Declarative.Environment\n





GetOpt.Declarative.Interpret\n





GetOpt.Declarative.Types\n





GetOpt.Declarative.Util\n





Test.Hspec.Core.Clock\n





Test.Hspec.Core.Compat\n





Test.Hspec.Core.Config\n





Test.Hspec.Core.Config.Definition\n





Test.Hspec.Core.Config.Options\n





Test.Hspec.Core.Example\n





Test.Hspec.Core.Example.Location\n





Test.Hspec.Core.FailureReport\n





Test.Hspec.Core.Formatters.Diff\n





Test.Hspec.Core.Formatters.Internal\n





Test.Hspec.Core.Formatters.Pretty\n





Test.Hspec.Core.Formatters.Pretty.Parser\n





Test.Hspec.Core.Formatters.Pretty.Parser.Types\n





Test.Hspec.Core.Formatters.Pretty.Unicode\n





Test.Hspec.Core.Formatters.V1.Free\n





Test.Hspec.Core.Formatters.V1.Monad\n





Test.Hspec.Core.QuickCheckUtil\n





Test.Hspec.Core.Runner.Eval\n





Test.Hspec.Core.Runner.PrintSlowSpecItems\n





Test.Hspec.Core.Shuffle\n





Test.Hspec.Core.Spec.Monad\n





Test.Hspec.Core.Timer\n





Test.Hspec.Core.Tree\n





Control.Concurrent.Async\n





Data.Algorithm.Diff\n





Paths_hspec_core\n

default-language:
Haskell2010\n\ntest-suite
spec\n

type:
exitcode-stdio-1.0\n

main-is:
Spec.hs\n

hs-source-dirs:\n





src\n





vendor\n





test\n

ghc-options:
-Wall
-fno-warn-incomplete-uni-patterns\n

cpp-options:
-DTEST\n

build-depends:\n





HUnit
==1.6.*\n



,
QuickCheck
>=2.14\n



,
ansi-terminal
>=0.6.2\n



,
array\n



,
base
>=4.5.0.0
&&
<5\n



,
base-orphans\n



,
call-stack\n



,
clock
>=0.7.1\n



,
deepseq\n



,
directory\n



,
filepath\n



,
hspec-expectations
==0.8.2.*\n



,
hspec-meta
==2.9.3\n



,
process\n



,
quickcheck-io
>=0.2.0\n



,
random\n



,
setenv\n



,
silently
>=1.2.4\n



,
temporary\n



,
tf-random\n



,
transformers
>=0.2.2.0\n

if
impl(ghc
>=
8.2.1)\n



build-depends:\n







ghc\n





,
ghc-boot-th\n

if
impl(ghc
>=
8.4.1)\n



build-depends:\n







stm
>=2.2\n

else\n



other-modules:\n







Control.Concurrent.STM.TMVar\n



hs-source-dirs:\n







vendor/stm-2.5.0.1/\n

build-tool-depends:\n





hspec-meta:hspec-meta-discover\n

other-modules:\n





GetOpt.Declarative\n





GetOpt.Declarative.Environment\n





GetOpt.Declarative.Interpret\n





GetOpt.Declarative.Types\n





GetOpt.Declarative.Util\n





Test.Hspec.Core.Clock\n





Test.Hspec.Core.Compat\n





Test.Hspec.Core.Config\n





Test.Hspec.Core.Config.Definition\n





Test.Hspec.Core.Config.Options\n





Test.Hspec.Core.Example\n





Test.Hspec.Core.Example.Location\n





Test.Hspec.Core.FailureReport\n





Test.Hspec.Core.Format\n





Test.Hspec.Core.Formatters\n





Test.Hspec.Core.Formatters.Diff\n





Test.Hspec.Core.Formatters.Internal\n





Test.Hspec.Core.Formatters.Pretty\n





Test.Hspec.Core.Formatters.Pretty.Parser\n





Test.Hspec.Core.Formatters.Pretty.Parser.Types\n





Test.Hspec.Core.Formatters.Pretty.Unicode\n





Test.Hspec.Core.Formatters.V1\n





Test.Hspec.Core.Formatters.V1.Free\n





Test.Hspec.Core.Formatters.V1.Monad\n





Test.Hspec.Core.Formatters.V2\n





Test.Hspec.Core.Hooks\n





Test.Hspec.Core.QuickCheck\n





Test.Hspec.Core.QuickCheckUtil\n





Test.Hspec.Core.Runner\n





Test.Hspec.Core.Runner.Eval\n





Test.Hspec.Core.Runner.PrintSlowSpecItems\n





Test.Hspec.Core.Shuffle\n





Test.Hspec.Core.Spec\n





Test.Hspec.Core.Spec.Monad\n





Test.Hspec.Core.Timer\n





Test.Hspec.Core.Tree\n





Test.Hspec.Core.Util\n





Control.Concurrent.Async\n





Data.Algorithm.Diff\n





All\n





GetOpt.Declarative.EnvironmentSpec\n





GetOpt.Declarative.UtilSpec\n





Helper\n





Mock\n





Test.Hspec.Core.ClockSpec\n





Test.Hspec.Core.CompatSpec\n





Test.Hspec.Core.Config.DefinitionSpec\n





Test.Hspec.Core.Config.OptionsSpec\n





Test.Hspec.Core.ConfigSpec\n





Test.Hspec.Core.Example.LocationSpec\n





Test.Hspec.Core.ExampleSpec\n





Test.Hspec.Core.FailureReportSpec\n





Test.Hspec.Core.FormatSpec\n





Test.Hspec.Core.Formatters.DiffSpec\n





Test.Hspec.Core.Formatters.InternalSpec\n





Test.Hspec.Core.Formatters.Pretty.ParserSpec\n





Test.Hspec.Core.Formatters.Pretty.UnicodeSpec\n





Test.Hspec.Core.Formatters.PrettySpec\n





Test.Hspec.Core.Formatters.V1Spec\n





Test.Hspec.Core.Formatters.V2Spec\n





Test.Hspec.Core.HooksSpec\n





Test.Hspec.Core.QuickCheckUtilSpec\n





Test.Hspec.Core.Runner.EvalSpec\n





Test.Hspec.Core.Runner.PrintSlowSpecItemsSpec\n





Test.Hspec.Core.RunnerSpec\n





Test.Hspec.Core.ShuffleSpec\n





Test.Hspec.Core.SpecSpec\n





Test.Hspec.Core.TimerSpec\n





Test.Hspec.Core.UtilSpec\n





Paths_hspec_core\n

default-language:
Haskell2010\n",
elabVanillaLib
=
True,
elabSharedLib
=
True,
elabStaticLib
=
False,
elabDynExe
=
False,
elabFullyStaticExe
=
False,
elabGHCiLib
=
False,
elabProfLib
=
False,
elabProfExe
=
False,
elabProfLibDetail
=
ProfDetailDefault,
elabProfExeDetail
=
ProfDetailDefault,
elabCoverage
=
False,
elabOptimization
=
NormalOptimisation,
elabSplitObjs
=
False,
elabSplitSections
=
False,
elabStripLibs
=
False,
elabStripExes
=
False,
elabDebugInfo
=
NoDebugInfo,
elabDumpBuildInfo
=
NoDumpBuildInfo,
elabProgramPaths
=
fromList
[("ghc","/nix/store/lrwichshmxvlqnbbym9yg4bxqsrvc88j-ghc-8.10.7/bin/ghc"),("ghc-pkg","/nix/store/lrwichshmxvlqnbbym9yg4bxqsrvc88j-ghc-8.10.7/bin/ghc-pkg-8.10.7")],
elabProgramArgs
=
fromList
[],
elabProgramPathExtra
=
["/home/michaels/.cabal/bin"],
elabConfigureScriptArgs
=
[],
elabExtraLibDirs
=
[],
elabExtraLibDirsStatic
=
[],
elabExtraFrameworkDirs
=
[],
elabExtraIncludeDirs
=
[],
elabProgPrefix
=
Nothing,
elabProgSuffix
=
Nothing,
elabInstallDirs
=
InstallDirs
{prefix
=
"/home/michaels/.cabal/store/ghc-8.10.7/hspec-core-2.9.4-a4b6df4a102da64bc1df3c51d1089b813efc927f4a5c926b7c9206839d67b032",
bindir
=
"/home/michaels/.cabal/store/ghc-8.10.7/hspec-core-2.9.4-a4b6df4a102da64bc1df3c51d1089b813efc927f4a5c926b7c9206839d67b032/bin",
libdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/hspec-core-2.9.4-a4b6df4a102da64bc1df3c51d1089b813efc927f4a5c926b7c9206839d67b032/lib",
libsubdir
=
"",
dynlibdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/hspec-core-2.9.4-a4b6df4a102da64bc1df3c51d1089b813efc927f4a5c926b7c9206839d67b032/lib",
flibdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/hspec-core-2.9.4-a4b6df4a102da64bc1df3c51d1089b813efc927f4a5c926b7c9206839d67b032/lib",
libexecdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/hspec-core-2.9.4-a4b6df4a102da64bc1df3c51d1089b813efc927f4a5c926b7c9206839d67b032/libexec",
libexecsubdir
=
"",
includedir
=
"/home/michaels/.cabal/store/ghc-8.10.7/hspec-core-2.9.4-a4b6df4a102da64bc1df3c51d1089b813efc927f4a5c926b7c9206839d67b032/lib/include",
datadir
=
"/home/michaels/.cabal/store/ghc-8.10.7/hspec-core-2.9.4-a4b6df4a102da64bc1df3c51d1089b813efc927f4a5c926b7c9206839d67b032/share",
datasubdir
=
"",
docdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/hspec-core-2.9.4-a4b6df4a102da64bc1df3c51d1089b813efc927f4a5c926b7c9206839d67b032/share/doc",
mandir
=
"/home/michaels/.cabal/store/ghc-8.10.7/hspec-core-2.9.4-a4b6df4a102da64bc1df3c51d1089b813efc927f4a5c926b7c9206839d67b032/share/man",
htmldir
=
"/home/michaels/.cabal/store/ghc-8.10.7/hspec-core-2.9.4-a4b6df4a102da64bc1df3c51d1089b813efc927f4a5c926b7c9206839d67b032/share/doc/html",
haddockdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/hspec-core-2.9.4-a4b6df4a102da64bc1df3c51d1089b813efc927f4a5c926b7c9206839d67b032/share/doc/html",
sysconfdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/hspec-core-2.9.4-a4b6df4a102da64bc1df3c51d1089b813efc927f4a5c926b7c9206839d67b032/etc"},
elabHaddockHoogle
=
False,
elabHaddockHtml
=
False,
elabHaddockHtmlLocation
=
Nothing,
elabHaddockForeignLibs
=
False,
elabHaddockForHackage
=
ForDevelopment,
elabHaddockExecutables
=
False,
elabHaddockTestSuites
=
False,
elabHaddockBenchmarks
=
False,
elabHaddockInternal
=
False,
elabHaddockCss
=
Nothing,
elabHaddockLinkedSource
=
False,
elabHaddockQuickJump
=
False,
elabHaddockHscolourCss
=
Nothing,
elabHaddockContents
=
Nothing,
elabTestMachineLog
=
Just
"$pkgid.log",
elabTestHumanLog
=
Just
"$pkgid-$test-suite.log",
elabTestShowDetails
=
Just
Failures,
elabTestKeepTix
=
False,
elabTestWrapper
=
Nothing,
elabTestFailWhenNoTestSuites
=
False,
elabTestTestOptions
=
[],
elabBenchmarkOptions
=
[],
elabSetupScriptStyle
=
SetupNonCustomInternalLib,
elabSetupScriptCliVersion
=
mkVersion
[3,7,0,0],
elabConfigureTargets
=
[],
elabBuildTargets
=
[],
elabTestTargets
=
[],
elabBenchTargets
=
[],
elabReplTarget
=
Nothing,
elabHaddockTargets
=
[],
elabBuildHaddocks
=
False,
elabPkgOrComp
=
ElabPackage
(ElaboratedPackage
{pkgInstalledId
=
ComponentId
"hspec-core-2.9.4-a4b6df4a102da64bc1df3c51d1089b813efc927f4a5c926b7c9206839d67b032",
pkgLibDependencies
=
ComponentDeps
{unComponentDeps
=
fromList
[(ComponentLib,[ComponentId
"HUnit-1.6.2.0-b2b2674ec87a7c61b7fa473d0252e2cfb0d432bf08667e1be5fe2f2320acc1c9",ComponentId
"QuickCheck-2.14.2-6467e0fb8e4c059a4b4a73f2bd7b7056d024e00a5bfbdcc6e27253b020fc4af3",ComponentId
"ansi-terminal-0.11.1-ccdc4a91bdd57ce2ec2452be889b1dd5d622f8d41443cdfccb02b094dc23dba3",ComponentId
"array-0.5.4.0",ComponentId
"base-4.14.3.0",ComponentId
"call-stack-0.4.0-f11e257c261917655af9abd68f4615a74d2e5e33c9a7c093558f78d94ffb5166",ComponentId
"clock-0.8.2-bad1a52c8edcc778b58bea7d979a4dad7d64bef55e047512de6b0a2c5b64dcf3",ComponentId
"deepseq-1.4.4.0",ComponentId
"directory-1.3.6.0",ComponentId
"filepath-1.4.2.1",ComponentId
"ghc-8.10.7",ComponentId
"ghc-boot-th-8.10.7",ComponentId
"hspec-expectations-0.8.2-c8aba5312eea257134f10ea7aad0a0fcd091fffbc14c4da551072b2fa727e86e",ComponentId
"quickcheck-io-0.2.0-e8a92f5e175b4decd0294e72dce91c0adad46069f81db299bdebc3b566e550ec",ComponentId
"random-1.2.1-27f75c738ff56dde673ff6b8730ddcf155b7971f3e93018daa2185a2407a7278",ComponentId
"setenv-0.1.1.3-d1fd3b5f229df08f0097e8e4849ce67ab229678abf3d63267e574da8b30191dc",ComponentId
"stm-2.5.0.1",ComponentId
"tf-random-0.5-cd8809b61a1ad8da508a56288493f3a6523b34b0ebee5c1bf4003864d856bac4",ComponentId
"transformers-0.5.6.2"])]},
pkgDependsOnSelfLib
=
ComponentDeps
{unComponentDeps
=
fromList
[(ComponentLib,[()])]},
pkgExeDependencies
=
ComponentDeps
{unComponentDeps
=
fromList
[(ComponentLib,[])]},
pkgExeDependencyPaths
=
ComponentDeps
{unComponentDeps
=
fromList
[(ComponentLib,[])]},
pkgPkgConfigDependencies
=
[],
pkgStanzasEnabled
=
OptionalStanzaSet
0})}
ElaboratedConfiguredPackage
{elabUnitId
=
UnitId
"hspec-discover-2.9.4-0184a03e32400e6cc95459e46c2b4ea40472c74e152f031bba568df8b8e66c04",
elabComponentId
=
ComponentId
"hspec-discover-2.9.4-0184a03e32400e6cc95459e46c2b4ea40472c74e152f031bba568df8b8e66c04",
elabInstantiatedWith
=
fromList
[],
elabLinkedInstantiatedWith
=
fromList
[],
elabIsCanonical
=
True,
elabPkgSourceId
=
PackageIdentifier
{pkgName
=
PackageName
"hspec-discover",
pkgVersion
=
mkVersion
[2,9,4]},
elabModuleShape
=
ModuleShape
{modShapeProvides
=
fromList
[(ModuleName
"Test.Hspec.Discover.Config",OpenModule
(IndefFullUnitId
(ComponentId
"hspec-discover-2.9.4-8faeea536201c08303a68940464e15d24c8a6572528359d203967557cbec6398")
(fromList
[]))
(ModuleName
"Test.Hspec.Discover.Config")),(ModuleName
"Test.Hspec.Discover.Run",OpenModule
(IndefFullUnitId
(ComponentId
"hspec-discover-2.9.4-8faeea536201c08303a68940464e15d24c8a6572528359d203967557cbec6398")
(fromList
[]))
(ModuleName
"Test.Hspec.Discover.Run")),(ModuleName
"Test.Hspec.Discover.Sort",OpenModule
(IndefFullUnitId
(ComponentId
"hspec-discover-2.9.4-8faeea536201c08303a68940464e15d24c8a6572528359d203967557cbec6398")
(fromList
[]))
(ModuleName
"Test.Hspec.Discover.Sort"))],
modShapeRequires
=
fromList
[]},
elabFlagAssignment
=
fromList
[],
elabFlagDefaults
=
fromList
[],
elabPkgDescription
=
PackageDescription
{specVersion
=
CabalSpecV1_12,
package
=
PackageIdentifier
{pkgName
=
PackageName
"hspec-discover",
pkgVersion
=
mkVersion
[2,9,4]},
licenseRaw
=
Right
MIT,
licenseFiles
=
[SymbolicPath
"LICENSE"],
copyright
=
"(c)
2012-2021
Simon
Hengel",
maintainer
=
"Simon
Hengel
<sol@typeful.net>",
author
=
"Simon
Hengel
<sol@typeful.net>",
stability
=
"experimental",
testedWith
=
[],
homepage
=
"http://hspec.github.io/",
pkgUrl
=
"",
bugReports
=
"https://github.com/hspec/hspec/issues",
sourceRepos
=
[SourceRepo
{repoKind
=
RepoHead,
repoType
=
Just
(KnownRepoType
Git),
repoLocation
=
Just
"https://github.com/hspec/hspec",
repoModule
=
Nothing,
repoBranch
=
Nothing,
repoTag
=
Nothing,
repoSubdir
=
Just
"hspec-discover"}],
synopsis
=
"Automatically
discover
and
run
Hspec
tests",
description
=
"Automatically
discover
and
run
Hspec
tests\n\n<http://hspec.github.io/hspec-discover.html>",
category
=
"Testing",
customFieldsPD
=
[],
buildTypeRaw
=
Just
Simple,
setupBuildInfo
=
Nothing,
library
=
Just
(Library
{libName
=
LMainLibName,
exposedModules
=
[ModuleName
"Test.Hspec.Discover.Config",ModuleName
"Test.Hspec.Discover.Run",ModuleName
"Test.Hspec.Discover.Sort"],
reexportedModules
=
[],
signatures
=
[],
libExposed
=
False,
libVisibility
=
LibraryVisibilityPublic,
libBuildInfo
=
BuildInfo
{buildable
=
True,
buildTools
=
[],
buildToolDepends
=
[],
cppOptions
=
[],
asmOptions
=
[],
cmmOptions
=
[],
ccOptions
=
[],
cxxOptions
=
[],
ldOptions
=
[],
hsc2hsOptions
=
[],
pkgconfigDepends
=
[],
frameworks
=
[],
extraFrameworkDirs
=
[],
asmSources
=
[],
cmmSources
=
[],
cSources
=
[],
cxxSources
=
[],
jsSources
=
[],
hsSourceDirs
=
[SymbolicPath
"src"],
otherModules
=
[ModuleName
"Paths_hspec_discover"],
virtualModules
=
[],
autogenModules
=
[],
defaultLanguage
=
Just
Haskell2010,
otherLanguages
=
[],
defaultExtensions
=
[],
otherExtensions
=
[],
oldExtensions
=
[],
extraLibs
=
[],
extraLibsStatic
=
[],
extraGHCiLibs
=
[],
extraBundledLibs
=
[],
extraLibFlavours
=
[],
extraDynLibFlavours
=
[],
extraLibDirs
=
[],
extraLibDirsStatic
=
[],
includeDirs
=
[],
includes
=
[],
autogenIncludes
=
[],
installIncludes
=
[],
options
=
PerCompilerFlavor
["-Wall","-fno-warn-incomplete-uni-patterns"]
[],
profOptions
=
PerCompilerFlavor
[]
[],
sharedOptions
=
PerCompilerFlavor
[]
[],
staticOptions
=
PerCompilerFlavor
[]
[],
customFieldsBI
=
[],
targetBuildDepends
=
[Dependency
(PackageName
"base")
(IntersectVersionRanges
(OrLaterVersion
(mkVersion
[4,5,0,0]))
(EarlierVersion
(mkVersion
[5])))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"directory")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"filepath")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[]))],
mixins
=
[]}}),
subLibraries
=
[],
executables
=
[Executable
{exeName
=
UnqualComponentName
"hspec-discover",
modulePath
=
"hspec-discover.hs",
exeScope
=
ExecutablePublic,
buildInfo
=
BuildInfo
{buildable
=
True,
buildTools
=
[],
buildToolDepends
=
[],
cppOptions
=
[],
asmOptions
=
[],
cmmOptions
=
[],
ccOptions
=
[],
cxxOptions
=
[],
ldOptions
=
[],
hsc2hsOptions
=
[],
pkgconfigDepends
=
[],
frameworks
=
[],
extraFrameworkDirs
=
[],
asmSources
=
[],
cmmSources
=
[],
cSources
=
[],
cxxSources
=
[],
jsSources
=
[],
hsSourceDirs
=
[SymbolicPath
"driver"],
otherModules
=
[ModuleName
"Paths_hspec_discover"],
virtualModules
=
[],
autogenModules
=
[],
defaultLanguage
=
Just
Haskell2010,
otherLanguages
=
[],
defaultExtensions
=
[],
otherExtensions
=
[],
oldExtensions
=
[],
extraLibs
=
[],
extraLibsStatic
=
[],
extraGHCiLibs
=
[],
extraBundledLibs
=
[],
extraLibFlavours
=
[],
extraDynLibFlavours
=
[],
extraLibDirs
=
[],
extraLibDirsStatic
=
[],
includeDirs
=
[],
includes
=
[],
autogenIncludes
=
[],
installIncludes
=
[],
options
=
PerCompilerFlavor
["-Wall","-fno-warn-incomplete-uni-patterns"]
[],
profOptions
=
PerCompilerFlavor
[]
[],
sharedOptions
=
PerCompilerFlavor
[]
[],
staticOptions
=
PerCompilerFlavor
[]
[],
customFieldsBI
=
[],
targetBuildDepends
=
[Dependency
(PackageName
"base")
(IntersectVersionRanges
(OrLaterVersion
(mkVersion
[4,5,0,0]))
(EarlierVersion
(mkVersion
[5])))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"directory")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"filepath")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"hspec-discover")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[]))],
mixins
=
[]}}],
foreignLibs
=
[],
testSuites
=
[TestSuite
{testName
=
UnqualComponentName
"spec",
testInterface
=
TestSuiteExeV10
(mkVersion
[1,0])
"Spec.hs",
testBuildInfo
=
BuildInfo
{buildable
=
True,
buildTools
=
[],
buildToolDepends
=
[ExeDependency
(PackageName
"hspec-meta")
(UnqualComponentName
"hspec-meta-discover")
(OrLaterVersion
(mkVersion
[0]))],
cppOptions
=
[],
asmOptions
=
[],
cmmOptions
=
[],
ccOptions
=
[],
cxxOptions
=
[],
ldOptions
=
[],
hsc2hsOptions
=
[],
pkgconfigDepends
=
[],
frameworks
=
[],
extraFrameworkDirs
=
[],
asmSources
=
[],
cmmSources
=
[],
cSources
=
[],
cxxSources
=
[],
jsSources
=
[],
hsSourceDirs
=
[SymbolicPath
"test"],
otherModules
=
[ModuleName
"Helper",ModuleName
"Test.Hspec.Discover.ConfigSpec",ModuleName
"Test.Hspec.Discover.RunSpec",ModuleName
"Test.Hspec.Discover.SortSpec",ModuleName
"Paths_hspec_discover"],
virtualModules
=
[],
autogenModules
=
[],
defaultLanguage
=
Just
Haskell2010,
otherLanguages
=
[],
defaultExtensions
=
[],
otherExtensions
=
[],
oldExtensions
=
[],
extraLibs
=
[],
extraLibsStatic
=
[],
extraGHCiLibs
=
[],
extraBundledLibs
=
[],
extraLibFlavours
=
[],
extraDynLibFlavours
=
[],
extraLibDirs
=
[],
extraLibDirsStatic
=
[],
includeDirs
=
[],
includes
=
[],
autogenIncludes
=
[],
installIncludes
=
[],
options
=
PerCompilerFlavor
["-Wall","-fno-warn-incomplete-uni-patterns"]
[],
profOptions
=
PerCompilerFlavor
[]
[],
sharedOptions
=
PerCompilerFlavor
[]
[],
staticOptions
=
PerCompilerFlavor
[]
[],
customFieldsBI
=
[],
targetBuildDepends
=
[Dependency
(PackageName
"QuickCheck")
(OrLaterVersion
(mkVersion
[2,7]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"base")
(IntersectVersionRanges
(OrLaterVersion
(mkVersion
[4,5,0,0]))
(EarlierVersion
(mkVersion
[5])))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"directory")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"filepath")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"hspec-discover")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"hspec-meta")
(ThisVersion
(mkVersion
[2,9,3]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"mockery")
(OrLaterVersion
(mkVersion
[0,3,5]))
(fromNonEmpty
(LMainLibName
:|
[]))],
mixins
=
[]}}],
benchmarks
=
[],
dataFiles
=
[],
dataDir
=
".",
extraSrcFiles
=
["version.yaml"],
extraTmpFiles
=
[],
extraDocFiles
=
[]},
elabPkgSourceLocation
=
RepoTarballPackage
(RepoSecure
{repoRemote
=
RemoteRepo
{remoteRepoName
=
RepoName
"hackage.haskell.org",
remoteRepoURI
=
http://hackage.haskell.org/,
remoteRepoSecure
=
Just
True,
remoteRepoRootKeys
=
["fe331502606802feac15e514d9b9ea83fee8b6ffef71335479a2e68d84adc6b0","1ea9ba32c526d1cc91ab5e5bd364ec5e9e8cb67179a471872f6e26f0ae773d42","2c6c3627bd6c982990239487f1abd02e08a02e6cf16edb105a8012d444d870c3","0a5c7ea47cd1b15f01f5f51a33adda7e655bc0f0b0615baa8e271f4c3351e21d","51f0161b906011b52c6613376b1ae937670da69322113a246a09f807c62f6921"],
remoteRepoKeyThreshold
=
3,
remoteRepoShouldTryHttps
=
True},
repoLocalDir
=
"/home/michaels/.cabal/packages/hackage.haskell.org"})
(PackageIdentifier
{pkgName
=
PackageName
"hspec-discover",
pkgVersion
=
mkVersion
[2,9,4]})
Nothing,
elabPkgSourceHash
=
Just
(HashValue
"\219.\135K\170\233\169\n\149s\EOT\164t\171\128Y\132\STX4\EOT\201\v\DC2x\159v-1\156\249\195\155"),
elabLocalToProject
=
False,
elabBuildStyle
=
BuildAndInstall,
elabEnabledSpec
=
ComponentRequestedSpec
{testsRequested
=
False,
benchmarksRequested
=
False},
elabStanzasAvailable
=
OptionalStanzaSet
0,
elabStanzasRequested
=
OptionalStanzaMap
Nothing
Nothing,
elabSetupPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db"],
elabBuildPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db"],
elabRegisterPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db"],
elabInplaceSetupPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db",SpecificPackageDB
"/home/michaels/repos/cabal/cabal-testsuite/PackageTests/Regression/T7893/dist-newstyle/packagedb/ghc-8.10.7"],
elabInplaceBuildPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db",SpecificPackageDB
"/home/michaels/repos/cabal/cabal-testsuite/PackageTests/Regression/T7893/dist-newstyle/packagedb/ghc-8.10.7"],
elabInplaceRegisterPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db",SpecificPackageDB
"/home/michaels/repos/cabal/cabal-testsuite/PackageTests/Regression/T7893/dist-newstyle/packagedb/ghc-8.10.7"],
elabPkgDescriptionOverride
=
Just
"cabal-version:
1.12\n\n--
This
file
has
been
generated
from
package.yaml
by
hpack
version
0.34.6.\n--\n--
see:
https://github.com/sol/hpack\n\nname:












hspec-discover\nversion:









2.9.4\nlicense:









MIT\nlicense-file:




LICENSE\ncopyright:







(c)
2012-2021
Simon
Hengel\nauthor:










Simon
Hengel
<sol@typeful.net>\nmaintainer:






Simon
Hengel
<sol@typeful.net>\nbuild-type:






Simple\ncategory:








Testing\nstability:







experimental\nbug-reports:





https://github.com/hspec/hspec/issues\nhomepage:








http://hspec.github.io/\nsynopsis:








Automatically
discover
and
run
Hspec
tests\ndescription:





Automatically
discover
and
run
Hspec
tests\n

















.\n

















<http://hspec.github.io/hspec-discover.html>\nextra-source-files:\n



version.yaml\n\nsource-repository
head\n

type:
git\n

location:
https://github.com/hspec/hspec\n

subdir:
hspec-discover\n\nlibrary\n

hs-source-dirs:\n





src\n

ghc-options:
-Wall
-fno-warn-incomplete-uni-patterns\n

build-depends:\n





base
>=4.5.0.0
&&
<5\n



,
directory\n



,
filepath\n

exposed:
False\n

exposed-modules:\n





Test.Hspec.Discover.Config\n





Test.Hspec.Discover.Run\n





Test.Hspec.Discover.Sort\n

other-modules:\n





Paths_hspec_discover\n

default-language:
Haskell2010\n\nexecutable
hspec-discover\n

ghc-options:
-Wall
-fno-warn-incomplete-uni-patterns\n

hs-source-dirs:\n





driver\n

main-is:
hspec-discover.hs\n

build-depends:\n





base
>=4.5.0.0
&&
<5\n



,
directory\n



,
filepath\n



,
hspec-discover\n

other-modules:\n





Paths_hspec_discover\n

default-language:
Haskell2010\n\ntest-suite
spec\n

type:
exitcode-stdio-1.0\n

ghc-options:
-Wall
-fno-warn-incomplete-uni-patterns\n

hs-source-dirs:\n





test\n

main-is:
Spec.hs\n

other-modules:\n





Helper\n





Test.Hspec.Discover.ConfigSpec\n





Test.Hspec.Discover.RunSpec\n





Test.Hspec.Discover.SortSpec\n





Paths_hspec_discover\n

build-depends:\n





QuickCheck
>=2.7\n



,
base
>=4.5.0.0
&&
<5\n



,
directory\n



,
filepath\n



,
hspec-discover\n



,
hspec-meta
==2.9.3\n



,
mockery
>=0.3.5\n

build-tool-depends:\n





hspec-meta:hspec-meta-discover\n

default-language:
Haskell2010\n",
elabVanillaLib
=
True,
elabSharedLib
=
True,
elabStaticLib
=
False,
elabDynExe
=
False,
elabFullyStaticExe
=
False,
elabGHCiLib
=
False,
elabProfLib
=
False,
elabProfExe
=
False,
elabProfLibDetail
=
ProfDetailDefault,
elabProfExeDetail
=
ProfDetailDefault,
elabCoverage
=
False,
elabOptimization
=
NormalOptimisation,
elabSplitObjs
=
False,
elabSplitSections
=
False,
elabStripLibs
=
False,
elabStripExes
=
False,
elabDebugInfo
=
NoDebugInfo,
elabDumpBuildInfo
=
NoDumpBuildInfo,
elabProgramPaths
=
fromList
[("ghc","/nix/store/lrwichshmxvlqnbbym9yg4bxqsrvc88j-ghc-8.10.7/bin/ghc"),("ghc-pkg","/nix/store/lrwichshmxvlqnbbym9yg4bxqsrvc88j-ghc-8.10.7/bin/ghc-pkg-8.10.7")],
elabProgramArgs
=
fromList
[],
elabProgramPathExtra
=
["/home/michaels/.cabal/bin"],
elabConfigureScriptArgs
=
[],
elabExtraLibDirs
=
[],
elabExtraLibDirsStatic
=
[],
elabExtraFrameworkDirs
=
[],
elabExtraIncludeDirs
=
[],
elabProgPrefix
=
Nothing,
elabProgSuffix
=
Nothing,
elabInstallDirs
=
InstallDirs
{prefix
=
"/home/michaels/.cabal/store/ghc-8.10.7/hspec-discover-2.9.4-0184a03e32400e6cc95459e46c2b4ea40472c74e152f031bba568df8b8e66c04",
bindir
=
"/home/michaels/.cabal/store/ghc-8.10.7/hspec-discover-2.9.4-0184a03e32400e6cc95459e46c2b4ea40472c74e152f031bba568df8b8e66c04/bin",
libdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/hspec-discover-2.9.4-0184a03e32400e6cc95459e46c2b4ea40472c74e152f031bba568df8b8e66c04/lib",
libsubdir
=
"",
dynlibdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/hspec-discover-2.9.4-0184a03e32400e6cc95459e46c2b4ea40472c74e152f031bba568df8b8e66c04/lib",
flibdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/hspec-discover-2.9.4-0184a03e32400e6cc95459e46c2b4ea40472c74e152f031bba568df8b8e66c04/lib",
libexecdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/hspec-discover-2.9.4-0184a03e32400e6cc95459e46c2b4ea40472c74e152f031bba568df8b8e66c04/libexec",
libexecsubdir
=
"",
includedir
=
"/home/michaels/.cabal/store/ghc-8.10.7/hspec-discover-2.9.4-0184a03e32400e6cc95459e46c2b4ea40472c74e152f031bba568df8b8e66c04/lib/include",
datadir
=
"/home/michaels/.cabal/store/ghc-8.10.7/hspec-discover-2.9.4-0184a03e32400e6cc95459e46c2b4ea40472c74e152f031bba568df8b8e66c04/share",
datasubdir
=
"",
docdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/hspec-discover-2.9.4-0184a03e32400e6cc95459e46c2b4ea40472c74e152f031bba568df8b8e66c04/share/doc",
mandir
=
"/home/michaels/.cabal/store/ghc-8.10.7/hspec-discover-2.9.4-0184a03e32400e6cc95459e46c2b4ea40472c74e152f031bba568df8b8e66c04/share/man",
htmldir
=
"/home/michaels/.cabal/store/ghc-8.10.7/hspec-discover-2.9.4-0184a03e32400e6cc95459e46c2b4ea40472c74e152f031bba568df8b8e66c04/share/doc/html",
haddockdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/hspec-discover-2.9.4-0184a03e32400e6cc95459e46c2b4ea40472c74e152f031bba568df8b8e66c04/share/doc/html",
sysconfdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/hspec-discover-2.9.4-0184a03e32400e6cc95459e46c2b4ea40472c74e152f031bba568df8b8e66c04/etc"},
elabHaddockHoogle
=
False,
elabHaddockHtml
=
False,
elabHaddockHtmlLocation
=
Nothing,
elabHaddockForeignLibs
=
False,
elabHaddockForHackage
=
ForDevelopment,
elabHaddockExecutables
=
False,
elabHaddockTestSuites
=
False,
elabHaddockBenchmarks
=
False,
elabHaddockInternal
=
False,
elabHaddockCss
=
Nothing,
elabHaddockLinkedSource
=
False,
elabHaddockQuickJump
=
False,
elabHaddockHscolourCss
=
Nothing,
elabHaddockContents
=
Nothing,
elabTestMachineLog
=
Just
"$pkgid.log",
elabTestHumanLog
=
Just
"$pkgid-$test-suite.log",
elabTestShowDetails
=
Just
Failures,
elabTestKeepTix
=
False,
elabTestWrapper
=
Nothing,
elabTestFailWhenNoTestSuites
=
False,
elabTestTestOptions
=
[],
elabBenchmarkOptions
=
[],
elabSetupScriptStyle
=
SetupNonCustomInternalLib,
elabSetupScriptCliVersion
=
mkVersion
[3,7,0,0],
elabConfigureTargets
=
[],
elabBuildTargets
=
[],
elabTestTargets
=
[],
elabBenchTargets
=
[],
elabReplTarget
=
Nothing,
elabHaddockTargets
=
[],
elabBuildHaddocks
=
False,
elabPkgOrComp
=
ElabPackage
(ElaboratedPackage
{pkgInstalledId
=
ComponentId
"hspec-discover-2.9.4-0184a03e32400e6cc95459e46c2b4ea40472c74e152f031bba568df8b8e66c04",
pkgLibDependencies
=
ComponentDeps
{unComponentDeps
=
fromList
[(ComponentLib,[ComponentId
"base-4.14.3.0",ComponentId
"directory-1.3.6.0",ComponentId
"filepath-1.4.2.1"]),(ComponentExe
(UnqualComponentName
"hspec-discover"),[ComponentId
"base-4.14.3.0",ComponentId
"directory-1.3.6.0",ComponentId
"filepath-1.4.2.1"])]},
pkgDependsOnSelfLib
=
ComponentDeps
{unComponentDeps
=
fromList
[(ComponentLib,[()]),(ComponentExe
(UnqualComponentName
"hspec-discover"),[()])]},
pkgExeDependencies
=
ComponentDeps
{unComponentDeps
=
fromList
[(ComponentLib,[]),(ComponentExe
(UnqualComponentName
"hspec-discover"),[])]},
pkgExeDependencyPaths
=
ComponentDeps
{unComponentDeps
=
fromList
[(ComponentLib,[]),(ComponentExe
(UnqualComponentName
"hspec-discover"),[])]},
pkgPkgConfigDependencies
=
[],
pkgStanzasEnabled
=
OptionalStanzaSet
0})}
ElaboratedConfiguredPackage
{elabUnitId
=
UnitId
"hspec-2.9.4-ec42a9365cc6b62ab362bfac04cd2b6e3a44b7d4db75006359f9814cb75e1a6a",
elabComponentId
=
ComponentId
"hspec-2.9.4-ec42a9365cc6b62ab362bfac04cd2b6e3a44b7d4db75006359f9814cb75e1a6a",
elabInstantiatedWith
=
fromList
[],
elabLinkedInstantiatedWith
=
fromList
[],
elabIsCanonical
=
True,
elabPkgSourceId
=
PackageIdentifier
{pkgName
=
PackageName
"hspec",
pkgVersion
=
mkVersion
[2,9,4]},
elabModuleShape
=
ModuleShape
{modShapeProvides
=
fromList
[(ModuleName
"Test.Hspec",OpenModule
(IndefFullUnitId
(ComponentId
"hspec-2.9.4-9f139e372ad387ff86e72e44dac6ce56f89e4eb10fa60c1f993afe8f4a91c2ea")
(fromList
[]))
(ModuleName
"Test.Hspec")),(ModuleName
"Test.Hspec.Discover",OpenModule
(IndefFullUnitId
(ComponentId
"hspec-2.9.4-9f139e372ad387ff86e72e44dac6ce56f89e4eb10fa60c1f993afe8f4a91c2ea")
(fromList
[]))
(ModuleName
"Test.Hspec.Discover")),(ModuleName
"Test.Hspec.Formatters",OpenModule
(IndefFullUnitId
(ComponentId
"hspec-2.9.4-9f139e372ad387ff86e72e44dac6ce56f89e4eb10fa60c1f993afe8f4a91c2ea")
(fromList
[]))
(ModuleName
"Test.Hspec.Formatters")),(ModuleName
"Test.Hspec.QuickCheck",OpenModule
(IndefFullUnitId
(ComponentId
"hspec-2.9.4-9f139e372ad387ff86e72e44dac6ce56f89e4eb10fa60c1f993afe8f4a91c2ea")
(fromList
[]))
(ModuleName
"Test.Hspec.QuickCheck")),(ModuleName
"Test.Hspec.Runner",OpenModule
(IndefFullUnitId
(ComponentId
"hspec-2.9.4-9f139e372ad387ff86e72e44dac6ce56f89e4eb10fa60c1f993afe8f4a91c2ea")
(fromList
[]))
(ModuleName
"Test.Hspec.Runner"))],
modShapeRequires
=
fromList
[]},
elabFlagAssignment
=
fromList
[],
elabFlagDefaults
=
fromList
[],
elabPkgDescription
=
PackageDescription
{specVersion
=
CabalSpecV1_12,
package
=
PackageIdentifier
{pkgName
=
PackageName
"hspec",
pkgVersion
=
mkVersion
[2,9,4]},
licenseRaw
=
Right
MIT,
licenseFiles
=
[SymbolicPath
"LICENSE"],
copyright
=
"(c)
2011-2021
Simon
Hengel,\n(c)
2011-2012
Trystan
Spangler,\n(c)
2011
Greg
Weber",
maintainer
=
"Simon
Hengel
<sol@typeful.net>",
author
=
"",
stability
=
"experimental",
testedWith
=
[],
homepage
=
"http://hspec.github.io/",
pkgUrl
=
"",
bugReports
=
"https://github.com/hspec/hspec/issues",
sourceRepos
=
[SourceRepo
{repoKind
=
RepoHead,
repoType
=
Just
(KnownRepoType
Git),
repoLocation
=
Just
"https://github.com/hspec/hspec",
repoModule
=
Nothing,
repoBranch
=
Nothing,
repoTag
=
Nothing,
repoSubdir
=
Nothing}],
synopsis
=
"A
Testing
Framework
for
Haskell",
description
=
"Hspec
is
a
testing
framework
for
Haskell.

Some
of
Hspec's
distinctive\nfeatures
are:\n\n*
a
friendly
DSL
for
defining
tests\n\n*
integration
with
QuickCheck,
SmallCheck,
and
HUnit\n\n*
parallel
test
execution\n\n*
automatic
discovery
of
test
files\n\nThe
Hspec
Manual
is
at
<http://hspec.github.io/>.",
category
=
"Testing",
customFieldsPD
=
[],
buildTypeRaw
=
Just
Simple,
setupBuildInfo
=
Nothing,
library
=
Just
(Library
{libName
=
LMainLibName,
exposedModules
=
[ModuleName
"Test.Hspec",ModuleName
"Test.Hspec.Discover",ModuleName
"Test.Hspec.Formatters",ModuleName
"Test.Hspec.QuickCheck",ModuleName
"Test.Hspec.Runner"],
reexportedModules
=
[],
signatures
=
[],
libExposed
=
True,
libVisibility
=
LibraryVisibilityPublic,
libBuildInfo
=
BuildInfo
{buildable
=
True,
buildTools
=
[],
buildToolDepends
=
[],
cppOptions
=
[],
asmOptions
=
[],
cmmOptions
=
[],
ccOptions
=
[],
cxxOptions
=
[],
ldOptions
=
[],
hsc2hsOptions
=
[],
pkgconfigDepends
=
[],
frameworks
=
[],
extraFrameworkDirs
=
[],
asmSources
=
[],
cmmSources
=
[],
cSources
=
[],
cxxSources
=
[],
jsSources
=
[],
hsSourceDirs
=
[SymbolicPath
"src"],
otherModules
=
[ModuleName
"Paths_hspec"],
virtualModules
=
[],
autogenModules
=
[],
defaultLanguage
=
Just
Haskell2010,
otherLanguages
=
[],
defaultExtensions
=
[],
otherExtensions
=
[],
oldExtensions
=
[],
extraLibs
=
[],
extraLibsStatic
=
[],
extraGHCiLibs
=
[],
extraBundledLibs
=
[],
extraLibFlavours
=
[],
extraDynLibFlavours
=
[],
extraLibDirs
=
[],
extraLibDirsStatic
=
[],
includeDirs
=
[],
includes
=
[],
autogenIncludes
=
[],
installIncludes
=
[],
options
=
PerCompilerFlavor
["-Wall"]
[],
profOptions
=
PerCompilerFlavor
[]
[],
sharedOptions
=
PerCompilerFlavor
[]
[],
staticOptions
=
PerCompilerFlavor
[]
[],
customFieldsBI
=
[],
targetBuildDepends
=
[Dependency
(PackageName
"QuickCheck")
(OrLaterVersion
(mkVersion
[2,12]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"base")
(IntersectVersionRanges
(OrLaterVersion
(mkVersion
[4]))
(EarlierVersion
(mkVersion
[5])))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"hspec-core")
(ThisVersion
(mkVersion
[2,9,4]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"hspec-discover")
(ThisVersion
(mkVersion
[2,9,4]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"hspec-expectations")
(IntersectVersionRanges
(OrLaterVersion
(mkVersion
[0,8,2]))
(EarlierVersion
(mkVersion
[0,8,3])))
(fromNonEmpty
(LMainLibName
:|
[]))],
mixins
=
[]}}),
subLibraries
=
[],
executables
=
[],
foreignLibs
=
[],
testSuites
=
[],
benchmarks
=
[],
dataFiles
=
[],
dataDir
=
".",
extraSrcFiles
=
["version.yaml","CHANGES.markdown"],
extraTmpFiles
=
[],
extraDocFiles
=
[]},
elabPkgSourceLocation
=
RepoTarballPackage
(RepoSecure
{repoRemote
=
RemoteRepo
{remoteRepoName
=
RepoName
"hackage.haskell.org",
remoteRepoURI
=
http://hackage.haskell.org/,
remoteRepoSecure
=
Just
True,
remoteRepoRootKeys
=
["fe331502606802feac15e514d9b9ea83fee8b6ffef71335479a2e68d84adc6b0","1ea9ba32c526d1cc91ab5e5bd364ec5e9e8cb67179a471872f6e26f0ae773d42","2c6c3627bd6c982990239487f1abd02e08a02e6cf16edb105a8012d444d870c3","0a5c7ea47cd1b15f01f5f51a33adda7e655bc0f0b0615baa8e271f4c3351e21d","51f0161b906011b52c6613376b1ae937670da69322113a246a09f807c62f6921"],
remoteRepoKeyThreshold
=
3,
remoteRepoShouldTryHttps
=
True},
repoLocalDir
=
"/home/michaels/.cabal/packages/hackage.haskell.org"})
(PackageIdentifier
{pkgName
=
PackageName
"hspec",
pkgVersion
=
mkVersion
[2,9,4]})
Nothing,
elabPkgSourceHash
=
Just
(HashValue
"\163:\212\&7\221\176\217\156]M\234\205&\FS\CAND_\142\130\146\174\ETX\SIX\177\SOO\blK\NUL\232"),
elabLocalToProject
=
False,
elabBuildStyle
=
BuildAndInstall,
elabEnabledSpec
=
ComponentRequestedSpec
{testsRequested
=
False,
benchmarksRequested
=
False},
elabStanzasAvailable
=
OptionalStanzaSet
0,
elabStanzasRequested
=
OptionalStanzaMap
Nothing
Nothing,
elabSetupPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db"],
elabBuildPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db"],
elabRegisterPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db"],
elabInplaceSetupPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db",SpecificPackageDB
"/home/michaels/repos/cabal/cabal-testsuite/PackageTests/Regression/T7893/dist-newstyle/packagedb/ghc-8.10.7"],
elabInplaceBuildPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db",SpecificPackageDB
"/home/michaels/repos/cabal/cabal-testsuite/PackageTests/Regression/T7893/dist-newstyle/packagedb/ghc-8.10.7"],
elabInplaceRegisterPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db",SpecificPackageDB
"/home/michaels/repos/cabal/cabal-testsuite/PackageTests/Regression/T7893/dist-newstyle/packagedb/ghc-8.10.7"],
elabPkgDescriptionOverride
=
Just
"cabal-version:
1.12\n\n--
This
file
has
been
generated
from
package.yaml
by
hpack
version
0.34.6.\n--\n--
see:
https://github.com/sol/hpack\n\nname:












hspec\nversion:









2.9.4\nlicense:









MIT\nlicense-file:




LICENSE\ncopyright:







(c)
2011-2021
Simon
Hengel,\n

















(c)
2011-2012
Trystan
Spangler,\n

















(c)
2011
Greg
Weber\nmaintainer:






Simon
Hengel
<sol@typeful.net>\nbuild-type:






Simple\ncategory:








Testing\nstability:







experimental\nbug-reports:





https://github.com/hspec/hspec/issues\nhomepage:








http://hspec.github.io/\nsynopsis:








A
Testing
Framework
for
Haskell\ndescription:





Hspec
is
a
testing
framework
for
Haskell.

Some
of
Hspec's
distinctive\n

















features
are:\n

















.\n

















*
a
friendly
DSL
for
defining
tests\n

















.\n

















*
integration
with
QuickCheck,
SmallCheck,
and
HUnit\n

















.\n

















*
parallel
test
execution\n

















.\n

















*
automatic
discovery
of
test
files\n

















.\n

















The
Hspec
Manual
is
at
<http://hspec.github.io/>.\nextra-source-files:\n



version.yaml\n



CHANGES.markdown\n\nsource-repository
head\n

type:
git\n

location:
https://github.com/hspec/hspec\n\nlibrary\n

ghc-options:
-Wall\n

hs-source-dirs:\n





src\n

build-depends:\n





QuickCheck
>=2.12\n



,
base
==4.*\n



,
hspec-core
==2.9.4\n



,
hspec-discover
==2.9.4\n



,
hspec-expectations
==0.8.2.*\n

exposed-modules:\n





Test.Hspec\n





Test.Hspec.Discover\n





Test.Hspec.Formatters\n





Test.Hspec.QuickCheck\n





Test.Hspec.Runner\n

other-modules:\n





Paths_hspec\n

default-language:
Haskell2010\n",
elabVanillaLib
=
True,
elabSharedLib
=
True,
elabStaticLib
=
False,
elabDynExe
=
False,
elabFullyStaticExe
=
False,
elabGHCiLib
=
False,
elabProfLib
=
False,
elabProfExe
=
False,
elabProfLibDetail
=
ProfDetailDefault,
elabProfExeDetail
=
ProfDetailDefault,
elabCoverage
=
False,
elabOptimization
=
NormalOptimisation,
elabSplitObjs
=
False,
elabSplitSections
=
False,
elabStripLibs
=
False,
elabStripExes
=
False,
elabDebugInfo
=
NoDebugInfo,
elabDumpBuildInfo
=
NoDumpBuildInfo,
elabProgramPaths
=
fromList
[("ghc","/nix/store/lrwichshmxvlqnbbym9yg4bxqsrvc88j-ghc-8.10.7/bin/ghc"),("ghc-pkg","/nix/store/lrwichshmxvlqnbbym9yg4bxqsrvc88j-ghc-8.10.7/bin/ghc-pkg-8.10.7")],
elabProgramArgs
=
fromList
[],
elabProgramPathExtra
=
["/home/michaels/.cabal/bin"],
elabConfigureScriptArgs
=
[],
elabExtraLibDirs
=
[],
elabExtraLibDirsStatic
=
[],
elabExtraFrameworkDirs
=
[],
elabExtraIncludeDirs
=
[],
elabProgPrefix
=
Nothing,
elabProgSuffix
=
Nothing,
elabInstallDirs
=
InstallDirs
{prefix
=
"/home/michaels/.cabal/store/ghc-8.10.7/hspec-2.9.4-ec42a9365cc6b62ab362bfac04cd2b6e3a44b7d4db75006359f9814cb75e1a6a",
bindir
=
"/home/michaels/.cabal/store/ghc-8.10.7/hspec-2.9.4-ec42a9365cc6b62ab362bfac04cd2b6e3a44b7d4db75006359f9814cb75e1a6a/bin",
libdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/hspec-2.9.4-ec42a9365cc6b62ab362bfac04cd2b6e3a44b7d4db75006359f9814cb75e1a6a/lib",
libsubdir
=
"",
dynlibdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/hspec-2.9.4-ec42a9365cc6b62ab362bfac04cd2b6e3a44b7d4db75006359f9814cb75e1a6a/lib",
flibdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/hspec-2.9.4-ec42a9365cc6b62ab362bfac04cd2b6e3a44b7d4db75006359f9814cb75e1a6a/lib",
libexecdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/hspec-2.9.4-ec42a9365cc6b62ab362bfac04cd2b6e3a44b7d4db75006359f9814cb75e1a6a/libexec",
libexecsubdir
=
"",
includedir
=
"/home/michaels/.cabal/store/ghc-8.10.7/hspec-2.9.4-ec42a9365cc6b62ab362bfac04cd2b6e3a44b7d4db75006359f9814cb75e1a6a/lib/include",
datadir
=
"/home/michaels/.cabal/store/ghc-8.10.7/hspec-2.9.4-ec42a9365cc6b62ab362bfac04cd2b6e3a44b7d4db75006359f9814cb75e1a6a/share",
datasubdir
=
"",
docdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/hspec-2.9.4-ec42a9365cc6b62ab362bfac04cd2b6e3a44b7d4db75006359f9814cb75e1a6a/share/doc",
mandir
=
"/home/michaels/.cabal/store/ghc-8.10.7/hspec-2.9.4-ec42a9365cc6b62ab362bfac04cd2b6e3a44b7d4db75006359f9814cb75e1a6a/share/man",
htmldir
=
"/home/michaels/.cabal/store/ghc-8.10.7/hspec-2.9.4-ec42a9365cc6b62ab362bfac04cd2b6e3a44b7d4db75006359f9814cb75e1a6a/share/doc/html",
haddockdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/hspec-2.9.4-ec42a9365cc6b62ab362bfac04cd2b6e3a44b7d4db75006359f9814cb75e1a6a/share/doc/html",
sysconfdir
=
"/home/michaels/.cabal/store/ghc-8.10.7/hspec-2.9.4-ec42a9365cc6b62ab362bfac04cd2b6e3a44b7d4db75006359f9814cb75e1a6a/etc"},
elabHaddockHoogle
=
False,
elabHaddockHtml
=
False,
elabHaddockHtmlLocation
=
Nothing,
elabHaddockForeignLibs
=
False,
elabHaddockForHackage
=
ForDevelopment,
elabHaddockExecutables
=
False,
elabHaddockTestSuites
=
False,
elabHaddockBenchmarks
=
False,
elabHaddockInternal
=
False,
elabHaddockCss
=
Nothing,
elabHaddockLinkedSource
=
False,
elabHaddockQuickJump
=
False,
elabHaddockHscolourCss
=
Nothing,
elabHaddockContents
=
Nothing,
elabTestMachineLog
=
Just
"$pkgid.log",
elabTestHumanLog
=
Just
"$pkgid-$test-suite.log",
elabTestShowDetails
=
Just
Failures,
elabTestKeepTix
=
False,
elabTestWrapper
=
Nothing,
elabTestFailWhenNoTestSuites
=
False,
elabTestTestOptions
=
[],
elabBenchmarkOptions
=
[],
elabSetupScriptStyle
=
SetupNonCustomInternalLib,
elabSetupScriptCliVersion
=
mkVersion
[3,7,0,0],
elabConfigureTargets
=
[],
elabBuildTargets
=
[],
elabTestTargets
=
[],
elabBenchTargets
=
[],
elabReplTarget
=
Nothing,
elabHaddockTargets
=
[],
elabBuildHaddocks
=
False,
elabPkgOrComp
=
ElabPackage
(ElaboratedPackage
{pkgInstalledId
=
ComponentId
"hspec-2.9.4-ec42a9365cc6b62ab362bfac04cd2b6e3a44b7d4db75006359f9814cb75e1a6a",
pkgLibDependencies
=
ComponentDeps
{unComponentDeps
=
fromList
[(ComponentLib,[ComponentId
"QuickCheck-2.14.2-6467e0fb8e4c059a4b4a73f2bd7b7056d024e00a5bfbdcc6e27253b020fc4af3",ComponentId
"base-4.14.3.0",ComponentId
"hspec-core-2.9.4-a4b6df4a102da64bc1df3c51d1089b813efc927f4a5c926b7c9206839d67b032",ComponentId
"hspec-discover-2.9.4-0184a03e32400e6cc95459e46c2b4ea40472c74e152f031bba568df8b8e66c04",ComponentId
"hspec-expectations-0.8.2-c8aba5312eea257134f10ea7aad0a0fcd091fffbc14c4da551072b2fa727e86e"])]},
pkgDependsOnSelfLib
=
ComponentDeps
{unComponentDeps
=
fromList
[(ComponentLib,[()])]},
pkgExeDependencies
=
ComponentDeps
{unComponentDeps
=
fromList
[(ComponentLib,[])]},
pkgExeDependencyPaths
=
ComponentDeps
{unComponentDeps
=
fromList
[(ComponentLib,[])]},
pkgPkgConfigDependencies
=
[],
pkgStanzasEnabled
=
OptionalStanzaSet
0})}
ElaboratedConfiguredPackage
{elabUnitId
=
UnitId
"a-1-inplace",
elabComponentId
=
ComponentId
"a-1-inplace",
elabInstantiatedWith
=
fromList
[],
elabLinkedInstantiatedWith
=
fromList
[],
elabIsCanonical
=
True,
elabPkgSourceId
=
PackageIdentifier
{pkgName
=
PackageName
"a",
pkgVersion
=
mkVersion
[1]},
elabModuleShape
=
ModuleShape
{modShapeProvides
=
fromList
[(ModuleName
"A",OpenModule
(IndefFullUnitId
(ComponentId
"a-1-inplace")
(fromList
[]))
(ModuleName
"A"))],
modShapeRequires
=
fromList
[]},
elabFlagAssignment
=
fromList
[],
elabFlagDefaults
=
fromList
[],
elabPkgDescription
=
PackageDescription
{specVersion
=
CabalSpecV3_6,
package
=
PackageIdentifier
{pkgName
=
PackageName
"a",
pkgVersion
=
mkVersion
[1]},
licenseRaw
=
Left
NONE,
licenseFiles
=
[],
copyright
=
"",
maintainer
=
"",
author
=
"",
stability
=
"",
testedWith
=
[],
homepage
=
"",
pkgUrl
=
"",
bugReports
=
"",
sourceRepos
=
[],
synopsis
=
"",
description
=
"",
category
=
"",
customFieldsPD
=
[],
buildTypeRaw
=
Nothing,
setupBuildInfo
=
Nothing,
library
=
Just
(Library
{libName
=
LMainLibName,
exposedModules
=
[ModuleName
"A"],
reexportedModules
=
[],
signatures
=
[],
libExposed
=
True,
libVisibility
=
LibraryVisibilityPublic,
libBuildInfo
=
BuildInfo
{buildable
=
True,
buildTools
=
[],
buildToolDepends
=
[],
cppOptions
=
[],
asmOptions
=
[],
cmmOptions
=
[],
ccOptions
=
[],
cxxOptions
=
[],
ldOptions
=
[],
hsc2hsOptions
=
[],
pkgconfigDepends
=
[],
frameworks
=
[],
extraFrameworkDirs
=
[],
asmSources
=
[],
cmmSources
=
[],
cSources
=
[],
cxxSources
=
[],
jsSources
=
[],
hsSourceDirs
=
[SymbolicPath
"src"],
otherModules
=
[],
virtualModules
=
[],
autogenModules
=
[],
defaultLanguage
=
Just
Haskell2010,
otherLanguages
=
[],
defaultExtensions
=
[],
otherExtensions
=
[],
oldExtensions
=
[],
extraLibs
=
[],
extraLibsStatic
=
[],
extraGHCiLibs
=
[],
extraBundledLibs
=
[],
extraLibFlavours
=
[],
extraDynLibFlavours
=
[],
extraLibDirs
=
[],
extraLibDirsStatic
=
[],
includeDirs
=
[],
includes
=
[],
autogenIncludes
=
[],
installIncludes
=
[],
options
=
PerCompilerFlavor
["-Wall","-fhide-source-paths"]
[],
profOptions
=
PerCompilerFlavor
[]
[],
sharedOptions
=
PerCompilerFlavor
[]
[],
staticOptions
=
PerCompilerFlavor
[]
[],
customFieldsBI
=
[],
targetBuildDepends
=
[Dependency
(PackageName
"base")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[]))],
mixins
=
[]}}),
subLibraries
=
[],
executables
=
[],
foreignLibs
=
[],
testSuites
=
[TestSuite
{testName
=
UnqualComponentName
"a-tests",
testInterface
=
TestSuiteExeV10
(mkVersion
[1,0])
"Tests.hs",
testBuildInfo
=
BuildInfo
{buildable
=
True,
buildTools
=
[],
buildToolDepends
=
[],
cppOptions
=
[],
asmOptions
=
[],
cmmOptions
=
[],
ccOptions
=
[],
cxxOptions
=
[],
ldOptions
=
[],
hsc2hsOptions
=
[],
pkgconfigDepends
=
[],
frameworks
=
[],
extraFrameworkDirs
=
[],
asmSources
=
[],
cmmSources
=
[],
cSources
=
[],
cxxSources
=
[],
jsSources
=
[],
hsSourceDirs
=
[SymbolicPath
"unit-test"],
otherModules
=
[],
virtualModules
=
[],
autogenModules
=
[],
defaultLanguage
=
Just
Haskell2010,
otherLanguages
=
[],
defaultExtensions
=
[],
otherExtensions
=
[],
oldExtensions
=
[],
extraLibs
=
[],
extraLibsStatic
=
[],
extraGHCiLibs
=
[],
extraBundledLibs
=
[],
extraLibFlavours
=
[],
extraDynLibFlavours
=
[],
extraLibDirs
=
[],
extraLibDirsStatic
=
[],
includeDirs
=
[],
includes
=
[],
autogenIncludes
=
[],
installIncludes
=
[],
options
=
PerCompilerFlavor
["-Wall","-fhide-source-paths"]
[],
profOptions
=
PerCompilerFlavor
[]
[],
sharedOptions
=
PerCompilerFlavor
[]
[],
staticOptions
=
PerCompilerFlavor
[]
[],
customFieldsBI
=
[],
targetBuildDepends
=
[Dependency
(PackageName
"a")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"base")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"hspec")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[]))],
mixins
=
[]}}],
benchmarks
=
[],
dataFiles
=
[],
dataDir
=
".",
extraSrcFiles
=
[],
extraTmpFiles
=
[],
extraDocFiles
=
[]},
elabPkgSourceLocation
=
LocalUnpackedPackage
"/home/michaels/repos/cabal/cabal-testsuite/PackageTests/Regression/T7893/src/a",
elabPkgSourceHash
=
Nothing,
elabLocalToProject
=
True,
elabBuildStyle
=
BuildInplaceOnly,
elabEnabledSpec
=
ComponentRequestedSpec
{testsRequested
=
True,
benchmarksRequested
=
False},
elabStanzasAvailable
=
OptionalStanzaSet
1,
elabStanzasRequested
=
OptionalStanzaMap
Nothing
Nothing,
elabSetupPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db",SpecificPackageDB
"/home/michaels/repos/cabal/cabal-testsuite/PackageTests/Regression/T7893/dist-newstyle/packagedb/ghc-8.10.7"],
elabBuildPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db",SpecificPackageDB
"/home/michaels/repos/cabal/cabal-testsuite/PackageTests/Regression/T7893/dist-newstyle/packagedb/ghc-8.10.7"],
elabRegisterPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db",SpecificPackageDB
"/home/michaels/repos/cabal/cabal-testsuite/PackageTests/Regression/T7893/dist-newstyle/packagedb/ghc-8.10.7"],
elabInplaceSetupPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db",SpecificPackageDB
"/home/michaels/repos/cabal/cabal-testsuite/PackageTests/Regression/T7893/dist-newstyle/packagedb/ghc-8.10.7"],
elabInplaceBuildPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db",SpecificPackageDB
"/home/michaels/repos/cabal/cabal-testsuite/PackageTests/Regression/T7893/dist-newstyle/packagedb/ghc-8.10.7"],
elabInplaceRegisterPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db",SpecificPackageDB
"/home/michaels/repos/cabal/cabal-testsuite/PackageTests/Regression/T7893/dist-newstyle/packagedb/ghc-8.10.7"],
elabPkgDescriptionOverride
=
Nothing,
elabVanillaLib
=
True,
elabSharedLib
=
True,
elabStaticLib
=
False,
elabDynExe
=
False,
elabFullyStaticExe
=
False,
elabGHCiLib
=
False,
elabProfLib
=
False,
elabProfExe
=
False,
elabProfLibDetail
=
ProfDetailDefault,
elabProfExeDetail
=
ProfDetailDefault,
elabCoverage
=
True,
elabOptimization
=
NormalOptimisation,
elabSplitObjs
=
False,
elabSplitSections
=
False,
elabStripLibs
=
False,
elabStripExes
=
False,
elabDebugInfo
=
NoDebugInfo,
elabDumpBuildInfo
=
NoDumpBuildInfo,
elabProgramPaths
=
fromList
[("ghc","/nix/store/lrwichshmxvlqnbbym9yg4bxqsrvc88j-ghc-8.10.7/bin/ghc"),("ghc-pkg","/nix/store/lrwichshmxvlqnbbym9yg4bxqsrvc88j-ghc-8.10.7/bin/ghc-pkg-8.10.7")],
elabProgramArgs
=
fromList
[],
elabProgramPathExtra
=
["/home/michaels/.cabal/bin"],
elabConfigureScriptArgs
=
[],
elabExtraLibDirs
=
[],
elabExtraLibDirsStatic
=
[],
elabExtraFrameworkDirs
=
[],
elabExtraIncludeDirs
=
[],
elabProgPrefix
=
Nothing,
elabProgSuffix
=
Nothing,
elabInstallDirs
=
InstallDirs
{prefix
=
"/home/michaels/.cabal",
bindir
=
"/home/michaels/.cabal/bin",
libdir
=
"/home/michaels/.cabal/lib/x86_64-linux-ghc-8.10.7/a-1-inplace",
libsubdir
=
"",
dynlibdir
=
"/home/michaels/.cabal/lib/x86_64-linux-ghc-8.10.7",
flibdir
=
"/home/michaels/.cabal/lib",
libexecdir
=
"/home/michaels/.cabal/libexec/x86_64-linux-ghc-8.10.7/a-1",
libexecsubdir
=
"",
includedir
=
"/home/michaels/.cabal/lib/x86_64-linux-ghc-8.10.7/a-1-inplace/include",
datadir
=
"/home/michaels/.cabal/share/x86_64-linux-ghc-8.10.7/a-1",
datasubdir
=
"",
docdir
=
"/home/michaels/.cabal/share/doc/x86_64-linux-ghc-8.10.7/a-1",
mandir
=
"/home/michaels/.cabal/share/man",
htmldir
=
"/home/michaels/.cabal/share/doc/x86_64-linux-ghc-8.10.7/a-1/html",
haddockdir
=
"/home/michaels/.cabal/share/doc/x86_64-linux-ghc-8.10.7/a-1/html",
sysconfdir
=
"/home/michaels/.cabal/etc"},
elabHaddockHoogle
=
False,
elabHaddockHtml
=
False,
elabHaddockHtmlLocation
=
Nothing,
elabHaddockForeignLibs
=
False,
elabHaddockForHackage
=
ForDevelopment,
elabHaddockExecutables
=
False,
elabHaddockTestSuites
=
False,
elabHaddockBenchmarks
=
False,
elabHaddockInternal
=
False,
elabHaddockCss
=
Nothing,
elabHaddockLinkedSource
=
False,
elabHaddockQuickJump
=
False,
elabHaddockHscolourCss
=
Nothing,
elabHaddockContents
=
Nothing,
elabTestMachineLog
=
Just
"$pkgid.log",
elabTestHumanLog
=
Just
"$pkgid-$test-suite.log",
elabTestShowDetails
=
Just
Failures,
elabTestKeepTix
=
False,
elabTestWrapper
=
Nothing,
elabTestFailWhenNoTestSuites
=
False,
elabTestTestOptions
=
[],
elabBenchmarkOptions
=
[],
elabSetupScriptStyle
=
SetupNonCustomInternalLib,
elabSetupScriptCliVersion
=
mkVersion
[3,7,0,0],
elabConfigureTargets
=
[],
elabBuildTargets
=
[],
elabTestTargets
=
[],
elabBenchTargets
=
[],
elabReplTarget
=
Nothing,
elabHaddockTargets
=
[],
elabBuildHaddocks
=
False,
elabPkgOrComp
=
ElabPackage
(ElaboratedPackage
{pkgInstalledId
=
ComponentId
"a-1-inplace",
pkgLibDependencies
=
ComponentDeps
{unComponentDeps
=
fromList
[(ComponentLib,[ComponentId
"base-4.14.3.0"]),(ComponentTest
(UnqualComponentName
"a-tests"),[ComponentId
"base-4.14.3.0",ComponentId
"hspec-2.9.4-ec42a9365cc6b62ab362bfac04cd2b6e3a44b7d4db75006359f9814cb75e1a6a"])]},
pkgDependsOnSelfLib
=
ComponentDeps
{unComponentDeps
=
fromList
[(ComponentLib,[()]),(ComponentTest
(UnqualComponentName
"a-tests"),[()])]},
pkgExeDependencies
=
ComponentDeps
{unComponentDeps
=
fromList
[(ComponentLib,[]),(ComponentTest
(UnqualComponentName
"a-tests"),[])]},
pkgExeDependencyPaths
=
ComponentDeps
{unComponentDeps
=
fromList
[(ComponentLib,[]),(ComponentTest
(UnqualComponentName
"a-tests"),[])]},
pkgPkgConfigDependencies
=
[],
pkgStanzasEnabled
=
OptionalStanzaSet
0})}
ElaboratedConfiguredPackage
{elabUnitId
=
UnitId
"b-1-inplace",
elabComponentId
=
ComponentId
"b-1-inplace",
elabInstantiatedWith
=
fromList
[],
elabLinkedInstantiatedWith
=
fromList
[],
elabIsCanonical
=
True,
elabPkgSourceId
=
PackageIdentifier
{pkgName
=
PackageName
"b",
pkgVersion
=
mkVersion
[1]},
elabModuleShape
=
ModuleShape
{modShapeProvides
=
fromList
[(ModuleName
"B",OpenModule
(IndefFullUnitId
(ComponentId
"b-1-inplace")
(fromList
[]))
(ModuleName
"B"))],
modShapeRequires
=
fromList
[]},
elabFlagAssignment
=
fromList
[],
elabFlagDefaults
=
fromList
[],
elabPkgDescription
=
PackageDescription
{specVersion
=
CabalSpecV3_6,
package
=
PackageIdentifier
{pkgName
=
PackageName
"b",
pkgVersion
=
mkVersion
[1]},
licenseRaw
=
Left
NONE,
licenseFiles
=
[],
copyright
=
"",
maintainer
=
"",
author
=
"",
stability
=
"",
testedWith
=
[],
homepage
=
"",
pkgUrl
=
"",
bugReports
=
"",
sourceRepos
=
[],
synopsis
=
"",
description
=
"",
category
=
"",
customFieldsPD
=
[],
buildTypeRaw
=
Nothing,
setupBuildInfo
=
Nothing,
library
=
Just
(Library
{libName
=
LMainLibName,
exposedModules
=
[ModuleName
"B"],
reexportedModules
=
[],
signatures
=
[],
libExposed
=
True,
libVisibility
=
LibraryVisibilityPublic,
libBuildInfo
=
BuildInfo
{buildable
=
True,
buildTools
=
[],
buildToolDepends
=
[],
cppOptions
=
[],
asmOptions
=
[],
cmmOptions
=
[],
ccOptions
=
[],
cxxOptions
=
[],
ldOptions
=
[],
hsc2hsOptions
=
[],
pkgconfigDepends
=
[],
frameworks
=
[],
extraFrameworkDirs
=
[],
asmSources
=
[],
cmmSources
=
[],
cSources
=
[],
cxxSources
=
[],
jsSources
=
[],
hsSourceDirs
=
[SymbolicPath
"src"],
otherModules
=
[],
virtualModules
=
[],
autogenModules
=
[],
defaultLanguage
=
Just
Haskell2010,
otherLanguages
=
[],
defaultExtensions
=
[],
otherExtensions
=
[],
oldExtensions
=
[],
extraLibs
=
[],
extraLibsStatic
=
[],
extraGHCiLibs
=
[],
extraBundledLibs
=
[],
extraLibFlavours
=
[],
extraDynLibFlavours
=
[],
extraLibDirs
=
[],
extraLibDirsStatic
=
[],
includeDirs
=
[],
includes
=
[],
autogenIncludes
=
[],
installIncludes
=
[],
options
=
PerCompilerFlavor
["-Wall","-fhide-source-paths"]
[],
profOptions
=
PerCompilerFlavor
[]
[],
sharedOptions
=
PerCompilerFlavor
[]
[],
staticOptions
=
PerCompilerFlavor
[]
[],
customFieldsBI
=
[],
targetBuildDepends
=
[Dependency
(PackageName
"a")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"base")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[]))],
mixins
=
[]}}),
subLibraries
=
[],
executables
=
[],
foreignLibs
=
[],
testSuites
=
[TestSuite
{testName
=
UnqualComponentName
"b-tests",
testInterface
=
TestSuiteExeV10
(mkVersion
[1,0])
"Tests.hs",
testBuildInfo
=
BuildInfo
{buildable
=
True,
buildTools
=
[],
buildToolDepends
=
[],
cppOptions
=
[],
asmOptions
=
[],
cmmOptions
=
[],
ccOptions
=
[],
cxxOptions
=
[],
ldOptions
=
[],
hsc2hsOptions
=
[],
pkgconfigDepends
=
[],
frameworks
=
[],
extraFrameworkDirs
=
[],
asmSources
=
[],
cmmSources
=
[],
cSources
=
[],
cxxSources
=
[],
jsSources
=
[],
hsSourceDirs
=
[SymbolicPath
"unit-test"],
otherModules
=
[],
virtualModules
=
[],
autogenModules
=
[],
defaultLanguage
=
Just
Haskell2010,
otherLanguages
=
[],
defaultExtensions
=
[],
otherExtensions
=
[],
oldExtensions
=
[],
extraLibs
=
[],
extraLibsStatic
=
[],
extraGHCiLibs
=
[],
extraBundledLibs
=
[],
extraLibFlavours
=
[],
extraDynLibFlavours
=
[],
extraLibDirs
=
[],
extraLibDirsStatic
=
[],
includeDirs
=
[],
includes
=
[],
autogenIncludes
=
[],
installIncludes
=
[],
options
=
PerCompilerFlavor
["-Wall","-fhide-source-paths"]
[],
profOptions
=
PerCompilerFlavor
[]
[],
sharedOptions
=
PerCompilerFlavor
[]
[],
staticOptions
=
PerCompilerFlavor
[]
[],
customFieldsBI
=
[],
targetBuildDepends
=
[Dependency
(PackageName
"base")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[])),Dependency
(PackageName
"hspec")
(OrLaterVersion
(mkVersion
[0]))
(fromNonEmpty
(LMainLibName
:|
[]))],
mixins
=
[]}}],
benchmarks
=
[],
dataFiles
=
[],
dataDir
=
".",
extraSrcFiles
=
[],
extraTmpFiles
=
[],
extraDocFiles
=
[]},
elabPkgSourceLocation
=
LocalUnpackedPackage
"/home/michaels/repos/cabal/cabal-testsuite/PackageTests/Regression/T7893/src/b",
elabPkgSourceHash
=
Nothing,
elabLocalToProject
=
True,
elabBuildStyle
=
BuildInplaceOnly,
elabEnabledSpec
=
ComponentRequestedSpec
{testsRequested
=
True,
benchmarksRequested
=
False},
elabStanzasAvailable
=
OptionalStanzaSet
1,
elabStanzasRequested
=
OptionalStanzaMap
Nothing
Nothing,
elabSetupPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db",SpecificPackageDB
"/home/michaels/repos/cabal/cabal-testsuite/PackageTests/Regression/T7893/dist-newstyle/packagedb/ghc-8.10.7"],
elabBuildPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db",SpecificPackageDB
"/home/michaels/repos/cabal/cabal-testsuite/PackageTests/Regression/T7893/dist-newstyle/packagedb/ghc-8.10.7"],
elabRegisterPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db",SpecificPackageDB
"/home/michaels/repos/cabal/cabal-testsuite/PackageTests/Regression/T7893/dist-newstyle/packagedb/ghc-8.10.7"],
elabInplaceSetupPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db",SpecificPackageDB
"/home/michaels/repos/cabal/cabal-testsuite/PackageTests/Regression/T7893/dist-newstyle/packagedb/ghc-8.10.7"],
elabInplaceBuildPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db",SpecificPackageDB
"/home/michaels/repos/cabal/cabal-testsuite/PackageTests/Regression/T7893/dist-newstyle/packagedb/ghc-8.10.7"],
elabInplaceRegisterPackageDBStack
=
[GlobalPackageDB,SpecificPackageDB
"/home/michaels/.cabal/store/ghc-8.10.7/package.db",SpecificPackageDB
"/home/michaels/repos/cabal/cabal-testsuite/PackageTests/Regression/T7893/dist-newstyle/packagedb/ghc-8.10.7"],
elabPkgDescriptionOverride
=
Nothing,
elabVanillaLib
=
True,
elabSharedLib
=
True,
elabStaticLib
=
False,
elabDynExe
=
False,
elabFullyStaticExe
=
False,
elabGHCiLib
=
False,
elabProfLib
=
False,
elabProfExe
=
False,
elabProfLibDetail
=
ProfDetailDefault,
elabProfExeDetail
=
ProfDetailDefault,
elabCoverage
=
True,
elabOptimization
=
NormalOptimisation,
elabSplitObjs
=
False,
elabSplitSections
=
False,
elabStripLibs
=
False,
elabStripExes
=
False,
elabDebugInfo
=
NoDebugInfo,
elabDumpBuildInfo
=
NoDumpBuildInfo,
elabProgramPaths
=
fromList
[("ghc","/nix/store/lrwichshmxvlqnbbym9yg4bxqsrvc88j-ghc-8.10.7/bin/ghc"),("ghc-pkg","/nix/store/lrwichshmxvlqnbbym9yg4bxqsrvc88j-ghc-8.10.7/bin/ghc-pkg-8.10.7")],
elabProgramArgs
=
fromList
[],
elabProgramPathExtra
=
["/home/michaels/.cabal/bin"],
elabConfigureScriptArgs
=
[],
elabExtraLibDirs
=
[],
elabExtraLibDirsStatic
=
[],
elabExtraFrameworkDirs
=
[],
elabExtraIncludeDirs
=
[],
elabProgPrefix
=
Nothing,
elabProgSuffix
=
Nothing,
elabInstallDirs
=
InstallDirs
{prefix
=
"/home/michaels/.cabal",
bindir
=
"/home/michaels/.cabal/bin",
libdir
=
"/home/michaels/.cabal/lib/x86_64-linux-ghc-8.10.7/b-1-inplace",
libsubdir
=
"",
dynlibdir
=
"/home/michaels/.cabal/lib/x86_64-linux-ghc-8.10.7",
flibdir
=
"/home/michaels/.cabal/lib",
libexecdir
=
"/home/michaels/.cabal/libexec/x86_64-linux-ghc-8.10.7/b-1",
libexecsubdir
=
"",
includedir
=
"/home/michaels/.cabal/lib/x86_64-linux-ghc-8.10.7/b-1-inplace/include",
datadir
=
"/home/michaels/.cabal/share/x86_64-linux-ghc-8.10.7/b-1",
datasubdir
=
"",
docdir
=
"/home/michaels/.cabal/share/doc/x86_64-linux-ghc-8.10.7/b-1",
mandir
=
"/home/michaels/.cabal/share/man",
htmldir
=
"/home/michaels/.cabal/share/doc/x86_64-linux-ghc-8.10.7/b-1/html",
haddockdir
=
"/home/michaels/.cabal/share/doc/x86_64-linux-ghc-8.10.7/b-1/html",
sysconfdir
=
"/home/michaels/.cabal/etc"},
elabHaddockHoogle
=
False,
elabHaddockHtml
=
False,
elabHaddockHtmlLocation
=
Nothing,
elabHaddockForeignLibs
=
False,
elabHaddockForHackage
=
ForDevelopment,
elabHaddockExecutables
=
False,
elabHaddockTestSuites
=
False,
elabHaddockBenchmarks
=
False,
elabHaddockInternal
=
False,
elabHaddockCss
=
Nothing,
elabHaddockLinkedSource
=
False,
elabHaddockQuickJump
=
False,
elabHaddockHscolourCss
=
Nothing,
elabHaddockContents
=
Nothing,
elabTestMachineLog
=
Just
"$pkgid.log",
elabTestHumanLog
=
Just
"$pkgid-$test-suite.log",
elabTestShowDetails
=
Just
Failures,
elabTestKeepTix
=
False,
elabTestWrapper
=
Nothing,
elabTestFailWhenNoTestSuites
=
False,
elabTestTestOptions
=
[],
elabBenchmarkOptions
=
[],
elabSetupScriptStyle
=
SetupNonCustomInternalLib,
elabSetupScriptCliVersion
=
mkVersion
[3,7,0,0],
elabConfigureTargets
=
[],
elabBuildTargets
=
[],
elabTestTargets
=
[],
elabBenchTargets
=
[],
elabReplTarget
=
Nothing,
elabHaddockTargets
=
[],
elabBuildHaddocks
=
False,
elabPkgOrComp
=
ElabPackage
(ElaboratedPackage
{pkgInstalledId
=
ComponentId
"b-1-inplace",
pkgLibDependencies
=
ComponentDeps
{unComponentDeps
=
fromList
[(ComponentLib,[ComponentId
"a-1-inplace",ComponentId
"base-4.14.3.0"]),(ComponentTest
(UnqualComponentName
"b-tests"),[ComponentId
"base-4.14.3.0",ComponentId
"hspec-2.9.4-ec42a9365cc6b62ab362bfac04cd2b6e3a44b7d4db75006359f9814cb75e1a6a"])]},
pkgDependsOnSelfLib
=
ComponentDeps
{unComponentDeps
=
fromList
[(ComponentLib,[()])]},
pkgExeDependencies
=
ComponentDeps
{unComponentDeps
=
fromList
[(ComponentLib,[]),(ComponentTest
(UnqualComponentName
"b-tests"),[])]},
pkgExeDependencyPaths
=
ComponentDeps
{unComponentDeps
=
fromList
[(ComponentLib,[]),(ComponentTest
(UnqualComponentName
"b-tests"),[])]},
pkgPkgConfigDependencies
=
[],
pkgStanzasEnabled
=
OptionalStanzaSet
0})}
Error:
cabal:
Could
not
find
test
program
"/home/michaels/repos/cabal/cabal-testsuite/PackageTests/Regression/T7893/dist-newstyle/build/x86_64-linux/ghc-8.10.7/a-1/build/a-tests/a-tests".
Did
you
build
the
package
first?

Error:
cabal:
Tests
failed
for
a-1
(which
is
required
by
b-1).

